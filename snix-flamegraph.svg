<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="3770"><g><title>&lt;nix_compat::derivation::output::Output as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="0.0265%" y="389" width="0.0265%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2765%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.03%)</title><rect x="0.0265%" y="373" width="0.0265%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2765%" y="383.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="0.0265%" y="357" width="0.0265%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2765%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="0.0265%" y="341" width="0.0265%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2765%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="0.0265%" y="325" width="0.0265%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2765%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.08%)</title><rect x="0.0000%" y="405" width="0.0796%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="415.50"></text></g><g><title>bstr::impls::bstring::&lt;impl core::fmt::Debug for bstr::bstring::BString&gt;::fmt (1 samples, 0.03%)</title><rect x="0.0531%" y="389" width="0.0265%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3031%" y="399.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::fmt::Debug for bstr::bstr::BStr&gt;::fmt (1 samples, 0.03%)</title><rect x="0.0531%" y="373" width="0.0265%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3031%" y="383.50"></text></g><g><title>&lt;bstr::utf8::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.0531%" y="357" width="0.0265%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3031%" y="367.50"></text></g><g><title>bstr::utf8::decode_lossy (1 samples, 0.03%)</title><rect x="0.0531%" y="341" width="0.0265%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3031%" y="351.50"></text></g><g><title>bstr::utf8::decode (1 samples, 0.03%)</title><rect x="0.0531%" y="325" width="0.0265%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3031%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.0796%" y="405" width="0.0265%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3296%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.0796%" y="389" width="0.0265%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3296%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="0.1061%" y="405" width="0.0265%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.3561%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2122%" y="389" width="0.0265%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="0.4622%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.19%)</title><rect x="0.1326%" y="405" width="0.1857%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="7"/><text x="0.3826%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.08%)</title><rect x="0.2387%" y="389" width="0.0796%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="3"/><text x="0.4887%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="0.3183%" y="405" width="0.0265%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="0.5683%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="0.3448%" y="405" width="0.0265%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="1"/><text x="0.5948%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="0.3448%" y="389" width="0.0265%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="0.5948%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="0.3448%" y="373" width="0.0265%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="0.5948%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="0.3448%" y="357" width="0.0265%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="0.5948%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="0.3448%" y="341" width="0.0265%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="1"/><text x="0.5948%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="0.3714%" y="405" width="0.0265%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="0.6214%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="0.3714%" y="389" width="0.0265%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="0.6214%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="0.3714%" y="373" width="0.0265%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.6214%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="0.3714%" y="357" width="0.0265%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="0.6214%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.3714%" y="341" width="0.0265%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="0.6214%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="0.3714%" y="325" width="0.0265%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="0.6214%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="0.3714%" y="309" width="0.0265%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="0.6214%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="0.3714%" y="293" width="0.0265%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="1"/><text x="0.6214%" y="303.50"></text></g><g><title>nix_compat::store_path::StorePath&lt;S&gt;::to_absolute_path (1 samples, 0.03%)</title><rect x="0.3714%" y="277" width="0.0265%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="0.6214%" y="287.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.03%)</title><rect x="0.3714%" y="261" width="0.0265%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="0.6214%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.03%)</title><rect x="0.3714%" y="245" width="0.0265%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="0.6214%" y="255.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.03%)</title><rect x="0.3714%" y="229" width="0.0265%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="0.6214%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.03%)</title><rect x="0.3714%" y="213" width="0.0265%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="0.6214%" y="223.50"></text></g><g><title>&lt;nix_compat::store_path::StorePath&lt;S&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="0.3714%" y="197" width="0.0265%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="0.6214%" y="207.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="0.3714%" y="181" width="0.0265%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="0.6214%" y="191.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="0.3714%" y="165" width="0.0265%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="1"/><text x="0.6214%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="0.3714%" y="149" width="0.0265%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="1"/><text x="0.6214%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="0.3714%" y="133" width="0.0265%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="0.6214%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="0.3979%" y="405" width="0.0265%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="0.6479%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="0.3979%" y="389" width="0.0265%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="0.6479%" y="399.50"></text></g><g><title>snix_eval::builtins::impure::impure_builtins::builtin_read_dir::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="0.3979%" y="373" width="0.0265%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="0.6479%" y="383.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.03%)</title><rect x="0.3979%" y="357" width="0.0265%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="1"/><text x="0.6479%" y="367.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1 samples, 0.03%)</title><rect x="0.3979%" y="341" width="0.0265%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="0.6479%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.4244%" y="405" width="0.0265%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="1"/><text x="0.6744%" y="415.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.03%)</title><rect x="0.4244%" y="389" width="0.0265%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="1"/><text x="0.6744%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.03%)</title><rect x="0.4244%" y="373" width="0.0265%" height="15" fill="rgb(239,60,40)" fg:x="16" fg:w="1"/><text x="0.6744%" y="383.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="0.4509%" y="405" width="0.0265%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="1"/><text x="0.7009%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="0.4509%" y="389" width="0.0265%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="0.7009%" y="399.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.03%)</title><rect x="0.4775%" y="405" width="0.0265%" height="15" fill="rgb(250,213,24)" fg:x="18" fg:w="1"/><text x="0.7275%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.03%)</title><rect x="0.4775%" y="389" width="0.0265%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="1"/><text x="0.7275%" y="399.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="0.5040%" y="405" width="0.0265%" height="15" fill="rgb(231,138,38)" fg:x="19" fg:w="1"/><text x="0.7540%" y="415.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.5040%" y="389" width="0.0265%" height="15" fill="rgb(231,145,46)" fg:x="19" fg:w="1"/><text x="0.7540%" y="399.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.32%)</title><rect x="0.8488%" y="341" width="0.3183%" height="15" fill="rgb(251,118,11)" fg:x="32" fg:w="12"/><text x="1.0988%" y="351.50"></text></g><g><title>core::clone::Clone::clone (15 samples, 0.40%)</title><rect x="0.7958%" y="357" width="0.3979%" height="15" fill="rgb(217,147,25)" fg:x="30" fg:w="15"/><text x="1.0458%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="1.1671%" y="341" width="0.0265%" height="15" fill="rgb(247,81,37)" fg:x="44" fg:w="1"/><text x="1.4171%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1671%" y="325" width="0.0265%" height="15" fill="rgb(209,12,38)" fg:x="44" fg:w="1"/><text x="1.4171%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.90%)</title><rect x="0.5305%" y="405" width="0.9019%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="34"/><text x="0.7805%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (34 samples, 0.90%)</title><rect x="0.5305%" y="389" width="0.9019%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="34"/><text x="0.7805%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (34 samples, 0.90%)</title><rect x="0.5305%" y="373" width="0.9019%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="34"/><text x="0.7805%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.24%)</title><rect x="1.1936%" y="357" width="0.2387%" height="15" fill="rgb(210,229,1)" fg:x="45" fg:w="9"/><text x="1.4436%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.24%)</title><rect x="1.1936%" y="341" width="0.2387%" height="15" fill="rgb(222,148,37)" fg:x="45" fg:w="9"/><text x="1.4436%" y="351.50"></text></g><g><title>core::ptr::write (9 samples, 0.24%)</title><rect x="1.1936%" y="325" width="0.2387%" height="15" fill="rgb(234,67,33)" fg:x="45" fg:w="9"/><text x="1.4436%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.4324%" y="357" width="0.0265%" height="15" fill="rgb(247,98,35)" fg:x="54" fg:w="1"/><text x="1.6824%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="1.4324%" y="341" width="0.0265%" height="15" fill="rgb(247,138,52)" fg:x="54" fg:w="1"/><text x="1.6824%" y="351.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.4324%" y="325" width="0.0265%" height="15" fill="rgb(213,79,30)" fg:x="54" fg:w="1"/><text x="1.6824%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="1.4324%" y="309" width="0.0265%" height="15" fill="rgb(246,177,23)" fg:x="54" fg:w="1"/><text x="1.6824%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.19%)</title><rect x="1.4589%" y="357" width="0.1857%" height="15" fill="rgb(230,62,27)" fg:x="55" fg:w="7"/><text x="1.7089%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.19%)</title><rect x="1.4589%" y="341" width="0.1857%" height="15" fill="rgb(216,154,8)" fg:x="55" fg:w="7"/><text x="1.7089%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(snix_eval::value::string::NixString,snix_eval::value::Value)&gt; (7 samples, 0.19%)</title><rect x="1.4589%" y="325" width="0.1857%" height="15" fill="rgb(244,35,45)" fg:x="55" fg:w="7"/><text x="1.7089%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::string::NixString&gt; (7 samples, 0.19%)</title><rect x="1.4589%" y="309" width="0.1857%" height="15" fill="rgb(251,115,12)" fg:x="55" fg:w="7"/><text x="1.7089%" y="319.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::ops::drop::Drop&gt;::drop (7 samples, 0.19%)</title><rect x="1.4589%" y="293" width="0.1857%" height="15" fill="rgb(240,54,50)" fg:x="55" fg:w="7"/><text x="1.7089%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="1.6180%" y="277" width="0.0265%" height="15" fill="rgb(233,84,52)" fg:x="61" fg:w="1"/><text x="1.8680%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.24%)</title><rect x="1.4324%" y="405" width="0.2387%" height="15" fill="rgb(207,117,47)" fg:x="54" fg:w="9"/><text x="1.6824%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9 samples, 0.24%)</title><rect x="1.4324%" y="389" width="0.2387%" height="15" fill="rgb(249,43,39)" fg:x="54" fg:w="9"/><text x="1.6824%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (9 samples, 0.24%)</title><rect x="1.4324%" y="373" width="0.2387%" height="15" fill="rgb(209,38,44)" fg:x="54" fg:w="9"/><text x="1.6824%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="1.6446%" y="357" width="0.0265%" height="15" fill="rgb(236,212,23)" fg:x="62" fg:w="1"/><text x="1.8946%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="1.6446%" y="341" width="0.0265%" height="15" fill="rgb(242,79,21)" fg:x="62" fg:w="1"/><text x="1.8946%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="1.6446%" y="325" width="0.0265%" height="15" fill="rgb(211,96,35)" fg:x="62" fg:w="1"/><text x="1.8946%" y="335.50"></text></g><g><title>&lt;indicatif::format::BinaryBytes as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="1.6711%" y="405" width="0.0265%" height="15" fill="rgb(253,215,40)" fg:x="63" fg:w="1"/><text x="1.9211%" y="415.50"></text></g><g><title>&lt;indicatif::format::HumanDuration as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="1.6976%" y="405" width="0.0265%" height="15" fill="rgb(211,81,21)" fg:x="64" fg:w="1"/><text x="1.9476%" y="415.50"></text></g><g><title>&lt;indicatif::style::PaddedStringDisplay as core::fmt::Display&gt;::fmt (3 samples, 0.08%)</title><rect x="1.7241%" y="405" width="0.0796%" height="15" fill="rgb(208,190,38)" fg:x="65" fg:w="3"/><text x="1.9741%" y="415.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="1.7772%" y="389" width="0.0265%" height="15" fill="rgb(235,213,38)" fg:x="67" fg:w="1"/><text x="2.0272%" y="399.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.05%)</title><rect x="1.8037%" y="405" width="0.0531%" height="15" fill="rgb(237,122,38)" fg:x="68" fg:w="2"/><text x="2.0537%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="1.8302%" y="389" width="0.0265%" height="15" fill="rgb(244,218,35)" fg:x="69" fg:w="1"/><text x="2.0802%" y="399.50"></text></g><g><title>&lt;rnix::ast::nodes::Attr as rowan::ast::AstNode&gt;::cast (1 samples, 0.03%)</title><rect x="1.8568%" y="405" width="0.0265%" height="15" fill="rgb(240,68,47)" fg:x="70" fg:w="1"/><text x="2.1068%" y="415.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::kind (1 samples, 0.03%)</title><rect x="1.8568%" y="389" width="0.0265%" height="15" fill="rgb(210,16,53)" fg:x="70" fg:w="1"/><text x="2.1068%" y="399.50"></text></g><g><title>rowan::cursor::SyntaxNode::kind (1 samples, 0.03%)</title><rect x="1.8568%" y="373" width="0.0265%" height="15" fill="rgb(235,124,12)" fg:x="70" fg:w="1"/><text x="2.1068%" y="383.50"></text></g><g><title>rowan::cursor::NodeData::kind (1 samples, 0.03%)</title><rect x="1.8568%" y="357" width="0.0265%" height="15" fill="rgb(224,169,11)" fg:x="70" fg:w="1"/><text x="2.1068%" y="367.50"></text></g><g><title>rowan::green::element::&lt;impl rowan::utility_types::NodeOrToken&lt;&amp;rowan::green::node::GreenNodeData,&amp;rowan::green::token::GreenTokenData&gt;&gt;::kind (1 samples, 0.03%)</title><rect x="1.8568%" y="341" width="0.0265%" height="15" fill="rgb(250,166,2)" fg:x="70" fg:w="1"/><text x="2.1068%" y="351.50"></text></g><g><title>&lt;rnix::ast::nodes::Expr as rowan::ast::AstNode&gt;::cast (1 samples, 0.03%)</title><rect x="1.8833%" y="405" width="0.0265%" height="15" fill="rgb(242,216,29)" fg:x="71" fg:w="1"/><text x="2.1333%" y="415.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::kind (1 samples, 0.03%)</title><rect x="1.8833%" y="389" width="0.0265%" height="15" fill="rgb(230,116,27)" fg:x="71" fg:w="1"/><text x="2.1333%" y="399.50"></text></g><g><title>&lt;rnix::NixLanguage as rowan::api::Language&gt;::kind_from_raw (1 samples, 0.03%)</title><rect x="1.8833%" y="373" width="0.0265%" height="15" fill="rgb(228,99,48)" fg:x="71" fg:w="1"/><text x="2.1333%" y="383.50"></text></g><g><title>&lt;rnix::ast::nodes::Root as rowan::ast::AstNode&gt;::cast (1 samples, 0.03%)</title><rect x="1.9098%" y="405" width="0.0265%" height="15" fill="rgb(253,11,6)" fg:x="72" fg:w="1"/><text x="2.1598%" y="415.50"></text></g><g><title>&lt;rnix::ast::nodes::Str as snix_eval::spans::ToSpan&gt;::span_for (1 samples, 0.03%)</title><rect x="1.9363%" y="405" width="0.0265%" height="15" fill="rgb(247,143,39)" fg:x="73" fg:w="1"/><text x="2.1863%" y="415.50"></text></g><g><title>&lt;rowan::api::SyntaxNode&lt;rnix::NixLanguage&gt; as snix_eval::spans::ToSpan&gt;::span_for (1 samples, 0.03%)</title><rect x="1.9363%" y="389" width="0.0265%" height="15" fill="rgb(236,97,10)" fg:x="73" fg:w="1"/><text x="2.1863%" y="399.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::text_range (1 samples, 0.03%)</title><rect x="1.9363%" y="373" width="0.0265%" height="15" fill="rgb(233,208,19)" fg:x="73" fg:w="1"/><text x="2.1863%" y="383.50"></text></g><g><title>rowan::cursor::SyntaxNode::text_range (1 samples, 0.03%)</title><rect x="1.9363%" y="357" width="0.0265%" height="15" fill="rgb(216,164,2)" fg:x="73" fg:w="1"/><text x="2.1863%" y="367.50"></text></g><g><title>rowan::cursor::SyntaxNode::data (1 samples, 0.03%)</title><rect x="1.9363%" y="341" width="0.0265%" height="15" fill="rgb(220,129,5)" fg:x="73" fg:w="1"/><text x="2.1863%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="1.9363%" y="325" width="0.0265%" height="15" fill="rgb(242,17,10)" fg:x="73" fg:w="1"/><text x="2.1863%" y="335.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.9629%" y="405" width="0.0265%" height="15" fill="rgb(242,107,0)" fg:x="74" fg:w="1"/><text x="2.2129%" y="415.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.03%)</title><rect x="1.9629%" y="389" width="0.0265%" height="15" fill="rgb(251,28,31)" fg:x="74" fg:w="1"/><text x="2.2129%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1.9629%" y="373" width="0.0265%" height="15" fill="rgb(233,223,10)" fg:x="74" fg:w="1"/><text x="2.2129%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.03%)</title><rect x="1.9629%" y="357" width="0.0265%" height="15" fill="rgb(215,21,27)" fg:x="74" fg:w="1"/><text x="2.2129%" y="367.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.9894%" y="405" width="0.0531%" height="15" fill="rgb(232,23,21)" fg:x="75" fg:w="2"/><text x="2.2394%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="1.9894%" y="389" width="0.0531%" height="15" fill="rgb(244,5,23)" fg:x="75" fg:w="2"/><text x="2.2394%" y="399.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="2.0424%" y="405" width="0.0265%" height="15" fill="rgb(226,81,46)" fg:x="77" fg:w="1"/><text x="2.2924%" y="415.50"></text></g><g><title>&lt;snix_eval::builtins::versions::VersionPartsIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.0690%" y="405" width="0.0265%" height="15" fill="rgb(247,70,30)" fg:x="78" fg:w="1"/><text x="2.3190%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="2.0955%" y="389" width="0.0265%" height="15" fill="rgb(212,68,19)" fg:x="79" fg:w="1"/><text x="2.3455%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="2.0955%" y="373" width="0.0265%" height="15" fill="rgb(240,187,13)" fg:x="79" fg:w="1"/><text x="2.3455%" y="383.50"></text></g><g><title>mi_heap_malloc_aligned_at (1 samples, 0.03%)</title><rect x="2.1220%" y="389" width="0.0265%" height="15" fill="rgb(223,113,26)" fg:x="80" fg:w="1"/><text x="2.3720%" y="399.50"></text></g><g><title>&lt;snix_eval::io::StdIO as snix_eval::io::EvalIO&gt;::read_dir (3 samples, 0.08%)</title><rect x="2.0955%" y="405" width="0.0796%" height="15" fill="rgb(206,192,2)" fg:x="79" fg:w="3"/><text x="2.3455%" y="415.50"></text></g><g><title>std::fs::DirEntry::metadata (1 samples, 0.03%)</title><rect x="2.1485%" y="389" width="0.0265%" height="15" fill="rgb(241,108,4)" fg:x="81" fg:w="1"/><text x="2.3985%" y="399.50"></text></g><g><title>std::sys::pal::unix::fs::DirEntry::metadata (1 samples, 0.03%)</title><rect x="2.1485%" y="373" width="0.0265%" height="15" fill="rgb(247,173,49)" fg:x="81" fg:w="1"/><text x="2.3985%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="2.1485%" y="357" width="0.0265%" height="15" fill="rgb(224,114,35)" fg:x="81" fg:w="1"/><text x="2.3985%" y="367.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.32%)</title><rect x="2.1751%" y="405" width="0.3183%" height="15" fill="rgb(245,159,27)" fg:x="82" fg:w="12"/><text x="2.4251%" y="415.50"></text></g><g><title>&lt;snix_eval::value::builtin::Builtin as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.4668%" y="389" width="0.0265%" height="15" fill="rgb(245,172,44)" fg:x="93" fg:w="1"/><text x="2.7168%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.4668%" y="373" width="0.0265%" height="15" fill="rgb(236,23,11)" fg:x="93" fg:w="1"/><text x="2.7168%" y="383.50"></text></g><g><title>&lt;T as core::clone::CloneToUninit&gt;::clone_to_uninit (1 samples, 0.03%)</title><rect x="2.4668%" y="357" width="0.0265%" height="15" fill="rgb(205,117,38)" fg:x="93" fg:w="1"/><text x="2.7168%" y="367.50"></text></g><g><title>&lt;T as core::clone::uninit::CopySpec&gt;::clone_one (1 samples, 0.03%)</title><rect x="2.4668%" y="341" width="0.0265%" height="15" fill="rgb(237,72,25)" fg:x="93" fg:w="1"/><text x="2.7168%" y="351.50"></text></g><g><title>&lt;snix_eval::value::builtin::BuiltinRepr as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.4668%" y="325" width="0.0265%" height="15" fill="rgb(244,70,9)" fg:x="93" fg:w="1"/><text x="2.7168%" y="335.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::clone::Clone&gt;::clone (15 samples, 0.40%)</title><rect x="2.4934%" y="405" width="0.3979%" height="15" fill="rgb(217,125,39)" fg:x="94" fg:w="15"/><text x="2.7434%" y="415.50"></text></g><g><title>snix_eval::value::string::NixString::context (8 samples, 0.21%)</title><rect x="2.6790%" y="389" width="0.2122%" height="15" fill="rgb(235,36,10)" fg:x="101" fg:w="8"/><text x="2.9290%" y="399.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="2.8912%" y="405" width="0.0265%" height="15" fill="rgb(251,123,47)" fg:x="109" fg:w="1"/><text x="3.1412%" y="415.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="2.9178%" y="405" width="0.0531%" height="15" fill="rgb(221,13,13)" fg:x="110" fg:w="2"/><text x="3.1678%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.03%)</title><rect x="2.9443%" y="389" width="0.0265%" height="15" fill="rgb(238,131,9)" fg:x="111" fg:w="1"/><text x="3.1943%" y="399.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="2.9443%" y="373" width="0.0265%" height="15" fill="rgb(211,50,8)" fg:x="111" fg:w="1"/><text x="3.1943%" y="383.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.03%)</title><rect x="2.9443%" y="357" width="0.0265%" height="15" fill="rgb(245,182,24)" fg:x="111" fg:w="1"/><text x="3.1943%" y="367.50"></text></g><g><title>&lt;tracing_indicatif::IndicatifLayer&lt;S,F&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.03%)</title><rect x="2.9708%" y="405" width="0.0265%" height="15" fill="rgb(242,14,37)" fg:x="112" fg:w="1"/><text x="3.2208%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="2.9708%" y="389" width="0.0265%" height="15" fill="rgb(246,228,12)" fg:x="112" fg:w="1"/><text x="3.2208%" y="399.50"></text></g><g><title>&lt;tracing_indicatif::IndicatifLayer&lt;S,F&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::_{{closure}} (1 samples, 0.03%)</title><rect x="2.9708%" y="373" width="0.0265%" height="15" fill="rgb(213,55,15)" fg:x="112" fg:w="1"/><text x="3.2208%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.03%)</title><rect x="2.9708%" y="357" width="0.0265%" height="15" fill="rgb(209,9,3)" fg:x="112" fg:w="1"/><text x="3.2208%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="2.9708%" y="341" width="0.0265%" height="15" fill="rgb(230,59,30)" fg:x="112" fg:w="1"/><text x="3.2208%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (1 samples, 0.03%)</title><rect x="2.9708%" y="325" width="0.0265%" height="15" fill="rgb(209,121,21)" fg:x="112" fg:w="1"/><text x="3.2208%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::registry::Scope&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.9708%" y="309" width="0.0265%" height="15" fill="rgb(220,109,13)" fg:x="112" fg:w="1"/><text x="3.2208%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (1 samples, 0.03%)</title><rect x="2.9973%" y="405" width="0.0265%" height="15" fill="rgb(232,18,1)" fg:x="113" fg:w="1"/><text x="3.2473%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (1 samples, 0.03%)</title><rect x="3.0239%" y="405" width="0.0265%" height="15" fill="rgb(215,41,42)" fg:x="114" fg:w="1"/><text x="3.2739%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.05%)</title><rect x="3.0504%" y="405" width="0.0531%" height="15" fill="rgb(224,123,36)" fg:x="115" fg:w="2"/><text x="3.3004%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.03%)</title><rect x="3.1034%" y="405" width="0.0265%" height="15" fill="rgb(240,125,3)" fg:x="117" fg:w="1"/><text x="3.3534%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (3 samples, 0.08%)</title><rect x="3.1300%" y="405" width="0.0796%" height="15" fill="rgb(205,98,50)" fg:x="118" fg:w="3"/><text x="3.3800%" y="415.50"></text></g><g><title>__GI___nptl_free_tcb (1 samples, 0.03%)</title><rect x="3.2095%" y="341" width="0.0265%" height="15" fill="rgb(205,185,37)" fg:x="121" fg:w="1"/><text x="3.4595%" y="351.50"></text></g><g><title>BLAKE3_IV_3 (5 samples, 0.13%)</title><rect x="3.2095%" y="405" width="0.1326%" height="15" fill="rgb(238,207,15)" fg:x="121" fg:w="5"/><text x="3.4595%" y="415.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (5 samples, 0.13%)</title><rect x="3.2095%" y="389" width="0.1326%" height="15" fill="rgb(213,199,42)" fg:x="121" fg:w="5"/><text x="3.4595%" y="399.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (5 samples, 0.13%)</title><rect x="3.2095%" y="373" width="0.1326%" height="15" fill="rgb(235,201,11)" fg:x="121" fg:w="5"/><text x="3.4595%" y="383.50"></text></g><g><title>__pthread_clockjoin_ex (5 samples, 0.13%)</title><rect x="3.2095%" y="357" width="0.1326%" height="15" fill="rgb(207,46,11)" fg:x="121" fg:w="5"/><text x="3.4595%" y="367.50"></text></g><g><title>__futex_abstimed_wait_common (4 samples, 0.11%)</title><rect x="3.2361%" y="341" width="0.1061%" height="15" fill="rgb(241,35,35)" fg:x="122" fg:w="4"/><text x="3.4861%" y="351.50"></text></g><g><title>__GI___pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="3.2891%" y="325" width="0.0531%" height="15" fill="rgb(243,32,47)" fg:x="124" fg:w="2"/><text x="3.5391%" y="335.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.3422%" y="389" width="0.0265%" height="15" fill="rgb(247,202,23)" fg:x="126" fg:w="1"/><text x="3.5922%" y="399.50"></text></g><g><title>[snix] (1 samples, 0.03%)</title><rect x="3.3687%" y="389" width="0.0265%" height="15" fill="rgb(219,102,11)" fg:x="127" fg:w="1"/><text x="3.6187%" y="399.50"></text></g><g><title>&lt;indicatif::format::DecimalBytes as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="3.3687%" y="373" width="0.0265%" height="15" fill="rgb(243,110,44)" fg:x="127" fg:w="1"/><text x="3.6187%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="3.3687%" y="357" width="0.0265%" height="15" fill="rgb(222,74,54)" fg:x="127" fg:w="1"/><text x="3.6187%" y="367.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1 samples, 0.03%)</title><rect x="3.3687%" y="341" width="0.0265%" height="15" fill="rgb(216,99,12)" fg:x="127" fg:w="1"/><text x="3.6187%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad_formatted_parts (1 samples, 0.03%)</title><rect x="3.3687%" y="325" width="0.0265%" height="15" fill="rgb(226,22,26)" fg:x="127" fg:w="1"/><text x="3.6187%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="3.4218%" y="373" width="0.0265%" height="15" fill="rgb(217,163,10)" fg:x="129" fg:w="1"/><text x="3.6718%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.03%)</title><rect x="3.4218%" y="357" width="0.0265%" height="15" fill="rgb(213,25,53)" fg:x="129" fg:w="1"/><text x="3.6718%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17h0bd66cd2865749cbE.llvm.12783554947409113215 (9 samples, 0.24%)</title><rect x="3.3952%" y="389" width="0.2387%" height="15" fill="rgb(252,105,26)" fg:x="128" fg:w="9"/><text x="3.6452%" y="399.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (7 samples, 0.19%)</title><rect x="3.4483%" y="373" width="0.1857%" height="15" fill="rgb(220,39,43)" fg:x="130" fg:w="7"/><text x="3.6983%" y="383.50"></text></g><g><title>syscall (5 samples, 0.13%)</title><rect x="3.5013%" y="357" width="0.1326%" height="15" fill="rgb(229,68,48)" fg:x="132" fg:w="5"/><text x="3.7513%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_negate (1 samples, 0.03%)</title><rect x="3.6340%" y="389" width="0.0265%" height="15" fill="rgb(252,8,32)" fg:x="137" fg:w="1"/><text x="3.8840%" y="399.50"></text></g><g><title>rowan::cursor::free (1 samples, 0.03%)</title><rect x="3.6605%" y="389" width="0.0265%" height="15" fill="rgb(223,20,43)" fg:x="138" fg:w="1"/><text x="3.9105%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::cursor::NodeData&gt;&gt; (1 samples, 0.03%)</title><rect x="3.6605%" y="373" width="0.0265%" height="15" fill="rgb(229,81,49)" fg:x="138" fg:w="1"/><text x="3.9105%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.6605%" y="357" width="0.0265%" height="15" fill="rgb(236,28,36)" fg:x="138" fg:w="1"/><text x="3.9105%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="3.6605%" y="341" width="0.0265%" height="15" fill="rgb(249,185,26)" fg:x="138" fg:w="1"/><text x="3.9105%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="3.6605%" y="325" width="0.0265%" height="15" fill="rgb(249,174,33)" fg:x="138" fg:w="1"/><text x="3.9105%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="3.6605%" y="309" width="0.0265%" height="15" fill="rgb(233,201,37)" fg:x="138" fg:w="1"/><text x="3.9105%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="3.6605%" y="293" width="0.0265%" height="15" fill="rgb(221,78,26)" fg:x="138" fg:w="1"/><text x="3.9105%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="3.6605%" y="277" width="0.0265%" height="15" fill="rgb(250,127,30)" fg:x="138" fg:w="1"/><text x="3.9105%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="3.6605%" y="261" width="0.0265%" height="15" fill="rgb(230,49,44)" fg:x="138" fg:w="1"/><text x="3.9105%" y="271.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="3.6605%" y="245" width="0.0265%" height="15" fill="rgb(229,67,23)" fg:x="138" fg:w="1"/><text x="3.9105%" y="255.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::bind_values (1 samples, 0.03%)</title><rect x="3.6870%" y="389" width="0.0265%" height="15" fill="rgb(249,83,47)" fg:x="139" fg:w="1"/><text x="3.9370%" y="399.50"></text></g><g><title>[snix] (15 samples, 0.40%)</title><rect x="3.3422%" y="405" width="0.3979%" height="15" fill="rgb(215,43,3)" fg:x="126" fg:w="15"/><text x="3.5922%" y="415.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (1 samples, 0.03%)</title><rect x="3.7135%" y="389" width="0.0265%" height="15" fill="rgb(238,154,13)" fg:x="140" fg:w="1"/><text x="3.9635%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.03%)</title><rect x="4.2706%" y="389" width="0.0265%" height="15" fill="rgb(219,56,2)" fg:x="161" fg:w="1"/><text x="4.5206%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="4.2971%" y="389" width="0.0265%" height="15" fill="rgb(233,0,4)" fg:x="162" fg:w="1"/><text x="4.5471%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="4.2971%" y="373" width="0.0265%" height="15" fill="rgb(235,30,7)" fg:x="162" fg:w="1"/><text x="4.5471%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.2971%" y="357" width="0.0265%" height="15" fill="rgb(250,79,13)" fg:x="162" fg:w="1"/><text x="4.5471%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="4.2971%" y="341" width="0.0265%" height="15" fill="rgb(211,146,34)" fg:x="162" fg:w="1"/><text x="4.5471%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="4.2971%" y="325" width="0.0265%" height="15" fill="rgb(228,22,38)" fg:x="162" fg:w="1"/><text x="4.5471%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="4.2971%" y="309" width="0.0265%" height="15" fill="rgb(235,168,5)" fg:x="162" fg:w="1"/><text x="4.5471%" y="319.50"></text></g><g><title>nix_compat::store_path::StorePath&lt;S&gt;::to_absolute_path (1 samples, 0.03%)</title><rect x="4.2971%" y="293" width="0.0265%" height="15" fill="rgb(221,155,16)" fg:x="162" fg:w="1"/><text x="4.5471%" y="303.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.3236%" y="389" width="0.0265%" height="15" fill="rgb(215,215,53)" fg:x="163" fg:w="1"/><text x="4.5736%" y="399.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="4.3501%" y="389" width="0.0265%" height="15" fill="rgb(223,4,10)" fg:x="164" fg:w="1"/><text x="4.6001%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="4.3767%" y="389" width="0.0265%" height="15" fill="rgb(234,103,6)" fg:x="165" fg:w="1"/><text x="4.6267%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="4.3767%" y="373" width="0.0265%" height="15" fill="rgb(227,97,0)" fg:x="165" fg:w="1"/><text x="4.6267%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="4.3767%" y="357" width="0.0265%" height="15" fill="rgb(234,150,53)" fg:x="165" fg:w="1"/><text x="4.6267%" y="367.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="4.3767%" y="341" width="0.0265%" height="15" fill="rgb(228,201,54)" fg:x="165" fg:w="1"/><text x="4.6267%" y="351.50"></text></g><g><title>&lt;indicatif::style::PaddedStringDisplay as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="4.4032%" y="389" width="0.0265%" height="15" fill="rgb(222,22,37)" fg:x="166" fg:w="1"/><text x="4.6532%" y="399.50"></text></g><g><title>&lt;nix_compat::store_path::StorePath&lt;S&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="4.4297%" y="389" width="0.0265%" height="15" fill="rgb(237,53,32)" fg:x="167" fg:w="1"/><text x="4.6797%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="4.4297%" y="373" width="0.0265%" height="15" fill="rgb(233,25,53)" fg:x="167" fg:w="1"/><text x="4.6797%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="4.4297%" y="357" width="0.0265%" height="15" fill="rgb(210,40,34)" fg:x="167" fg:w="1"/><text x="4.6797%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="4.4297%" y="341" width="0.0265%" height="15" fill="rgb(241,220,44)" fg:x="167" fg:w="1"/><text x="4.6797%" y="351.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="4.4562%" y="389" width="0.0265%" height="15" fill="rgb(235,28,35)" fg:x="168" fg:w="1"/><text x="4.7062%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="4.4562%" y="373" width="0.0265%" height="15" fill="rgb(210,56,17)" fg:x="168" fg:w="1"/><text x="4.7062%" y="383.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.4828%" y="389" width="0.0265%" height="15" fill="rgb(224,130,29)" fg:x="169" fg:w="1"/><text x="4.7328%" y="399.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.03%)</title><rect x="4.4828%" y="373" width="0.0265%" height="15" fill="rgb(235,212,8)" fg:x="169" fg:w="1"/><text x="4.7328%" y="383.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume (1 samples, 0.03%)</title><rect x="4.4828%" y="357" width="0.0265%" height="15" fill="rgb(223,33,50)" fg:x="169" fg:w="1"/><text x="4.7328%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="4.4828%" y="341" width="0.0265%" height="15" fill="rgb(219,149,13)" fg:x="169" fg:w="1"/><text x="4.7328%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="4.4828%" y="325" width="0.0265%" height="15" fill="rgb(250,156,29)" fg:x="169" fg:w="1"/><text x="4.7328%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="4.4828%" y="309" width="0.0265%" height="15" fill="rgb(216,193,19)" fg:x="169" fg:w="1"/><text x="4.7328%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="4.4828%" y="293" width="0.0265%" height="15" fill="rgb(216,135,14)" fg:x="169" fg:w="1"/><text x="4.7328%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="4.4828%" y="277" width="0.0265%" height="15" fill="rgb(241,47,5)" fg:x="169" fg:w="1"/><text x="4.7328%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="4.4828%" y="261" width="0.0265%" height="15" fill="rgb(233,42,35)" fg:x="169" fg:w="1"/><text x="4.7328%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (1 samples, 0.03%)</title><rect x="4.4828%" y="245" width="0.0265%" height="15" fill="rgb(231,13,6)" fg:x="169" fg:w="1"/><text x="4.7328%" y="255.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (1 samples, 0.03%)</title><rect x="4.4828%" y="229" width="0.0265%" height="15" fill="rgb(207,181,40)" fg:x="169" fg:w="1"/><text x="4.7328%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="4.4828%" y="213" width="0.0265%" height="15" fill="rgb(254,173,49)" fg:x="169" fg:w="1"/><text x="4.7328%" y="223.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume::_{{closure}} (1 samples, 0.03%)</title><rect x="4.4828%" y="197" width="0.0265%" height="15" fill="rgb(221,1,38)" fg:x="169" fg:w="1"/><text x="4.7328%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.03%)</title><rect x="4.4828%" y="181" width="0.0265%" height="15" fill="rgb(206,124,46)" fg:x="169" fg:w="1"/><text x="4.7328%" y="191.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="4.4828%" y="165" width="0.0265%" height="15" fill="rgb(249,21,11)" fg:x="169" fg:w="1"/><text x="4.7328%" y="175.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNodeChildren as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.5093%" y="389" width="0.0265%" height="15" fill="rgb(222,201,40)" fg:x="170" fg:w="1"/><text x="4.7593%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="4.5093%" y="373" width="0.0265%" height="15" fill="rgb(235,61,29)" fg:x="170" fg:w="1"/><text x="4.7593%" y="383.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNodeChildren as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.03%)</title><rect x="4.5093%" y="357" width="0.0265%" height="15" fill="rgb(219,207,3)" fg:x="170" fg:w="1"/><text x="4.7593%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::new_context (1 samples, 0.03%)</title><rect x="4.5093%" y="341" width="0.0265%" height="15" fill="rgb(222,56,46)" fg:x="170" fg:w="1"/><text x="4.7593%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="4.5093%" y="325" width="0.0265%" height="15" fill="rgb(239,76,54)" fg:x="170" fg:w="1"/><text x="4.7593%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="4.5093%" y="309" width="0.0265%" height="15" fill="rgb(231,124,27)" fg:x="170" fg:w="1"/><text x="4.7593%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="4.5093%" y="293" width="0.0265%" height="15" fill="rgb(249,195,6)" fg:x="170" fg:w="1"/><text x="4.7593%" y="303.50"></text></g><g><title>&lt;snix_eval::value::builtin::BuiltinRepr as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="4.6154%" y="309" width="0.1326%" height="15" fill="rgb(237,174,47)" fg:x="174" fg:w="5"/><text x="4.8654%" y="319.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (9 samples, 0.24%)</title><rect x="4.5358%" y="389" width="0.2387%" height="15" fill="rgb(206,201,31)" fg:x="171" fg:w="9"/><text x="4.7858%" y="399.50"></text></g><g><title>&lt;snix_eval::value::builtin::Builtin as core::clone::Clone&gt;::clone (6 samples, 0.16%)</title><rect x="4.6154%" y="373" width="0.1592%" height="15" fill="rgb(231,57,52)" fg:x="174" fg:w="6"/><text x="4.8654%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.16%)</title><rect x="4.6154%" y="357" width="0.1592%" height="15" fill="rgb(248,177,22)" fg:x="174" fg:w="6"/><text x="4.8654%" y="367.50"></text></g><g><title>&lt;T as core::clone::CloneToUninit&gt;::clone_to_uninit (6 samples, 0.16%)</title><rect x="4.6154%" y="341" width="0.1592%" height="15" fill="rgb(215,211,37)" fg:x="174" fg:w="6"/><text x="4.8654%" y="351.50"></text></g><g><title>&lt;T as core::clone::uninit::CopySpec&gt;::clone_one (6 samples, 0.16%)</title><rect x="4.6154%" y="325" width="0.1592%" height="15" fill="rgb(241,128,51)" fg:x="174" fg:w="6"/><text x="4.8654%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="4.7480%" y="309" width="0.0265%" height="15" fill="rgb(227,165,31)" fg:x="179" fg:w="1"/><text x="4.9980%" y="319.50"></text></g><g><title>&lt;snix_eval::value::attrs::OwnedAttrsIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.7745%" y="389" width="0.0265%" height="15" fill="rgb(228,167,24)" fg:x="180" fg:w="1"/><text x="5.0245%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.7745%" y="373" width="0.0265%" height="15" fill="rgb(228,143,12)" fg:x="180" fg:w="1"/><text x="5.0245%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (1 samples, 0.03%)</title><rect x="4.7745%" y="357" width="0.0265%" height="15" fill="rgb(249,149,8)" fg:x="180" fg:w="1"/><text x="5.0245%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="4.7745%" y="341" width="0.0265%" height="15" fill="rgb(243,35,44)" fg:x="180" fg:w="1"/><text x="5.0245%" y="351.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::borrow::Borrow&lt;bstr::bstr::BStr&gt;&gt;::borrow (1 samples, 0.03%)</title><rect x="4.8011%" y="389" width="0.0265%" height="15" fill="rgb(246,89,9)" fg:x="181" fg:w="1"/><text x="5.0511%" y="399.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="4.8276%" y="389" width="0.0265%" height="15" fill="rgb(233,213,13)" fg:x="182" fg:w="1"/><text x="5.0776%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="4.8541%" y="373" width="0.0265%" height="15" fill="rgb(233,141,41)" fg:x="183" fg:w="1"/><text x="5.1041%" y="383.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::PartialEq&gt;::eq (4 samples, 0.11%)</title><rect x="4.8541%" y="389" width="0.1061%" height="15" fill="rgb(239,167,4)" fg:x="183" fg:w="4"/><text x="5.1041%" y="399.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (3 samples, 0.08%)</title><rect x="4.8806%" y="373" width="0.0796%" height="15" fill="rgb(209,217,16)" fg:x="184" fg:w="3"/><text x="5.1306%" y="383.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (3 samples, 0.08%)</title><rect x="4.8806%" y="357" width="0.0796%" height="15" fill="rgb(219,88,35)" fg:x="184" fg:w="3"/><text x="5.1306%" y="367.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (3 samples, 0.08%)</title><rect x="4.8806%" y="341" width="0.0796%" height="15" fill="rgb(220,193,23)" fg:x="184" fg:w="3"/><text x="5.1306%" y="351.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (3 samples, 0.08%)</title><rect x="4.8806%" y="325" width="0.0796%" height="15" fill="rgb(230,90,52)" fg:x="184" fg:w="3"/><text x="5.1306%" y="335.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (3 samples, 0.08%)</title><rect x="4.8806%" y="309" width="0.0796%" height="15" fill="rgb(252,106,19)" fg:x="184" fg:w="3"/><text x="5.1306%" y="319.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (3 samples, 0.08%)</title><rect x="4.8806%" y="293" width="0.0796%" height="15" fill="rgb(206,74,20)" fg:x="184" fg:w="3"/><text x="5.1306%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.08%)</title><rect x="4.8806%" y="277" width="0.0796%" height="15" fill="rgb(230,138,44)" fg:x="184" fg:w="3"/><text x="5.1306%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.08%)</title><rect x="4.8806%" y="261" width="0.0796%" height="15" fill="rgb(235,182,43)" fg:x="184" fg:w="3"/><text x="5.1306%" y="271.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.9602%" y="389" width="0.0265%" height="15" fill="rgb(242,16,51)" fg:x="187" fg:w="1"/><text x="5.2102%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (2 samples, 0.05%)</title><rect x="4.9867%" y="389" width="0.0531%" height="15" fill="rgb(248,9,4)" fg:x="188" fg:w="2"/><text x="5.2367%" y="399.50"></text></g><g><title>mi_stats_merge_from.part.0 (2 samples, 0.05%)</title><rect x="5.0398%" y="373" width="0.0531%" height="15" fill="rgb(210,31,22)" fg:x="190" fg:w="2"/><text x="5.2898%" y="383.50"></text></g><g><title>[snix] (3 samples, 0.08%)</title><rect x="5.0398%" y="389" width="0.0796%" height="15" fill="rgb(239,54,39)" fg:x="190" fg:w="3"/><text x="5.2898%" y="399.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::expect_peek_any (1 samples, 0.03%)</title><rect x="5.0928%" y="373" width="0.0265%" height="15" fill="rgb(230,99,41)" fg:x="192" fg:w="1"/><text x="5.3428%" y="383.50"></text></g><g><title>mi_segment_try_reclaim (2 samples, 0.05%)</title><rect x="5.1194%" y="373" width="0.0531%" height="15" fill="rgb(253,106,12)" fg:x="193" fg:w="2"/><text x="5.3694%" y="383.50"></text></g><g><title>mi_option_get_clamp (2 samples, 0.05%)</title><rect x="5.1194%" y="357" width="0.0531%" height="15" fill="rgb(213,46,41)" fg:x="193" fg:w="2"/><text x="5.3694%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.08%)</title><rect x="5.1194%" y="389" width="0.0796%" height="15" fill="rgb(215,133,35)" fg:x="193" fg:w="3"/><text x="5.3694%" y="399.50"></text></g><g><title>nix_compat::store_path::utils::build_store_path_from_fingerprint_parts (1 samples, 0.03%)</title><rect x="5.1724%" y="373" width="0.0265%" height="15" fill="rgb(213,28,5)" fg:x="195" fg:w="1"/><text x="5.4224%" y="383.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.03%)</title><rect x="5.1724%" y="357" width="0.0265%" height="15" fill="rgb(215,77,49)" fg:x="195" fg:w="1"/><text x="5.4224%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.03%)</title><rect x="5.1724%" y="341" width="0.0265%" height="15" fill="rgb(248,100,22)" fg:x="195" fg:w="1"/><text x="5.4224%" y="351.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.03%)</title><rect x="5.1724%" y="325" width="0.0265%" height="15" fill="rgb(208,67,9)" fg:x="195" fg:w="1"/><text x="5.4224%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.03%)</title><rect x="5.1724%" y="309" width="0.0265%" height="15" fill="rgb(219,133,21)" fg:x="195" fg:w="1"/><text x="5.4224%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="5.1724%" y="293" width="0.0265%" height="15" fill="rgb(246,46,29)" fg:x="195" fg:w="1"/><text x="5.4224%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="5.2520%" y="357" width="0.0265%" height="15" fill="rgb(246,185,52)" fg:x="198" fg:w="1"/><text x="5.5020%" y="367.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.03%)</title><rect x="5.2785%" y="357" width="0.0265%" height="15" fill="rgb(252,136,11)" fg:x="199" fg:w="1"/><text x="5.5285%" y="367.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.03%)</title><rect x="5.3050%" y="325" width="0.0265%" height="15" fill="rgb(219,138,53)" fg:x="200" fg:w="1"/><text x="5.5550%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (7 samples, 0.19%)</title><rect x="5.1989%" y="373" width="0.1857%" height="15" fill="rgb(211,51,23)" fg:x="196" fg:w="7"/><text x="5.4489%" y="383.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.08%)</title><rect x="5.3050%" y="357" width="0.0796%" height="15" fill="rgb(247,221,28)" fg:x="200" fg:w="3"/><text x="5.5550%" y="367.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.08%)</title><rect x="5.3050%" y="341" width="0.0796%" height="15" fill="rgb(251,222,45)" fg:x="200" fg:w="3"/><text x="5.5550%" y="351.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.05%)</title><rect x="5.3316%" y="325" width="0.0531%" height="15" fill="rgb(217,162,53)" fg:x="201" fg:w="2"/><text x="5.5816%" y="335.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.03%)</title><rect x="5.3581%" y="309" width="0.0265%" height="15" fill="rgb(229,93,14)" fg:x="202" fg:w="1"/><text x="5.6081%" y="319.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.03%)</title><rect x="5.3581%" y="293" width="0.0265%" height="15" fill="rgb(209,67,49)" fg:x="202" fg:w="1"/><text x="5.6081%" y="303.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (1 samples, 0.03%)</title><rect x="5.3581%" y="277" width="0.0265%" height="15" fill="rgb(213,87,29)" fg:x="202" fg:w="1"/><text x="5.6081%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17ha1b12083e30814abE.llvm.16348842533310755137 (8 samples, 0.21%)</title><rect x="5.1989%" y="389" width="0.2122%" height="15" fill="rgb(205,151,52)" fg:x="196" fg:w="8"/><text x="5.4489%" y="399.50"></text></g><g><title>mi_free (1 samples, 0.03%)</title><rect x="5.3846%" y="373" width="0.0265%" height="15" fill="rgb(253,215,39)" fg:x="203" fg:w="1"/><text x="5.6346%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="5.4111%" y="373" width="0.0265%" height="15" fill="rgb(221,220,41)" fg:x="204" fg:w="1"/><text x="5.6611%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.03%)</title><rect x="5.4111%" y="357" width="0.0265%" height="15" fill="rgb(218,133,21)" fg:x="204" fg:w="1"/><text x="5.6611%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17h0bd66cd2865749cbE.llvm.12783554947409113215 (2 samples, 0.05%)</title><rect x="5.4111%" y="389" width="0.0531%" height="15" fill="rgb(221,193,43)" fg:x="204" fg:w="2"/><text x="5.6611%" y="399.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.03%)</title><rect x="5.4377%" y="373" width="0.0265%" height="15" fill="rgb(240,128,52)" fg:x="205" fg:w="1"/><text x="5.6877%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.05%)</title><rect x="5.4642%" y="389" width="0.0531%" height="15" fill="rgb(253,114,12)" fg:x="206" fg:w="2"/><text x="5.7142%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2 samples, 0.05%)</title><rect x="5.4642%" y="373" width="0.0531%" height="15" fill="rgb(215,223,47)" fg:x="206" fg:w="2"/><text x="5.7142%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="5.4642%" y="357" width="0.0531%" height="15" fill="rgb(248,225,23)" fg:x="206" fg:w="2"/><text x="5.7142%" y="367.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::construct (2 samples, 0.05%)</title><rect x="5.4642%" y="341" width="0.0531%" height="15" fill="rgb(250,108,0)" fg:x="206" fg:w="2"/><text x="5.7142%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.03%)</title><rect x="5.4907%" y="325" width="0.0265%" height="15" fill="rgb(228,208,7)" fg:x="207" fg:w="1"/><text x="5.7407%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="5.5172%" y="389" width="0.0531%" height="15" fill="rgb(244,45,10)" fg:x="208" fg:w="2"/><text x="5.7672%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="5.5703%" y="389" width="0.0531%" height="15" fill="rgb(207,125,25)" fg:x="210" fg:w="2"/><text x="5.8203%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="5.5968%" y="373" width="0.0265%" height="15" fill="rgb(210,195,18)" fg:x="211" fg:w="1"/><text x="5.8468%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="5.5968%" y="357" width="0.0265%" height="15" fill="rgb(249,80,12)" fg:x="211" fg:w="1"/><text x="5.8468%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="5.5968%" y="341" width="0.0265%" height="15" fill="rgb(221,65,9)" fg:x="211" fg:w="1"/><text x="5.8468%" y="351.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="5.5968%" y="325" width="0.0265%" height="15" fill="rgb(235,49,36)" fg:x="211" fg:w="1"/><text x="5.8468%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::upvalues::Upvalues&gt; (1 samples, 0.03%)</title><rect x="5.6499%" y="373" width="0.0265%" height="15" fill="rgb(225,32,20)" fg:x="213" fg:w="1"/><text x="5.8999%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.03%)</title><rect x="5.6499%" y="357" width="0.0265%" height="15" fill="rgb(215,141,46)" fg:x="213" fg:w="1"/><text x="5.8999%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.6499%" y="341" width="0.0265%" height="15" fill="rgb(250,160,47)" fg:x="213" fg:w="1"/><text x="5.8999%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[snix_eval::value::Value]&gt; (1 samples, 0.03%)</title><rect x="5.6499%" y="325" width="0.0265%" height="15" fill="rgb(216,222,40)" fg:x="213" fg:w="1"/><text x="5.8999%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (3 samples, 0.08%)</title><rect x="5.6233%" y="389" width="0.0796%" height="15" fill="rgb(234,217,39)" fg:x="212" fg:w="3"/><text x="5.8733%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::function::Closure&gt; (1 samples, 0.03%)</title><rect x="5.6764%" y="373" width="0.0265%" height="15" fill="rgb(207,178,40)" fg:x="214" fg:w="1"/><text x="5.9264%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;snix_eval::upvalues::Upvalues&gt;&gt; (1 samples, 0.03%)</title><rect x="5.6764%" y="357" width="0.0265%" height="15" fill="rgb(221,136,13)" fg:x="214" fg:w="1"/><text x="5.9264%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.6764%" y="341" width="0.0265%" height="15" fill="rgb(249,199,10)" fg:x="214" fg:w="1"/><text x="5.9264%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::repeat (1 samples, 0.03%)</title><rect x="5.7029%" y="389" width="0.0265%" height="15" fill="rgb(249,222,13)" fg:x="215" fg:w="1"/><text x="5.9529%" y="399.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (3 samples, 0.08%)</title><rect x="5.7294%" y="389" width="0.0796%" height="15" fill="rgb(244,185,38)" fg:x="216" fg:w="3"/><text x="5.9794%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.08%)</title><rect x="5.7294%" y="373" width="0.0796%" height="15" fill="rgb(236,202,9)" fg:x="216" fg:w="3"/><text x="5.9794%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="5.8090%" y="389" width="0.0265%" height="15" fill="rgb(250,229,37)" fg:x="219" fg:w="1"/><text x="6.0590%" y="399.50"></text></g><g><title>bstr::ext_slice::Find::new (1 samples, 0.03%)</title><rect x="5.8355%" y="389" width="0.0265%" height="15" fill="rgb(206,174,23)" fg:x="220" fg:w="1"/><text x="6.0855%" y="399.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h58cd14dedff6be09E.llvm.16348842533310755137 (1 samples, 0.03%)</title><rect x="5.9416%" y="373" width="0.0265%" height="15" fill="rgb(211,33,43)" fg:x="224" fg:w="1"/><text x="6.1916%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.16%)</title><rect x="5.8621%" y="389" width="0.1592%" height="15" fill="rgb(245,58,50)" fg:x="221" fg:w="6"/><text x="6.1121%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.05%)</title><rect x="5.9682%" y="373" width="0.0531%" height="15" fill="rgb(244,68,36)" fg:x="225" fg:w="2"/><text x="6.2182%" y="383.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::hash::Hash&gt;::hash (2 samples, 0.05%)</title><rect x="5.9682%" y="357" width="0.0531%" height="15" fill="rgb(232,229,15)" fg:x="225" fg:w="2"/><text x="6.2182%" y="367.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (2 samples, 0.05%)</title><rect x="5.9682%" y="341" width="0.0531%" height="15" fill="rgb(254,30,23)" fg:x="225" fg:w="2"/><text x="6.2182%" y="351.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (2 samples, 0.05%)</title><rect x="5.9682%" y="325" width="0.0531%" height="15" fill="rgb(235,160,14)" fg:x="225" fg:w="2"/><text x="6.2182%" y="335.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (2 samples, 0.05%)</title><rect x="5.9682%" y="309" width="0.0531%" height="15" fill="rgb(212,155,44)" fg:x="225" fg:w="2"/><text x="6.2182%" y="319.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (2 samples, 0.05%)</title><rect x="5.9682%" y="293" width="0.0531%" height="15" fill="rgb(226,2,50)" fg:x="225" fg:w="2"/><text x="6.2182%" y="303.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (2 samples, 0.05%)</title><rect x="5.9682%" y="277" width="0.0531%" height="15" fill="rgb(234,177,6)" fg:x="225" fg:w="2"/><text x="6.2182%" y="287.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (1 samples, 0.03%)</title><rect x="5.9947%" y="261" width="0.0265%" height="15" fill="rgb(217,24,9)" fg:x="226" fg:w="1"/><text x="6.2447%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="5.9947%" y="245" width="0.0265%" height="15" fill="rgb(220,13,46)" fg:x="226" fg:w="1"/><text x="6.2447%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="5.9947%" y="229" width="0.0265%" height="15" fill="rgb(239,221,27)" fg:x="226" fg:w="1"/><text x="6.2447%" y="239.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.03%)</title><rect x="6.0743%" y="373" width="0.0265%" height="15" fill="rgb(222,198,25)" fg:x="229" fg:w="1"/><text x="6.3243%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.11%)</title><rect x="6.0212%" y="389" width="0.1061%" height="15" fill="rgb(211,99,13)" fg:x="227" fg:w="4"/><text x="6.2712%" y="399.50"></text></g><g><title>std::thread::current::set_current (1 samples, 0.03%)</title><rect x="6.1008%" y="373" width="0.0265%" height="15" fill="rgb(232,111,31)" fg:x="230" fg:w="1"/><text x="6.3508%" y="383.50"></text></g><g><title>pthread_setspecific@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="6.1008%" y="357" width="0.0265%" height="15" fill="rgb(245,82,37)" fg:x="230" fg:w="1"/><text x="6.3508%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (3 samples, 0.08%)</title><rect x="6.1273%" y="389" width="0.0796%" height="15" fill="rgb(227,149,46)" fg:x="231" fg:w="3"/><text x="6.3773%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (2 samples, 0.05%)</title><rect x="6.2069%" y="389" width="0.0531%" height="15" fill="rgb(218,36,50)" fg:x="234" fg:w="2"/><text x="6.4569%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk::force::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="6.2599%" y="389" width="0.0265%" height="15" fill="rgb(226,80,48)" fg:x="236" fg:w="1"/><text x="6.5099%" y="399.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as core::default::Default&gt;::default (2 samples, 0.05%)</title><rect x="6.2865%" y="373" width="0.0531%" height="15" fill="rgb(238,224,15)" fg:x="237" fg:w="2"/><text x="6.5365%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="6.2865%" y="357" width="0.0531%" height="15" fill="rgb(241,136,10)" fg:x="237" fg:w="2"/><text x="6.5365%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="6.2865%" y="341" width="0.0531%" height="15" fill="rgb(208,32,45)" fg:x="237" fg:w="2"/><text x="6.5365%" y="351.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (3 samples, 0.08%)</title><rect x="6.2865%" y="389" width="0.0796%" height="15" fill="rgb(207,135,9)" fg:x="237" fg:w="3"/><text x="6.5365%" y="399.50"></text></g><g><title>snix_eval::vm::generators::_&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator::_{{closure}} (1 samples, 0.03%)</title><rect x="6.3395%" y="373" width="0.0265%" height="15" fill="rgb(206,86,44)" fg:x="239" fg:w="1"/><text x="6.5895%" y="383.50"></text></g><g><title>snix_eval::vm::generators::pin_generator (1 samples, 0.03%)</title><rect x="6.3395%" y="357" width="0.0265%" height="15" fill="rgb(245,177,15)" fg:x="239" fg:w="1"/><text x="6.5895%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.03%)</title><rect x="6.3395%" y="341" width="0.0265%" height="15" fill="rgb(206,64,50)" fg:x="239" fg:w="1"/><text x="6.5895%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="6.3395%" y="325" width="0.0265%" height="15" fill="rgb(234,36,40)" fg:x="239" fg:w="1"/><text x="6.5895%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="6.3395%" y="309" width="0.0265%" height="15" fill="rgb(213,64,8)" fg:x="239" fg:w="1"/><text x="6.5895%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="6.3395%" y="293" width="0.0265%" height="15" fill="rgb(210,75,36)" fg:x="239" fg:w="1"/><text x="6.5895%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="6.3395%" y="277" width="0.0265%" height="15" fill="rgb(229,88,21)" fg:x="239" fg:w="1"/><text x="6.5895%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="6.3395%" y="261" width="0.0265%" height="15" fill="rgb(252,204,47)" fg:x="239" fg:w="1"/><text x="6.5895%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="6.3395%" y="245" width="0.0265%" height="15" fill="rgb(208,77,27)" fg:x="239" fg:w="1"/><text x="6.5895%" y="255.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.03%)</title><rect x="6.3395%" y="229" width="0.0265%" height="15" fill="rgb(221,76,26)" fg:x="239" fg:w="1"/><text x="6.5895%" y="239.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="6.3395%" y="213" width="0.0265%" height="15" fill="rgb(225,139,18)" fg:x="239" fg:w="1"/><text x="6.5895%" y="223.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="6.3395%" y="197" width="0.0265%" height="15" fill="rgb(230,137,11)" fg:x="239" fg:w="1"/><text x="6.5895%" y="207.50"></text></g><g><title>mi_find_page (1 samples, 0.03%)</title><rect x="6.3395%" y="181" width="0.0265%" height="15" fill="rgb(212,28,1)" fg:x="239" fg:w="1"/><text x="6.5895%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="6.3926%" y="277" width="0.0265%" height="15" fill="rgb(248,164,17)" fg:x="241" fg:w="1"/><text x="6.6426%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="6.3926%" y="261" width="0.0265%" height="15" fill="rgb(222,171,42)" fg:x="241" fg:w="1"/><text x="6.6426%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="6.3926%" y="245" width="0.0265%" height="15" fill="rgb(243,84,45)" fg:x="241" fg:w="1"/><text x="6.6426%" y="255.50"></text></g><g><title>core::intrinsics::likely (1 samples, 0.03%)</title><rect x="6.4191%" y="229" width="0.0265%" height="15" fill="rgb(252,49,23)" fg:x="242" fg:w="1"/><text x="6.6691%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (5 samples, 0.13%)</title><rect x="6.4191%" y="245" width="0.1326%" height="15" fill="rgb(215,19,7)" fg:x="242" fg:w="5"/><text x="6.6691%" y="255.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4 samples, 0.11%)</title><rect x="6.4456%" y="229" width="0.1061%" height="15" fill="rgb(238,81,41)" fg:x="243" fg:w="4"/><text x="6.6956%" y="239.50"></text></g><g><title>core::intrinsics::unlikely (2 samples, 0.05%)</title><rect x="6.5517%" y="229" width="0.0531%" height="15" fill="rgb(210,199,37)" fg:x="247" fg:w="2"/><text x="6.8017%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 0.24%)</title><rect x="6.3926%" y="341" width="0.2387%" height="15" fill="rgb(244,192,49)" fg:x="241" fg:w="9"/><text x="6.6426%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.24%)</title><rect x="6.3926%" y="325" width="0.2387%" height="15" fill="rgb(226,211,11)" fg:x="241" fg:w="9"/><text x="6.6426%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (9 samples, 0.24%)</title><rect x="6.3926%" y="309" width="0.2387%" height="15" fill="rgb(236,162,54)" fg:x="241" fg:w="9"/><text x="6.6426%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (9 samples, 0.24%)</title><rect x="6.3926%" y="293" width="0.2387%" height="15" fill="rgb(220,229,9)" fg:x="241" fg:w="9"/><text x="6.6426%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (8 samples, 0.21%)</title><rect x="6.4191%" y="277" width="0.2122%" height="15" fill="rgb(250,87,22)" fg:x="242" fg:w="8"/><text x="6.6691%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (8 samples, 0.21%)</title><rect x="6.4191%" y="261" width="0.2122%" height="15" fill="rgb(239,43,17)" fg:x="242" fg:w="8"/><text x="6.6691%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (3 samples, 0.08%)</title><rect x="6.5517%" y="245" width="0.0796%" height="15" fill="rgb(231,177,25)" fg:x="247" fg:w="3"/><text x="6.8017%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.03%)</title><rect x="6.6048%" y="229" width="0.0265%" height="15" fill="rgb(219,179,1)" fg:x="249" fg:w="1"/><text x="6.8548%" y="239.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (1 samples, 0.03%)</title><rect x="6.6048%" y="213" width="0.0265%" height="15" fill="rgb(238,219,53)" fg:x="249" fg:w="1"/><text x="6.8548%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (11 samples, 0.29%)</title><rect x="6.3926%" y="373" width="0.2918%" height="15" fill="rgb(232,167,36)" fg:x="241" fg:w="11"/><text x="6.6426%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11 samples, 0.29%)</title><rect x="6.3926%" y="357" width="0.2918%" height="15" fill="rgb(244,19,51)" fg:x="241" fg:w="11"/><text x="6.6426%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.05%)</title><rect x="6.6313%" y="341" width="0.0531%" height="15" fill="rgb(224,6,22)" fg:x="250" fg:w="2"/><text x="6.8813%" y="351.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="6.6313%" y="325" width="0.0531%" height="15" fill="rgb(224,145,5)" fg:x="250" fg:w="2"/><text x="6.8813%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="6.6313%" y="309" width="0.0531%" height="15" fill="rgb(234,130,49)" fg:x="250" fg:w="2"/><text x="6.8813%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.40%)</title><rect x="6.3660%" y="389" width="0.3979%" height="15" fill="rgb(254,6,2)" fg:x="240" fg:w="15"/><text x="6.6160%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (3 samples, 0.08%)</title><rect x="6.6844%" y="373" width="0.0796%" height="15" fill="rgb(208,96,46)" fg:x="252" fg:w="3"/><text x="6.9344%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.08%)</title><rect x="6.6844%" y="357" width="0.0796%" height="15" fill="rgb(239,3,39)" fg:x="252" fg:w="3"/><text x="6.9344%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.08%)</title><rect x="6.6844%" y="341" width="0.0796%" height="15" fill="rgb(233,210,1)" fg:x="252" fg:w="3"/><text x="6.9344%" y="351.50"></text></g><g><title>core::ptr::write (3 samples, 0.08%)</title><rect x="6.6844%" y="325" width="0.0796%" height="15" fill="rgb(244,137,37)" fg:x="252" fg:w="3"/><text x="6.9344%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.03%)</title><rect x="6.7639%" y="341" width="0.0265%" height="15" fill="rgb(240,136,2)" fg:x="255" fg:w="1"/><text x="7.0139%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (1 samples, 0.03%)</title><rect x="6.7639%" y="325" width="0.0265%" height="15" fill="rgb(239,18,37)" fg:x="255" fg:w="1"/><text x="7.0139%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.03%)</title><rect x="6.7639%" y="309" width="0.0265%" height="15" fill="rgb(218,185,22)" fg:x="255" fg:w="1"/><text x="7.0139%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="6.7639%" y="293" width="0.0265%" height="15" fill="rgb(225,218,4)" fg:x="255" fg:w="1"/><text x="7.0139%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="6.7639%" y="389" width="0.0531%" height="15" fill="rgb(230,182,32)" fg:x="255" fg:w="2"/><text x="7.0139%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.05%)</title><rect x="6.7639%" y="373" width="0.0531%" height="15" fill="rgb(242,56,43)" fg:x="255" fg:w="2"/><text x="7.0139%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.05%)</title><rect x="6.7639%" y="357" width="0.0531%" height="15" fill="rgb(233,99,24)" fg:x="255" fg:w="2"/><text x="7.0139%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.03%)</title><rect x="6.7905%" y="341" width="0.0265%" height="15" fill="rgb(234,209,42)" fg:x="256" fg:w="1"/><text x="7.0405%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.03%)</title><rect x="6.7905%" y="325" width="0.0265%" height="15" fill="rgb(227,7,12)" fg:x="256" fg:w="1"/><text x="7.0405%" y="335.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (1 samples, 0.03%)</title><rect x="6.7905%" y="309" width="0.0265%" height="15" fill="rgb(245,203,43)" fg:x="256" fg:w="1"/><text x="7.0405%" y="319.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (1 samples, 0.03%)</title><rect x="6.7905%" y="293" width="0.0265%" height="15" fill="rgb(238,205,33)" fg:x="256" fg:w="1"/><text x="7.0405%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.03%)</title><rect x="6.7905%" y="277" width="0.0265%" height="15" fill="rgb(231,56,7)" fg:x="256" fg:w="1"/><text x="7.0405%" y="287.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="6.7905%" y="261" width="0.0265%" height="15" fill="rgb(244,186,29)" fg:x="256" fg:w="1"/><text x="7.0405%" y="271.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (1 samples, 0.03%)</title><rect x="6.7905%" y="245" width="0.0265%" height="15" fill="rgb(234,111,31)" fg:x="256" fg:w="1"/><text x="7.0405%" y="255.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::stack_pop (1 samples, 0.03%)</title><rect x="6.7905%" y="229" width="0.0265%" height="15" fill="rgb(241,149,10)" fg:x="256" fg:w="1"/><text x="7.0405%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.03%)</title><rect x="6.7905%" y="213" width="0.0265%" height="15" fill="rgb(249,206,44)" fg:x="256" fg:w="1"/><text x="7.0405%" y="223.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.03%)</title><rect x="6.8170%" y="389" width="0.0265%" height="15" fill="rgb(251,153,30)" fg:x="257" fg:w="1"/><text x="7.0670%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.03%)</title><rect x="6.8170%" y="373" width="0.0265%" height="15" fill="rgb(239,152,38)" fg:x="257" fg:w="1"/><text x="7.0670%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="6.8170%" y="357" width="0.0265%" height="15" fill="rgb(249,139,47)" fg:x="257" fg:w="1"/><text x="7.0670%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="6.8170%" y="341" width="0.0265%" height="15" fill="rgb(244,64,35)" fg:x="257" fg:w="1"/><text x="7.0670%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.03%)</title><rect x="6.8170%" y="325" width="0.0265%" height="15" fill="rgb(216,46,15)" fg:x="257" fg:w="1"/><text x="7.0670%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.03%)</title><rect x="6.8170%" y="309" width="0.0265%" height="15" fill="rgb(250,74,19)" fg:x="257" fg:w="1"/><text x="7.0670%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.03%)</title><rect x="6.8170%" y="293" width="0.0265%" height="15" fill="rgb(249,42,33)" fg:x="257" fg:w="1"/><text x="7.0670%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.03%)</title><rect x="6.8170%" y="277" width="0.0265%" height="15" fill="rgb(242,149,17)" fg:x="257" fg:w="1"/><text x="7.0670%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="6.8170%" y="261" width="0.0265%" height="15" fill="rgb(244,29,21)" fg:x="257" fg:w="1"/><text x="7.0670%" y="271.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="6.8170%" y="245" width="0.0265%" height="15" fill="rgb(220,130,37)" fg:x="257" fg:w="1"/><text x="7.0670%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="6.8170%" y="229" width="0.0265%" height="15" fill="rgb(211,67,2)" fg:x="257" fg:w="1"/><text x="7.0670%" y="239.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::drawable (1 samples, 0.03%)</title><rect x="6.8435%" y="389" width="0.0265%" height="15" fill="rgb(235,68,52)" fg:x="258" fg:w="1"/><text x="7.0935%" y="399.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::width (4 samples, 0.11%)</title><rect x="6.8700%" y="389" width="0.1061%" height="15" fill="rgb(246,142,3)" fg:x="259" fg:w="4"/><text x="7.1200%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="6.9496%" y="373" width="0.0265%" height="15" fill="rgb(241,25,7)" fg:x="262" fg:w="1"/><text x="7.1996%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="7.3740%" y="373" width="0.0265%" height="15" fill="rgb(242,119,39)" fg:x="278" fg:w="1"/><text x="7.6240%" y="383.50"></text></g><g><title>indicatif::progress_bar::TickerControl::run (21 samples, 0.56%)</title><rect x="6.9761%" y="389" width="0.5570%" height="15" fill="rgb(241,98,45)" fg:x="263" fg:w="21"/><text x="7.2261%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.13%)</title><rect x="7.4005%" y="373" width="0.1326%" height="15" fill="rgb(254,28,30)" fg:x="279" fg:w="5"/><text x="7.6505%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (4 samples, 0.11%)</title><rect x="7.4271%" y="357" width="0.1061%" height="15" fill="rgb(241,142,54)" fg:x="280" fg:w="4"/><text x="7.6771%" y="367.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.11%)</title><rect x="7.4271%" y="341" width="0.1061%" height="15" fill="rgb(222,85,15)" fg:x="280" fg:w="4"/><text x="7.6771%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="7.5066%" y="325" width="0.0265%" height="15" fill="rgb(210,85,47)" fg:x="283" fg:w="1"/><text x="7.7566%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="7.5066%" y="309" width="0.0265%" height="15" fill="rgb(224,206,25)" fg:x="283" fg:w="1"/><text x="7.7566%" y="319.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::width (1 samples, 0.03%)</title><rect x="7.5597%" y="373" width="0.0265%" height="15" fill="rgb(243,201,19)" fg:x="285" fg:w="1"/><text x="7.8097%" y="383.50"></text></g><g><title>&lt;indicatif::format::BinaryBytes as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="7.7188%" y="357" width="0.0265%" height="15" fill="rgb(236,59,4)" fg:x="291" fg:w="1"/><text x="7.9688%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="7.7188%" y="341" width="0.0265%" height="15" fill="rgb(254,179,45)" fg:x="291" fg:w="1"/><text x="7.9688%" y="351.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1 samples, 0.03%)</title><rect x="7.7188%" y="325" width="0.0265%" height="15" fill="rgb(226,14,10)" fg:x="291" fg:w="1"/><text x="7.9688%" y="335.50"></text></g><g><title>indicatif::state::BarState::draw (9 samples, 0.24%)</title><rect x="7.5332%" y="389" width="0.2387%" height="15" fill="rgb(244,27,41)" fg:x="284" fg:w="9"/><text x="7.7832%" y="399.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (7 samples, 0.19%)</title><rect x="7.5862%" y="373" width="0.1857%" height="15" fill="rgb(235,35,32)" fg:x="286" fg:w="7"/><text x="7.8362%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="7.7454%" y="357" width="0.0265%" height="15" fill="rgb(218,68,31)" fg:x="292" fg:w="1"/><text x="7.9954%" y="367.50"></text></g><g><title>mi_bitmap_is_claimedx_across.isra.0 (2 samples, 0.05%)</title><rect x="7.7719%" y="389" width="0.0531%" height="15" fill="rgb(207,120,37)" fg:x="293" fg:w="2"/><text x="8.0219%" y="399.50"></text></g><g><title>mi_free (3 samples, 0.08%)</title><rect x="7.8249%" y="389" width="0.0796%" height="15" fill="rgb(227,98,0)" fg:x="295" fg:w="3"/><text x="8.0749%" y="399.50"></text></g><g><title>mi_free_generic_mt (1 samples, 0.03%)</title><rect x="7.9045%" y="389" width="0.0265%" height="15" fill="rgb(207,7,3)" fg:x="298" fg:w="1"/><text x="8.1545%" y="399.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (4 samples, 0.11%)</title><rect x="7.9310%" y="389" width="0.1061%" height="15" fill="rgb(206,98,19)" fg:x="299" fg:w="4"/><text x="8.1810%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.08%)</title><rect x="7.9576%" y="373" width="0.0796%" height="15" fill="rgb(217,5,26)" fg:x="300" fg:w="3"/><text x="8.2076%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="8.0106%" y="357" width="0.0265%" height="15" fill="rgb(235,190,38)" fg:x="302" fg:w="1"/><text x="8.2606%" y="367.50"></text></g><g><title>mi_segment_span_remove_from_queue (1 samples, 0.03%)</title><rect x="8.0371%" y="389" width="0.0265%" height="15" fill="rgb(247,86,24)" fg:x="303" fg:w="1"/><text x="8.2871%" y="399.50"></text></g><g><title>_mi_random_next (1 samples, 0.03%)</title><rect x="8.1963%" y="357" width="0.0265%" height="15" fill="rgb(205,101,16)" fg:x="309" fg:w="1"/><text x="8.4463%" y="367.50"></text></g><g><title>mi_thread_init (15 samples, 0.40%)</title><rect x="8.0637%" y="389" width="0.3979%" height="15" fill="rgb(246,168,33)" fg:x="304" fg:w="15"/><text x="8.3137%" y="399.50"></text></g><g><title>_mi_heap_init (15 samples, 0.40%)</title><rect x="8.0637%" y="373" width="0.3979%" height="15" fill="rgb(231,114,1)" fg:x="304" fg:w="15"/><text x="8.3137%" y="383.50"></text></g><g><title>mi_random_init_ex (9 samples, 0.24%)</title><rect x="8.2228%" y="357" width="0.2387%" height="15" fill="rgb(207,184,53)" fg:x="310" fg:w="9"/><text x="8.4728%" y="367.50"></text></g><g><title>_mi_prim_random_buf (5 samples, 0.13%)</title><rect x="8.3289%" y="341" width="0.1326%" height="15" fill="rgb(224,95,51)" fg:x="314" fg:w="5"/><text x="8.5789%" y="351.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="8.4350%" y="325" width="0.0265%" height="15" fill="rgb(212,188,45)" fg:x="318" fg:w="1"/><text x="8.6850%" y="335.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (3 samples, 0.08%)</title><rect x="8.4615%" y="389" width="0.0796%" height="15" fill="rgb(223,154,38)" fg:x="319" fg:w="3"/><text x="8.7115%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="8.4881%" y="373" width="0.0531%" height="15" fill="rgb(251,22,52)" fg:x="320" fg:w="2"/><text x="8.7381%" y="383.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.03%)</title><rect x="8.5411%" y="389" width="0.0265%" height="15" fill="rgb(229,209,22)" fg:x="322" fg:w="1"/><text x="8.7911%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="8.5411%" y="373" width="0.0265%" height="15" fill="rgb(234,138,34)" fg:x="322" fg:w="1"/><text x="8.7911%" y="383.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::new (1 samples, 0.03%)</title><rect x="8.5411%" y="357" width="0.0265%" height="15" fill="rgb(212,95,11)" fg:x="322" fg:w="1"/><text x="8.7911%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.03%)</title><rect x="8.5676%" y="389" width="0.0265%" height="15" fill="rgb(240,179,47)" fg:x="323" fg:w="1"/><text x="8.8176%" y="399.50"></text></g><g><title>rnix::ast::str_util::&lt;impl rnix::ast::nodes::Str&gt;::normalized_parts (1 samples, 0.03%)</title><rect x="8.5942%" y="389" width="0.0265%" height="15" fill="rgb(240,163,11)" fg:x="324" fg:w="1"/><text x="8.8442%" y="399.50"></text></g><g><title>rnix::ast::support::nth (1 samples, 0.03%)</title><rect x="8.6207%" y="389" width="0.0265%" height="15" fill="rgb(236,37,12)" fg:x="325" fg:w="1"/><text x="8.8707%" y="399.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children (1 samples, 0.03%)</title><rect x="8.6207%" y="373" width="0.0265%" height="15" fill="rgb(232,164,16)" fg:x="325" fg:w="1"/><text x="8.8707%" y="383.50"></text></g><g><title>rowan::cursor::SyntaxNode::children (1 samples, 0.03%)</title><rect x="8.6207%" y="357" width="0.0265%" height="15" fill="rgb(244,205,15)" fg:x="325" fg:w="1"/><text x="8.8707%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::manual_bump (1 samples, 0.03%)</title><rect x="8.6472%" y="389" width="0.0265%" height="15" fill="rgb(223,117,47)" fg:x="326" fg:w="1"/><text x="8.8972%" y="399.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::token (1 samples, 0.03%)</title><rect x="8.6472%" y="373" width="0.0265%" height="15" fill="rgb(244,107,35)" fg:x="326" fg:w="1"/><text x="8.8972%" y="383.50"></text></g><g><title>&lt;rowan::cow_mut::CowMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="8.6472%" y="357" width="0.0265%" height="15" fill="rgb(205,140,8)" fg:x="326" fg:w="1"/><text x="8.8972%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_right_assoc (2 samples, 0.05%)</title><rect x="8.6737%" y="389" width="0.0531%" height="15" fill="rgb(228,84,46)" fg:x="327" fg:w="2"/><text x="8.9237%" y="399.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_simple (1 samples, 0.03%)</title><rect x="8.7003%" y="373" width="0.0265%" height="15" fill="rgb(254,188,9)" fg:x="328" fg:w="1"/><text x="8.9503%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek (1 samples, 0.03%)</title><rect x="8.7003%" y="357" width="0.0265%" height="15" fill="rgb(206,112,54)" fg:x="328" fg:w="1"/><text x="8.9503%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (1 samples, 0.03%)</title><rect x="8.7003%" y="341" width="0.0265%" height="15" fill="rgb(216,84,49)" fg:x="328" fg:w="1"/><text x="8.9503%" y="351.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_set (1 samples, 0.03%)</title><rect x="8.7268%" y="389" width="0.0265%" height="15" fill="rgb(214,194,35)" fg:x="329" fg:w="1"/><text x="8.9768%" y="399.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek (1 samples, 0.03%)</title><rect x="8.7268%" y="373" width="0.0265%" height="15" fill="rgb(249,28,3)" fg:x="329" fg:w="1"/><text x="8.9768%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (1 samples, 0.03%)</title><rect x="8.7268%" y="357" width="0.0265%" height="15" fill="rgb(222,56,52)" fg:x="329" fg:w="1"/><text x="8.9768%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_raw (1 samples, 0.03%)</title><rect x="8.7268%" y="341" width="0.0265%" height="15" fill="rgb(245,217,50)" fg:x="329" fg:w="1"/><text x="8.9768%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1 samples, 0.03%)</title><rect x="8.7268%" y="325" width="0.0265%" height="15" fill="rgb(213,201,24)" fg:x="329" fg:w="1"/><text x="8.9768%" y="335.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1 samples, 0.03%)</title><rect x="8.7268%" y="309" width="0.0265%" height="15" fill="rgb(248,116,28)" fg:x="329" fg:w="1"/><text x="8.9768%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="8.7268%" y="293" width="0.0265%" height="15" fill="rgb(219,72,43)" fg:x="329" fg:w="1"/><text x="8.9768%" y="303.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (7 samples, 0.19%)</title><rect x="8.7533%" y="389" width="0.1857%" height="15" fill="rgb(209,138,14)" fg:x="330" fg:w="7"/><text x="9.0033%" y="399.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.16%)</title><rect x="8.7798%" y="373" width="0.1592%" height="15" fill="rgb(222,18,33)" fg:x="331" fg:w="6"/><text x="9.0298%" y="383.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (4 samples, 0.11%)</title><rect x="8.8329%" y="357" width="0.1061%" height="15" fill="rgb(213,199,7)" fg:x="333" fg:w="4"/><text x="9.0829%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="8.9125%" y="341" width="0.0265%" height="15" fill="rgb(250,110,10)" fg:x="336" fg:w="1"/><text x="9.1625%" y="351.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume (1 samples, 0.03%)</title><rect x="8.9390%" y="389" width="0.0265%" height="15" fill="rgb(248,123,6)" fg:x="337" fg:w="1"/><text x="9.1890%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="8.9390%" y="373" width="0.0265%" height="15" fill="rgb(206,91,31)" fg:x="337" fg:w="1"/><text x="9.1890%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="8.9390%" y="357" width="0.0265%" height="15" fill="rgb(211,154,13)" fg:x="337" fg:w="1"/><text x="9.1890%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="8.9390%" y="341" width="0.0265%" height="15" fill="rgb(225,148,7)" fg:x="337" fg:w="1"/><text x="9.1890%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="8.9390%" y="325" width="0.0265%" height="15" fill="rgb(220,160,43)" fg:x="337" fg:w="1"/><text x="9.1890%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="8.9390%" y="309" width="0.0265%" height="15" fill="rgb(213,52,39)" fg:x="337" fg:w="1"/><text x="9.1890%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="8.9390%" y="293" width="0.0265%" height="15" fill="rgb(243,137,7)" fg:x="337" fg:w="1"/><text x="9.1890%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (1 samples, 0.03%)</title><rect x="8.9390%" y="277" width="0.0265%" height="15" fill="rgb(230,79,13)" fg:x="337" fg:w="1"/><text x="9.1890%" y="287.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume::_{{closure}} (1 samples, 0.03%)</title><rect x="8.9390%" y="261" width="0.0265%" height="15" fill="rgb(247,105,23)" fg:x="337" fg:w="1"/><text x="9.1890%" y="271.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner::_{{closure}} (1 samples, 0.03%)</title><rect x="8.9390%" y="245" width="0.0265%" height="15" fill="rgb(223,179,41)" fg:x="337" fg:w="1"/><text x="9.1890%" y="255.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child (1 samples, 0.03%)</title><rect x="8.9655%" y="389" width="0.0265%" height="15" fill="rgb(218,9,34)" fg:x="338" fg:w="1"/><text x="9.2155%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="9.0186%" y="373" width="0.0265%" height="15" fill="rgb(222,106,8)" fg:x="340" fg:w="1"/><text x="9.2686%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="9.0186%" y="357" width="0.0265%" height="15" fill="rgb(211,220,0)" fg:x="340" fg:w="1"/><text x="9.2686%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="9.0186%" y="341" width="0.0265%" height="15" fill="rgb(229,52,16)" fg:x="340" fg:w="1"/><text x="9.2686%" y="351.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (3 samples, 0.08%)</title><rect x="8.9920%" y="389" width="0.0796%" height="15" fill="rgb(212,155,18)" fg:x="339" fg:w="3"/><text x="9.2420%" y="399.50"></text></g><g><title>&lt;rowan::green::node::GreenNode as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.0451%" y="373" width="0.0265%" height="15" fill="rgb(242,21,14)" fg:x="341" fg:w="1"/><text x="9.2951%" y="383.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.0451%" y="357" width="0.0265%" height="15" fill="rgb(222,19,48)" fg:x="341" fg:w="1"/><text x="9.2951%" y="367.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::with_arc (1 samples, 0.03%)</title><rect x="9.0451%" y="341" width="0.0265%" height="15" fill="rgb(232,45,27)" fg:x="341" fg:w="1"/><text x="9.2951%" y="351.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone::_{{closure}} (1 samples, 0.03%)</title><rect x="9.0451%" y="325" width="0.0265%" height="15" fill="rgb(249,103,42)" fg:x="341" fg:w="1"/><text x="9.2951%" y="335.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.0451%" y="309" width="0.0265%" height="15" fill="rgb(246,81,33)" fg:x="341" fg:w="1"/><text x="9.2951%" y="319.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token (1 samples, 0.03%)</title><rect x="9.0716%" y="389" width="0.0265%" height="15" fill="rgb(252,33,42)" fg:x="342" fg:w="1"/><text x="9.3216%" y="399.50"></text></g><g><title>rowan::green::node_cache::node_hash (1 samples, 0.03%)</title><rect x="9.0981%" y="389" width="0.0265%" height="15" fill="rgb(209,212,41)" fg:x="343" fg:w="1"/><text x="9.3481%" y="399.50"></text></g><g><title>rowan::green::node::GreenNodeData::children (1 samples, 0.03%)</title><rect x="9.0981%" y="373" width="0.0265%" height="15" fill="rgb(207,154,6)" fg:x="343" fg:w="1"/><text x="9.3481%" y="383.50"></text></g><g><title>rowan::green::node::GreenNodeData::slice (1 samples, 0.03%)</title><rect x="9.0981%" y="357" width="0.0265%" height="15" fill="rgb(223,64,47)" fg:x="343" fg:w="1"/><text x="9.3481%" y="367.50"></text></g><g><title>&lt;rowan::arc::HeaderSlice&lt;H,[T: 0]&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="9.0981%" y="341" width="0.0265%" height="15" fill="rgb(211,161,38)" fg:x="343" fg:w="1"/><text x="9.3481%" y="351.50"></text></g><g><title>rustls_pki_types::base64::decode_public (2 samples, 0.05%)</title><rect x="9.1247%" y="389" width="0.0531%" height="15" fill="rgb(219,138,40)" fg:x="344" fg:w="2"/><text x="9.3747%" y="399.50"></text></g><g><title>rustls_pki_types::pem::read (1 samples, 0.03%)</title><rect x="9.1777%" y="389" width="0.0265%" height="15" fill="rgb(241,228,46)" fg:x="346" fg:w="1"/><text x="9.4277%" y="399.50"></text></g><g><title>snix_eval::builtins::placeholder_builtins::builtin_unsafe_discard_string_context::_{{closure}} (1 samples, 0.03%)</title><rect x="9.2042%" y="389" width="0.0265%" height="15" fill="rgb(223,209,38)" fg:x="347" fg:w="1"/><text x="9.4542%" y="399.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_is_function::_{{closure}} (1 samples, 0.03%)</title><rect x="9.2308%" y="389" width="0.0265%" height="15" fill="rgb(236,164,45)" fg:x="348" fg:w="1"/><text x="9.4808%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (1 samples, 0.03%)</title><rect x="9.2308%" y="373" width="0.0265%" height="15" fill="rgb(231,15,5)" fg:x="348" fg:w="1"/><text x="9.4808%" y="383.50"></text></g><g><title>snix_eval::chunk::Chunk::push_uvarint (2 samples, 0.05%)</title><rect x="9.2573%" y="389" width="0.0531%" height="15" fill="rgb(252,35,15)" fg:x="349" fg:w="2"/><text x="9.5073%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="9.2573%" y="373" width="0.0531%" height="15" fill="rgb(248,181,18)" fg:x="349" fg:w="2"/><text x="9.5073%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="9.2573%" y="357" width="0.0531%" height="15" fill="rgb(233,39,42)" fg:x="349" fg:w="2"/><text x="9.5073%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="9.2573%" y="341" width="0.0531%" height="15" fill="rgb(238,110,33)" fg:x="349" fg:w="2"/><text x="9.5073%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="9.2573%" y="325" width="0.0531%" height="15" fill="rgb(233,195,10)" fg:x="349" fg:w="2"/><text x="9.5073%" y="335.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.05%)</title><rect x="9.2573%" y="309" width="0.0531%" height="15" fill="rgb(254,105,3)" fg:x="349" fg:w="2"/><text x="9.5073%" y="319.50"></text></g><g><title>snix_eval::compiler::Compiler::new_context (1 samples, 0.03%)</title><rect x="9.3103%" y="389" width="0.0265%" height="15" fill="rgb(221,225,9)" fg:x="351" fg:w="1"/><text x="9.5603%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="9.3103%" y="373" width="0.0265%" height="15" fill="rgb(224,227,45)" fg:x="351" fg:w="1"/><text x="9.5603%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="9.3103%" y="357" width="0.0265%" height="15" fill="rgb(229,198,43)" fg:x="351" fg:w="1"/><text x="9.5603%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="9.3103%" y="341" width="0.0265%" height="15" fill="rgb(206,209,35)" fg:x="351" fg:w="1"/><text x="9.5603%" y="351.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::resolve_upvalue_for_use (1 samples, 0.03%)</title><rect x="9.3369%" y="389" width="0.0265%" height="15" fill="rgb(245,195,53)" fg:x="352" fg:w="1"/><text x="9.5869%" y="399.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::add_upvalue (1 samples, 0.03%)</title><rect x="9.3369%" y="373" width="0.0265%" height="15" fill="rgb(240,92,26)" fg:x="352" fg:w="1"/><text x="9.5869%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="9.3369%" y="357" width="0.0265%" height="15" fill="rgb(207,40,23)" fg:x="352" fg:w="1"/><text x="9.5869%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="9.3369%" y="341" width="0.0265%" height="15" fill="rgb(223,111,35)" fg:x="352" fg:w="1"/><text x="9.5869%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="9.3369%" y="325" width="0.0265%" height="15" fill="rgb(229,147,28)" fg:x="352" fg:w="1"/><text x="9.5869%" y="335.50"></text></g><g><title>snix_eval::compiler::optimiser::optimise_expr (1 samples, 0.03%)</title><rect x="9.3634%" y="389" width="0.0265%" height="15" fill="rgb(211,29,28)" fg:x="353" fg:w="1"/><text x="9.6134%" y="399.50"></text></g><g><title>snix_eval::compiler::optimiser::optimise_bin_op (1 samples, 0.03%)</title><rect x="9.3634%" y="373" width="0.0265%" height="15" fill="rgb(228,72,33)" fg:x="353" fg:w="1"/><text x="9.6134%" y="383.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::is_user_defined (1 samples, 0.03%)</title><rect x="9.3634%" y="357" width="0.0265%" height="15" fill="rgb(205,214,31)" fg:x="353" fg:w="1"/><text x="9.6134%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::scope_mut (1 samples, 0.03%)</title><rect x="9.3634%" y="341" width="0.0265%" height="15" fill="rgb(224,111,15)" fg:x="353" fg:w="1"/><text x="9.6134%" y="351.50"></text></g><g><title>snix_eval::compiler::scope::Scope::end_scope (1 samples, 0.03%)</title><rect x="9.3899%" y="389" width="0.0265%" height="15" fill="rgb(253,21,26)" fg:x="354" fg:w="1"/><text x="9.6399%" y="399.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_enter_call_frame (1 samples, 0.03%)</title><rect x="9.4164%" y="389" width="0.0265%" height="15" fill="rgb(245,139,43)" fg:x="355" fg:w="1"/><text x="9.6664%" y="399.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string::_{{closure}} (1 samples, 0.03%)</title><rect x="9.4430%" y="389" width="0.0265%" height="15" fill="rgb(252,170,7)" fg:x="356" fg:w="1"/><text x="9.6930%" y="399.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string_::_{{closure}} (1 samples, 0.03%)</title><rect x="9.4430%" y="373" width="0.0265%" height="15" fill="rgb(231,118,14)" fg:x="356" fg:w="1"/><text x="9.6930%" y="383.50"></text></g><g><title>snix_eval::value::Value::force::_{{closure}} (2 samples, 0.05%)</title><rect x="9.4695%" y="389" width="0.0531%" height="15" fill="rgb(238,83,0)" fg:x="357" fg:w="2"/><text x="9.7195%" y="399.50"></text></g><g><title>snix_eval::value::Value::force_owned_genco::_{{closure}} (3 samples, 0.08%)</title><rect x="9.5225%" y="389" width="0.0796%" height="15" fill="rgb(221,39,39)" fg:x="359" fg:w="3"/><text x="9.7725%" y="399.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::construct (2 samples, 0.05%)</title><rect x="9.6021%" y="389" width="0.0531%" height="15" fill="rgb(222,119,46)" fg:x="362" fg:w="2"/><text x="9.8521%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.05%)</title><rect x="9.6021%" y="373" width="0.0531%" height="15" fill="rgb(222,165,49)" fg:x="362" fg:w="2"/><text x="9.8521%" y="383.50"></text></g><g><title>snix_eval::value::string::NixString::concat (1 samples, 0.03%)</title><rect x="9.6552%" y="389" width="0.0265%" height="15" fill="rgb(219,113,52)" fg:x="364" fg:w="1"/><text x="9.9052%" y="399.50"></text></g><g><title>snix_eval::value::string::context::NixContext::new (1 samples, 0.03%)</title><rect x="9.6552%" y="373" width="0.0265%" height="15" fill="rgb(214,7,15)" fg:x="364" fg:w="1"/><text x="9.9052%" y="383.50"></text></g><g><title>&lt;snix_eval::value::string::context::NixContext as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="9.6552%" y="357" width="0.0265%" height="15" fill="rgb(235,32,4)" fg:x="364" fg:w="1"/><text x="9.9052%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="9.6552%" y="341" width="0.0265%" height="15" fill="rgb(238,90,54)" fg:x="364" fg:w="1"/><text x="9.9052%" y="351.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="9.6552%" y="325" width="0.0265%" height="15" fill="rgb(213,208,19)" fg:x="364" fg:w="1"/><text x="9.9052%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="9.6552%" y="309" width="0.0265%" height="15" fill="rgb(233,156,4)" fg:x="364" fg:w="1"/><text x="9.9052%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (1 samples, 0.03%)</title><rect x="9.6552%" y="293" width="0.0265%" height="15" fill="rgb(207,194,5)" fg:x="364" fg:w="1"/><text x="9.9052%" y="303.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force::_{{closure}} (7 samples, 0.19%)</title><rect x="9.6817%" y="389" width="0.1857%" height="15" fill="rgb(206,111,30)" fg:x="365" fg:w="7"/><text x="9.9317%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Co&lt;genawaiter::rc::engine::Airlock&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8408%" y="373" width="0.0265%" height="15" fill="rgb(243,70,54)" fg:x="371" fg:w="1"/><text x="10.0908%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::rc::engine::Airlock&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8408%" y="357" width="0.0265%" height="15" fill="rgb(242,28,8)" fg:x="371" fg:w="1"/><text x="10.0908%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::Cell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8408%" y="341" width="0.0265%" height="15" fill="rgb(219,106,18)" fg:x="371" fg:w="1"/><text x="10.0908%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.8408%" y="325" width="0.0265%" height="15" fill="rgb(244,222,10)" fg:x="371" fg:w="1"/><text x="10.0908%" y="335.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force_::_{{closure}} (2 samples, 0.05%)</title><rect x="9.8674%" y="389" width="0.0531%" height="15" fill="rgb(236,179,52)" fg:x="372" fg:w="2"/><text x="10.1174%" y="399.50"></text></g><g><title>snix_eval::value::thunk::Thunk::is_forced (1 samples, 0.03%)</title><rect x="9.9204%" y="389" width="0.0265%" height="15" fill="rgb(213,23,39)" fg:x="374" fg:w="1"/><text x="10.1704%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="9.9204%" y="373" width="0.0265%" height="15" fill="rgb(238,48,10)" fg:x="374" fg:w="1"/><text x="10.1704%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="9.9204%" y="357" width="0.0265%" height="15" fill="rgb(251,196,23)" fg:x="374" fg:w="1"/><text x="10.1704%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="9.9204%" y="341" width="0.0265%" height="15" fill="rgb(250,152,24)" fg:x="374" fg:w="1"/><text x="10.1704%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="9.9735%" y="373" width="0.0531%" height="15" fill="rgb(209,150,17)" fg:x="376" fg:w="2"/><text x="10.2235%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="9.9735%" y="357" width="0.0531%" height="15" fill="rgb(234,202,34)" fg:x="376" fg:w="2"/><text x="10.2235%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="10.0000%" y="341" width="0.0265%" height="15" fill="rgb(253,148,53)" fg:x="377" fg:w="1"/><text x="10.2500%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="10.0000%" y="325" width="0.0265%" height="15" fill="rgb(218,129,16)" fg:x="377" fg:w="1"/><text x="10.2500%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="10.0000%" y="309" width="0.0265%" height="15" fill="rgb(216,85,19)" fg:x="377" fg:w="1"/><text x="10.2500%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="10.0000%" y="293" width="0.0265%" height="15" fill="rgb(235,228,7)" fg:x="377" fg:w="1"/><text x="10.2500%" y="303.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended (4 samples, 0.11%)</title><rect x="9.9469%" y="389" width="0.1061%" height="15" fill="rgb(245,175,0)" fg:x="375" fg:w="4"/><text x="10.1969%" y="399.50"></text></g><g><title>snix_eval::upvalues::Upvalues::with_capacity (1 samples, 0.03%)</title><rect x="10.0265%" y="373" width="0.0265%" height="15" fill="rgb(208,168,36)" fg:x="378" fg:w="1"/><text x="10.2765%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="10.0265%" y="357" width="0.0265%" height="15" fill="rgb(246,171,24)" fg:x="378" fg:w="1"/><text x="10.2765%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="10.0265%" y="341" width="0.0265%" height="15" fill="rgb(215,142,24)" fg:x="378" fg:w="1"/><text x="10.2765%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="10.0265%" y="325" width="0.0265%" height="15" fill="rgb(250,187,7)" fg:x="378" fg:w="1"/><text x="10.2765%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="10.0265%" y="309" width="0.0265%" height="15" fill="rgb(228,66,33)" fg:x="378" fg:w="1"/><text x="10.2765%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="10.0265%" y="293" width="0.0265%" height="15" fill="rgb(234,215,21)" fg:x="378" fg:w="1"/><text x="10.2765%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="10.0265%" y="277" width="0.0265%" height="15" fill="rgb(222,191,20)" fg:x="378" fg:w="1"/><text x="10.2765%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="10.0265%" y="261" width="0.0265%" height="15" fill="rgb(245,79,54)" fg:x="378" fg:w="1"/><text x="10.2765%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="10.0265%" y="245" width="0.0265%" height="15" fill="rgb(240,10,37)" fg:x="378" fg:w="1"/><text x="10.2765%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (12 samples, 0.32%)</title><rect x="10.0531%" y="373" width="0.3183%" height="15" fill="rgb(214,192,32)" fg:x="379" fg:w="12"/><text x="10.3031%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.32%)</title><rect x="10.0531%" y="357" width="0.3183%" height="15" fill="rgb(209,36,54)" fg:x="379" fg:w="12"/><text x="10.3031%" y="367.50"></text></g><g><title>snix_eval::chunk::Chunk::push_constant (8 samples, 0.21%)</title><rect x="10.3714%" y="373" width="0.2122%" height="15" fill="rgb(220,10,11)" fg:x="391" fg:w="8"/><text x="10.6214%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.21%)</title><rect x="10.3714%" y="357" width="0.2122%" height="15" fill="rgb(221,106,17)" fg:x="391" fg:w="8"/><text x="10.6214%" y="367.50"></text></g><g><title>core::ptr::write (4 samples, 0.11%)</title><rect x="10.4775%" y="341" width="0.1061%" height="15" fill="rgb(251,142,44)" fg:x="395" fg:w="4"/><text x="10.7275%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.03%)</title><rect x="10.5836%" y="325" width="0.0265%" height="15" fill="rgb(238,13,15)" fg:x="399" fg:w="1"/><text x="10.8336%" y="335.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.03%)</title><rect x="10.6101%" y="325" width="0.0265%" height="15" fill="rgb(208,107,27)" fg:x="400" fg:w="1"/><text x="10.8601%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.08%)</title><rect x="10.5836%" y="341" width="0.0796%" height="15" fill="rgb(205,136,37)" fg:x="399" fg:w="3"/><text x="10.8336%" y="351.50"></text></g><g><title>mi_heap_malloc_aligned_at (1 samples, 0.03%)</title><rect x="10.6366%" y="325" width="0.0265%" height="15" fill="rgb(250,205,27)" fg:x="401" fg:w="1"/><text x="10.8866%" y="335.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended_call (24 samples, 0.64%)</title><rect x="10.0531%" y="389" width="0.6366%" height="15" fill="rgb(210,80,43)" fg:x="379" fg:w="24"/><text x="10.3031%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::push_op (4 samples, 0.11%)</title><rect x="10.5836%" y="373" width="0.1061%" height="15" fill="rgb(247,160,36)" fg:x="399" fg:w="4"/><text x="10.8336%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.11%)</title><rect x="10.5836%" y="357" width="0.1061%" height="15" fill="rgb(234,13,49)" fg:x="399" fg:w="4"/><text x="10.8336%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="10.6631%" y="341" width="0.0265%" height="15" fill="rgb(234,122,0)" fg:x="402" fg:w="1"/><text x="10.9131%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt; (1 samples, 0.03%)</title><rect x="10.6897%" y="373" width="0.0265%" height="15" fill="rgb(207,146,38)" fg:x="403" fg:w="1"/><text x="10.9397%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (1 samples, 0.03%)</title><rect x="10.6897%" y="357" width="0.0265%" height="15" fill="rgb(207,177,25)" fg:x="403" fg:w="1"/><text x="10.9397%" y="367.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="10.6897%" y="341" width="0.0265%" height="15" fill="rgb(211,178,42)" fg:x="403" fg:w="1"/><text x="10.9397%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="10.6897%" y="325" width="0.0265%" height="15" fill="rgb(230,69,54)" fg:x="403" fg:w="1"/><text x="10.9397%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="10.6897%" y="309" width="0.0265%" height="15" fill="rgb(214,135,41)" fg:x="403" fg:w="1"/><text x="10.9397%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="10.6897%" y="293" width="0.0265%" height="15" fill="rgb(237,67,25)" fg:x="403" fg:w="1"/><text x="10.9397%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="10.6897%" y="277" width="0.0265%" height="15" fill="rgb(222,189,50)" fg:x="403" fg:w="1"/><text x="10.9397%" y="287.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (2 samples, 0.05%)</title><rect x="10.6897%" y="389" width="0.0531%" height="15" fill="rgb(245,148,34)" fg:x="403" fg:w="2"/><text x="10.9397%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (1 samples, 0.03%)</title><rect x="10.7162%" y="373" width="0.0265%" height="15" fill="rgb(222,29,6)" fg:x="404" fg:w="1"/><text x="10.9662%" y="383.50"></text></g><g><title>snix_eval::value::thunk::Thunk::unwrap_or_clone (1 samples, 0.03%)</title><rect x="10.7427%" y="389" width="0.0265%" height="15" fill="rgb(221,189,43)" fg:x="405" fg:w="1"/><text x="10.9927%" y="399.50"></text></g><g><title>snix_eval::value::thunk::ThunkRepr::expect (1 samples, 0.03%)</title><rect x="10.7427%" y="373" width="0.0265%" height="15" fill="rgb(207,36,27)" fg:x="405" fg:w="1"/><text x="10.9927%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="10.7692%" y="373" width="0.0265%" height="15" fill="rgb(217,90,24)" fg:x="406" fg:w="1"/><text x="11.0192%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="10.7692%" y="357" width="0.0265%" height="15" fill="rgb(224,66,35)" fg:x="406" fg:w="1"/><text x="11.0192%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="10.7692%" y="341" width="0.0265%" height="15" fill="rgb(221,13,50)" fg:x="406" fg:w="1"/><text x="11.0192%" y="351.50"></text></g><g><title>snix_eval::value::thunk::Thunk::upvalues_mut (3 samples, 0.08%)</title><rect x="10.7692%" y="389" width="0.0796%" height="15" fill="rgb(236,68,49)" fg:x="406" fg:w="3"/><text x="11.0192%" y="399.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.05%)</title><rect x="10.7958%" y="373" width="0.0531%" height="15" fill="rgb(229,146,28)" fg:x="407" fg:w="2"/><text x="11.0458%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.05%)</title><rect x="10.7958%" y="357" width="0.0531%" height="15" fill="rgb(225,31,38)" fg:x="407" fg:w="2"/><text x="11.0458%" y="367.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.05%)</title><rect x="10.7958%" y="341" width="0.0531%" height="15" fill="rgb(250,208,3)" fg:x="407" fg:w="2"/><text x="11.0458%" y="351.50"></text></g><g><title>snix_eval::vm::CallFrame::inc_ip (3 samples, 0.08%)</title><rect x="10.8488%" y="389" width="0.0796%" height="15" fill="rgb(246,54,23)" fg:x="409" fg:w="3"/><text x="11.0988%" y="399.50"></text></g><g><title>snix_eval::vm::CallFrame::chunk (2 samples, 0.05%)</title><rect x="10.8753%" y="373" width="0.0531%" height="15" fill="rgb(243,76,11)" fg:x="410" fg:w="2"/><text x="11.1253%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="10.8753%" y="357" width="0.0531%" height="15" fill="rgb(245,21,50)" fg:x="410" fg:w="2"/><text x="11.1253%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (2 samples, 0.05%)</title><rect x="10.8753%" y="341" width="0.0531%" height="15" fill="rgb(228,9,43)" fg:x="410" fg:w="2"/><text x="11.1253%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="10.8753%" y="325" width="0.0531%" height="15" fill="rgb(208,100,47)" fg:x="410" fg:w="2"/><text x="11.1253%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (1 samples, 0.03%)</title><rect x="10.9284%" y="389" width="0.0265%" height="15" fill="rgb(232,26,8)" fg:x="412" fg:w="1"/><text x="11.1784%" y="399.50"></text></g><g><title>snix_eval::vm::add_values::_{{closure}} (1 samples, 0.03%)</title><rect x="10.9549%" y="389" width="0.0265%" height="15" fill="rgb(216,166,38)" fg:x="413" fg:w="1"/><text x="11.2049%" y="399.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.03%)</title><rect x="10.9549%" y="373" width="0.0265%" height="15" fill="rgb(251,202,51)" fg:x="413" fg:w="1"/><text x="11.2049%" y="383.50"></text></g><g><title>std::sys::os_str::bytes::Buf::push_slice (1 samples, 0.03%)</title><rect x="10.9549%" y="357" width="0.0265%" height="15" fill="rgb(254,216,34)" fg:x="413" fg:w="1"/><text x="11.2049%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="10.9549%" y="341" width="0.0265%" height="15" fill="rgb(251,32,27)" fg:x="413" fg:w="1"/><text x="11.2049%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h24fcdd9ce88e58ffE.llvm.5229664222725191257 (1 samples, 0.03%)</title><rect x="10.9549%" y="325" width="0.0265%" height="15" fill="rgb(208,127,28)" fg:x="413" fg:w="1"/><text x="11.2049%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="10.9549%" y="309" width="0.0265%" height="15" fill="rgb(224,137,22)" fg:x="413" fg:w="1"/><text x="11.2049%" y="319.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="11.0345%" y="373" width="0.0265%" height="15" fill="rgb(254,70,32)" fg:x="416" fg:w="1"/><text x="11.2845%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.03%)</title><rect x="11.0345%" y="357" width="0.0265%" height="15" fill="rgb(229,75,37)" fg:x="416" fg:w="1"/><text x="11.2845%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="11.0345%" y="341" width="0.0265%" height="15" fill="rgb(252,64,23)" fg:x="416" fg:w="1"/><text x="11.2845%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="11.0345%" y="325" width="0.0265%" height="15" fill="rgb(232,162,48)" fg:x="416" fg:w="1"/><text x="11.2845%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="11.0345%" y="309" width="0.0265%" height="15" fill="rgb(246,160,12)" fg:x="416" fg:w="1"/><text x="11.2845%" y="319.50"></text></g><g><title>snix_eval::vm::generators::request_force::_{{closure}} (4 samples, 0.11%)</title><rect x="10.9814%" y="389" width="0.1061%" height="15" fill="rgb(247,166,0)" fg:x="414" fg:w="4"/><text x="11.2314%" y="399.50"></text></g><g><title>genawaiter::core::Co&lt;A&gt;::yield_ (1 samples, 0.03%)</title><rect x="11.0610%" y="373" width="0.0265%" height="15" fill="rgb(249,219,21)" fg:x="417" fg:w="1"/><text x="11.3110%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.03%)</title><rect x="11.0610%" y="357" width="0.0265%" height="15" fill="rgb(205,209,3)" fg:x="417" fg:w="1"/><text x="11.3110%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="11.0610%" y="341" width="0.0265%" height="15" fill="rgb(243,44,1)" fg:x="417" fg:w="1"/><text x="11.3110%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="11.0610%" y="325" width="0.0265%" height="15" fill="rgb(206,159,16)" fg:x="417" fg:w="1"/><text x="11.3110%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="11.0610%" y="309" width="0.0265%" height="15" fill="rgb(244,77,30)" fg:x="417" fg:w="1"/><text x="11.3110%" y="319.50"></text></g><g><title>snix_eval::vm::generators::request_span::_{{closure}} (1 samples, 0.03%)</title><rect x="11.0875%" y="389" width="0.0265%" height="15" fill="rgb(218,69,12)" fg:x="418" fg:w="1"/><text x="11.3375%" y="399.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="11.0875%" y="373" width="0.0265%" height="15" fill="rgb(212,87,7)" fg:x="418" fg:w="1"/><text x="11.3375%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.03%)</title><rect x="11.0875%" y="357" width="0.0265%" height="15" fill="rgb(245,114,25)" fg:x="418" fg:w="1"/><text x="11.3375%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="11.0875%" y="341" width="0.0265%" height="15" fill="rgb(210,61,42)" fg:x="418" fg:w="1"/><text x="11.3375%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="11.0875%" y="325" width="0.0265%" height="15" fill="rgb(211,52,33)" fg:x="418" fg:w="1"/><text x="11.3375%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="11.0875%" y="309" width="0.0265%" height="15" fill="rgb(234,58,33)" fg:x="418" fg:w="1"/><text x="11.3375%" y="319.50"></text></g><g><title>snix_eval::vm::generators::request_stack_push::_{{closure}} (1 samples, 0.03%)</title><rect x="11.1141%" y="389" width="0.0265%" height="15" fill="rgb(220,115,36)" fg:x="419" fg:w="1"/><text x="11.3641%" y="399.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="11.1141%" y="373" width="0.0265%" height="15" fill="rgb(243,153,54)" fg:x="419" fg:w="1"/><text x="11.3641%" y="383.50"></text></g><g><title>snix_eval::vm::resolve_with::_{{closure}} (1 samples, 0.03%)</title><rect x="11.1406%" y="389" width="0.0265%" height="15" fill="rgb(251,47,18)" fg:x="420" fg:w="1"/><text x="11.3906%" y="399.50"></text></g><g><title>snix_eval::vm::resolve_with::_{{closure}}::fetch_captured_with::_{{closure}} (1 samples, 0.03%)</title><rect x="11.1406%" y="373" width="0.0265%" height="15" fill="rgb(242,102,42)" fg:x="420" fg:w="1"/><text x="11.3906%" y="383.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="11.1406%" y="357" width="0.0265%" height="15" fill="rgb(234,31,38)" fg:x="420" fg:w="1"/><text x="11.3906%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="12.0955%" y="357" width="0.0265%" height="15" fill="rgb(221,117,51)" fg:x="456" fg:w="1"/><text x="12.3455%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.03%)</title><rect x="12.0955%" y="341" width="0.0265%" height="15" fill="rgb(212,20,18)" fg:x="456" fg:w="1"/><text x="12.3455%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (8 samples, 0.21%)</title><rect x="12.1220%" y="357" width="0.2122%" height="15" fill="rgb(245,133,36)" fg:x="457" fg:w="8"/><text x="12.3720%" y="367.50"></text></g><g><title>core::ptr::read (8 samples, 0.21%)</title><rect x="12.1220%" y="341" width="0.2122%" height="15" fill="rgb(212,6,19)" fg:x="457" fg:w="8"/><text x="12.3720%" y="351.50"></text></g><g><title>snix_eval::vm::Frame::span (5 samples, 0.13%)</title><rect x="12.3342%" y="357" width="0.1326%" height="15" fill="rgb(218,1,36)" fg:x="465" fg:w="5"/><text x="12.5842%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="12.8382%" y="341" width="0.0531%" height="15" fill="rgb(246,84,54)" fg:x="484" fg:w="2"/><text x="13.0882%" y="351.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.05%)</title><rect x="12.8382%" y="325" width="0.0531%" height="15" fill="rgb(242,110,6)" fg:x="484" fg:w="2"/><text x="13.0882%" y="335.50"></text></g><g><title>core::intrinsics::unlikely (2 samples, 0.05%)</title><rect x="12.8382%" y="309" width="0.0531%" height="15" fill="rgb(214,47,5)" fg:x="484" fg:w="2"/><text x="13.0882%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.05%)</title><rect x="12.8912%" y="341" width="0.0531%" height="15" fill="rgb(218,159,25)" fg:x="486" fg:w="2"/><text x="13.1412%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="12.8912%" y="325" width="0.0531%" height="15" fill="rgb(215,211,28)" fg:x="486" fg:w="2"/><text x="13.1412%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="12.8912%" y="309" width="0.0531%" height="15" fill="rgb(238,59,32)" fg:x="486" fg:w="2"/><text x="13.1412%" y="319.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="12.9443%" y="341" width="0.0265%" height="15" fill="rgb(226,82,3)" fg:x="488" fg:w="1"/><text x="13.1943%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="12.9708%" y="341" width="0.0265%" height="15" fill="rgb(240,164,32)" fg:x="489" fg:w="1"/><text x="13.2208%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="12.9708%" y="325" width="0.0265%" height="15" fill="rgb(232,46,7)" fg:x="489" fg:w="1"/><text x="13.2208%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.27%)</title><rect x="12.9973%" y="341" width="0.2653%" height="15" fill="rgb(229,129,53)" fg:x="490" fg:w="10"/><text x="13.2473%" y="351.50"></text></g><g><title>core::ptr::write (8 samples, 0.21%)</title><rect x="13.0504%" y="325" width="0.2122%" height="15" fill="rgb(234,188,29)" fg:x="492" fg:w="8"/><text x="13.3004%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="13.2626%" y="341" width="0.0265%" height="15" fill="rgb(246,141,4)" fg:x="500" fg:w="1"/><text x="13.5126%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="13.2626%" y="325" width="0.0265%" height="15" fill="rgb(229,23,39)" fg:x="500" fg:w="1"/><text x="13.5126%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="13.2626%" y="309" width="0.0265%" height="15" fill="rgb(206,12,3)" fg:x="500" fg:w="1"/><text x="13.5126%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::vm::CallFrame&gt; (2 samples, 0.05%)</title><rect x="13.2891%" y="341" width="0.0531%" height="15" fill="rgb(252,226,20)" fg:x="501" fg:w="2"/><text x="13.5391%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;snix_eval::upvalues::Upvalues&gt;&gt; (2 samples, 0.05%)</title><rect x="13.2891%" y="325" width="0.0531%" height="15" fill="rgb(216,123,35)" fg:x="501" fg:w="2"/><text x="13.5391%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="13.2891%" y="309" width="0.0531%" height="15" fill="rgb(212,68,40)" fg:x="501" fg:w="2"/><text x="13.5391%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (2 samples, 0.05%)</title><rect x="13.2891%" y="293" width="0.0531%" height="15" fill="rgb(254,125,32)" fg:x="501" fg:w="2"/><text x="13.5391%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk&gt; (1 samples, 0.03%)</title><rect x="13.3156%" y="277" width="0.0265%" height="15" fill="rgb(253,97,22)" fg:x="502" fg:w="1"/><text x="13.5656%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="13.3156%" y="261" width="0.0265%" height="15" fill="rgb(241,101,14)" fg:x="502" fg:w="1"/><text x="13.5656%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="13.3156%" y="245" width="0.0265%" height="15" fill="rgb(238,103,29)" fg:x="502" fg:w="1"/><text x="13.5656%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="13.3156%" y="229" width="0.0265%" height="15" fill="rgb(233,195,47)" fg:x="502" fg:w="1"/><text x="13.5656%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="13.3156%" y="213" width="0.0265%" height="15" fill="rgb(246,218,30)" fg:x="502" fg:w="1"/><text x="13.5656%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="13.3952%" y="325" width="0.0265%" height="15" fill="rgb(219,145,47)" fg:x="505" fg:w="1"/><text x="13.6452%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="13.3952%" y="309" width="0.0265%" height="15" fill="rgb(243,12,26)" fg:x="505" fg:w="1"/><text x="13.6452%" y="319.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.03%)</title><rect x="13.4218%" y="325" width="0.0265%" height="15" fill="rgb(214,87,16)" fg:x="506" fg:w="1"/><text x="13.6718%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.03%)</title><rect x="13.4483%" y="325" width="0.0265%" height="15" fill="rgb(208,99,42)" fg:x="507" fg:w="1"/><text x="13.6983%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::populate_upvalues (6 samples, 0.16%)</title><rect x="13.3422%" y="341" width="0.1592%" height="15" fill="rgb(253,99,2)" fg:x="503" fg:w="6"/><text x="13.5922%" y="351.50"></text></g><g><title>snix_eval::upvalues::Upvalues::with_stack (1 samples, 0.03%)</title><rect x="13.4748%" y="325" width="0.0265%" height="15" fill="rgb(220,168,23)" fg:x="508" fg:w="1"/><text x="13.7248%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="13.4748%" y="309" width="0.0265%" height="15" fill="rgb(242,38,24)" fg:x="508" fg:w="1"/><text x="13.7248%" y="319.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::push_call_frame (5 samples, 0.13%)</title><rect x="13.5013%" y="341" width="0.1326%" height="15" fill="rgb(225,182,9)" fg:x="509" fg:w="5"/><text x="13.7513%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.13%)</title><rect x="13.5013%" y="325" width="0.1326%" height="15" fill="rgb(243,178,37)" fg:x="509" fg:w="5"/><text x="13.7513%" y="335.50"></text></g><g><title>core::ptr::write (4 samples, 0.11%)</title><rect x="13.5279%" y="309" width="0.1061%" height="15" fill="rgb(232,139,19)" fg:x="510" fg:w="4"/><text x="13.7779%" y="319.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (49 samples, 1.30%)</title><rect x="12.4668%" y="357" width="1.2997%" height="15" fill="rgb(225,201,24)" fg:x="470" fg:w="49"/><text x="12.7168%" y="367.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator (5 samples, 0.13%)</title><rect x="13.6340%" y="341" width="0.1326%" height="15" fill="rgb(221,47,46)" fg:x="514" fg:w="5"/><text x="13.8840%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.13%)</title><rect x="13.6340%" y="325" width="0.1326%" height="15" fill="rgb(249,23,13)" fg:x="514" fg:w="5"/><text x="13.8840%" y="335.50"></text></g><g><title>core::ptr::write (3 samples, 0.08%)</title><rect x="13.6870%" y="309" width="0.0796%" height="15" fill="rgb(219,9,5)" fg:x="516" fg:w="3"/><text x="13.9370%" y="319.50"></text></g><g><title>core::ptr::read (3 samples, 0.08%)</title><rect x="13.7931%" y="277" width="0.0796%" height="15" fill="rgb(254,171,16)" fg:x="520" fg:w="3"/><text x="14.0431%" y="287.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::resume_with (5 samples, 0.13%)</title><rect x="13.7931%" y="341" width="0.1326%" height="15" fill="rgb(230,171,20)" fg:x="520" fg:w="5"/><text x="14.0431%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (5 samples, 0.13%)</title><rect x="13.7931%" y="325" width="0.1326%" height="15" fill="rgb(210,71,41)" fg:x="520" fg:w="5"/><text x="14.0431%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.13%)</title><rect x="13.7931%" y="309" width="0.1326%" height="15" fill="rgb(206,173,20)" fg:x="520" fg:w="5"/><text x="14.0431%" y="319.50"></text></g><g><title>core::mem::replace (5 samples, 0.13%)</title><rect x="13.7931%" y="293" width="0.1326%" height="15" fill="rgb(233,88,34)" fg:x="520" fg:w="5"/><text x="14.0431%" y="303.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="13.8727%" y="277" width="0.0531%" height="15" fill="rgb(223,209,46)" fg:x="523" fg:w="2"/><text x="14.1227%" y="287.50"></text></g><g><title>snix_eval::vm::run_lambda (105 samples, 2.79%)</title><rect x="11.1671%" y="389" width="2.7851%" height="15" fill="rgb(250,43,18)" fg:x="421" fg:w="105"/><text x="11.4171%" y="399.50">sn..</text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (105 samples, 2.79%)</title><rect x="11.1671%" y="373" width="2.7851%" height="15" fill="rgb(208,13,10)" fg:x="421" fg:w="105"/><text x="11.4171%" y="383.50">sn..</text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (7 samples, 0.19%)</title><rect x="13.7666%" y="357" width="0.1857%" height="15" fill="rgb(212,200,36)" fg:x="519" fg:w="7"/><text x="14.0166%" y="367.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::stack_pop (1 samples, 0.03%)</title><rect x="13.9257%" y="341" width="0.0265%" height="15" fill="rgb(225,90,30)" fg:x="525" fg:w="1"/><text x="14.1757%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.03%)</title><rect x="13.9257%" y="325" width="0.0265%" height="15" fill="rgb(236,182,39)" fg:x="525" fg:w="1"/><text x="14.1757%" y="335.50"></text></g><g><title>mi_free_block_mt (2 samples, 0.05%)</title><rect x="14.2440%" y="373" width="0.0531%" height="15" fill="rgb(212,144,35)" fg:x="537" fg:w="2"/><text x="14.4940%" y="383.50"></text></g><g><title>mi_option_is_enabled (1 samples, 0.03%)</title><rect x="14.2706%" y="357" width="0.0265%" height="15" fill="rgb(228,63,44)" fg:x="538" fg:w="1"/><text x="14.5206%" y="367.50"></text></g><g><title>mi_free_generic_mt (1 samples, 0.03%)</title><rect x="14.2971%" y="373" width="0.0265%" height="15" fill="rgb(228,109,6)" fg:x="539" fg:w="1"/><text x="14.5471%" y="383.50"></text></g><g><title>__libc_calloc (1 samples, 0.03%)</title><rect x="14.3501%" y="341" width="0.0265%" height="15" fill="rgb(238,117,24)" fg:x="541" fg:w="1"/><text x="14.6001%" y="351.50"></text></g><g><title>_dl_find_dso_for_object (2 samples, 0.05%)</title><rect x="14.3767%" y="341" width="0.0531%" height="15" fill="rgb(242,26,26)" fg:x="542" fg:w="2"/><text x="14.6267%" y="351.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (19 samples, 0.50%)</title><rect x="13.9523%" y="389" width="0.5040%" height="15" fill="rgb(221,92,48)" fg:x="526" fg:w="19"/><text x="14.2023%" y="399.50"></text></g><g><title>std::thread::spawnhook::ChildSpawnHooks::run (5 samples, 0.13%)</title><rect x="14.3236%" y="373" width="0.1326%" height="15" fill="rgb(209,209,32)" fg:x="540" fg:w="5"/><text x="14.5736%" y="383.50"></text></g><g><title>__cxa_thread_atexit_impl (4 samples, 0.11%)</title><rect x="14.3501%" y="357" width="0.1061%" height="15" fill="rgb(221,70,22)" fg:x="541" fg:w="4"/><text x="14.6001%" y="367.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="14.4297%" y="341" width="0.0265%" height="15" fill="rgb(248,145,5)" fg:x="544" fg:w="1"/><text x="14.6797%" y="351.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.03%)</title><rect x="14.4562%" y="389" width="0.0265%" height="15" fill="rgb(226,116,26)" fg:x="545" fg:w="1"/><text x="14.7062%" y="399.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.03%)</title><rect x="14.4562%" y="373" width="0.0265%" height="15" fill="rgb(244,5,17)" fg:x="545" fg:w="1"/><text x="14.7062%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.03%)</title><rect x="14.4828%" y="389" width="0.0265%" height="15" fill="rgb(252,159,33)" fg:x="546" fg:w="1"/><text x="14.7328%" y="399.50"></text></g><g><title>__GI___pthread_attr_destroy (1 samples, 0.03%)</title><rect x="14.5093%" y="357" width="0.0265%" height="15" fill="rgb(206,71,0)" fg:x="547" fg:w="1"/><text x="14.7593%" y="367.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (5 samples, 0.13%)</title><rect x="14.5093%" y="389" width="0.1326%" height="15" fill="rgb(233,118,54)" fg:x="547" fg:w="5"/><text x="14.7593%" y="399.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (5 samples, 0.13%)</title><rect x="14.5093%" y="373" width="0.1326%" height="15" fill="rgb(234,83,48)" fg:x="547" fg:w="5"/><text x="14.7593%" y="383.50"></text></g><g><title>pthread_create@GLIBC_2.2.5 (4 samples, 0.11%)</title><rect x="14.5358%" y="357" width="0.1061%" height="15" fill="rgb(228,3,54)" fg:x="548" fg:w="4"/><text x="14.7858%" y="367.50"></text></g><g><title>create_thread (4 samples, 0.11%)</title><rect x="14.5358%" y="341" width="0.1061%" height="15" fill="rgb(226,155,13)" fg:x="548" fg:w="4"/><text x="14.7858%" y="351.50"></text></g><g><title>__GI___clone_internal (3 samples, 0.08%)</title><rect x="14.5623%" y="325" width="0.0796%" height="15" fill="rgb(241,28,37)" fg:x="549" fg:w="3"/><text x="14.8123%" y="335.50"></text></g><g><title>__clone3_internal (1 samples, 0.03%)</title><rect x="14.6154%" y="309" width="0.0265%" height="15" fill="rgb(233,93,10)" fg:x="551" fg:w="1"/><text x="14.8654%" y="319.50"></text></g><g><title>std::thread::spawnhook::ChildSpawnHooks::run (1 samples, 0.03%)</title><rect x="14.6419%" y="389" width="0.0265%" height="15" fill="rgb(225,113,19)" fg:x="552" fg:w="1"/><text x="14.8919%" y="399.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.05%)</title><rect x="14.6684%" y="389" width="0.0531%" height="15" fill="rgb(241,2,18)" fg:x="553" fg:w="2"/><text x="14.9184%" y="399.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.05%)</title><rect x="14.6684%" y="373" width="0.0531%" height="15" fill="rgb(228,207,21)" fg:x="553" fg:w="2"/><text x="14.9184%" y="383.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.05%)</title><rect x="14.6684%" y="357" width="0.0531%" height="15" fill="rgb(213,211,35)" fg:x="553" fg:w="2"/><text x="14.9184%" y="367.50"></text></g><g><title>tokio::runtime::context::budget (2 samples, 0.05%)</title><rect x="14.6684%" y="341" width="0.0531%" height="15" fill="rgb(209,83,10)" fg:x="553" fg:w="2"/><text x="14.9184%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.05%)</title><rect x="14.6684%" y="325" width="0.0531%" height="15" fill="rgb(209,164,1)" fg:x="553" fg:w="2"/><text x="14.9184%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.05%)</title><rect x="14.6684%" y="309" width="0.0531%" height="15" fill="rgb(213,184,43)" fg:x="553" fg:w="2"/><text x="14.9184%" y="319.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (2 samples, 0.05%)</title><rect x="14.6684%" y="293" width="0.0531%" height="15" fill="rgb(231,61,34)" fg:x="553" fg:w="2"/><text x="14.9184%" y="303.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="14.6684%" y="277" width="0.0531%" height="15" fill="rgb(235,75,3)" fg:x="553" fg:w="2"/><text x="14.9184%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="14.6684%" y="261" width="0.0531%" height="15" fill="rgb(220,106,47)" fg:x="553" fg:w="2"/><text x="14.9184%" y="271.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (1 samples, 0.03%)</title><rect x="14.7215%" y="389" width="0.0265%" height="15" fill="rgb(210,196,33)" fg:x="555" fg:w="1"/><text x="14.9715%" y="399.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="14.7215%" y="373" width="0.0265%" height="15" fill="rgb(229,154,42)" fg:x="555" fg:w="1"/><text x="14.9715%" y="383.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="14.7215%" y="357" width="0.0265%" height="15" fill="rgb(228,114,26)" fg:x="555" fg:w="1"/><text x="14.9715%" y="367.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="14.7215%" y="341" width="0.0265%" height="15" fill="rgb(208,144,1)" fg:x="555" fg:w="1"/><text x="14.9715%" y="351.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="14.7215%" y="325" width="0.0265%" height="15" fill="rgb(239,112,37)" fg:x="555" fg:w="1"/><text x="14.9715%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="14.7215%" y="309" width="0.0265%" height="15" fill="rgb(210,96,50)" fg:x="555" fg:w="1"/><text x="14.9715%" y="319.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (1 samples, 0.03%)</title><rect x="14.7215%" y="293" width="0.0265%" height="15" fill="rgb(222,178,2)" fg:x="555" fg:w="1"/><text x="14.9715%" y="303.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1 samples, 0.03%)</title><rect x="14.7215%" y="277" width="0.0265%" height="15" fill="rgb(226,74,18)" fg:x="555" fg:w="1"/><text x="14.9715%" y="287.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.03%)</title><rect x="14.7215%" y="261" width="0.0265%" height="15" fill="rgb(225,67,54)" fg:x="555" fg:w="1"/><text x="14.9715%" y="271.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.03%)</title><rect x="14.7215%" y="245" width="0.0265%" height="15" fill="rgb(251,92,32)" fg:x="555" fg:w="1"/><text x="14.9715%" y="255.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (1 samples, 0.03%)</title><rect x="14.7215%" y="229" width="0.0265%" height="15" fill="rgb(228,149,22)" fg:x="555" fg:w="1"/><text x="14.9715%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="14.7215%" y="213" width="0.0265%" height="15" fill="rgb(243,54,13)" fg:x="555" fg:w="1"/><text x="14.9715%" y="223.50"></text></g><g><title>[unknown] (416 samples, 11.03%)</title><rect x="3.7401%" y="405" width="11.0345%" height="15" fill="rgb(243,180,28)" fg:x="141" fg:w="416"/><text x="3.9901%" y="415.50">[unknown]</text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.03%)</title><rect x="14.7480%" y="389" width="0.0265%" height="15" fill="rgb(208,167,24)" fg:x="556" fg:w="1"/><text x="14.9980%" y="399.50"></text></g><g><title>_ZN3std3sys12thread_local6native5eager7destroy17h25bdcf9c32cd02e4E.llvm.6788498657682749250 (1 samples, 0.03%)</title><rect x="14.7745%" y="405" width="0.0265%" height="15" fill="rgb(245,73,45)" fg:x="557" fg:w="1"/><text x="15.0245%" y="415.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h705a98114b6fbe0dE.llvm.4473774034868829591 (1 samples, 0.03%)</title><rect x="14.8011%" y="405" width="0.0265%" height="15" fill="rgb(237,203,48)" fg:x="558" fg:w="1"/><text x="15.0511%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="14.8011%" y="389" width="0.0265%" height="15" fill="rgb(211,197,16)" fg:x="558" fg:w="1"/><text x="15.0511%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="14.8011%" y="373" width="0.0265%" height="15" fill="rgb(243,99,51)" fg:x="558" fg:w="1"/><text x="15.0511%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h9b481991a5c87f11E.llvm.13710328289287238087 (1 samples, 0.03%)</title><rect x="14.8276%" y="405" width="0.0265%" height="15" fill="rgb(215,123,29)" fg:x="559" fg:w="1"/><text x="15.0776%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="14.8276%" y="389" width="0.0265%" height="15" fill="rgb(239,186,37)" fg:x="559" fg:w="1"/><text x="15.0776%" y="399.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17ha1b12083e30814abE.llvm.16348842533310755137 (1 samples, 0.03%)</title><rect x="14.8541%" y="405" width="0.0265%" height="15" fill="rgb(252,136,39)" fg:x="560" fg:w="1"/><text x="15.1041%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="14.8541%" y="389" width="0.0265%" height="15" fill="rgb(223,213,32)" fg:x="560" fg:w="1"/><text x="15.1041%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="14.8541%" y="373" width="0.0265%" height="15" fill="rgb(233,115,5)" fg:x="560" fg:w="1"/><text x="15.1041%" y="383.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.03%)</title><rect x="14.8541%" y="357" width="0.0265%" height="15" fill="rgb(207,226,44)" fg:x="560" fg:w="1"/><text x="15.1041%" y="367.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.03%)</title><rect x="14.8541%" y="341" width="0.0265%" height="15" fill="rgb(208,126,0)" fg:x="560" fg:w="1"/><text x="15.1041%" y="351.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.03%)</title><rect x="14.8541%" y="325" width="0.0265%" height="15" fill="rgb(244,66,21)" fg:x="560" fg:w="1"/><text x="15.1041%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17he645c99a6f3542f2E.llvm.6282308518855217640 (1 samples, 0.03%)</title><rect x="14.8806%" y="405" width="0.0265%" height="15" fill="rgb(222,97,12)" fg:x="561" fg:w="1"/><text x="15.1306%" y="415.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="14.8806%" y="389" width="0.0265%" height="15" fill="rgb(219,213,19)" fg:x="561" fg:w="1"/><text x="15.1306%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="14.8806%" y="373" width="0.0265%" height="15" fill="rgb(252,169,30)" fg:x="561" fg:w="1"/><text x="15.1306%" y="383.50"></text></g><g><title>_mi_bin (1 samples, 0.03%)</title><rect x="14.8806%" y="357" width="0.0265%" height="15" fill="rgb(206,32,51)" fg:x="561" fg:w="1"/><text x="15.1306%" y="367.50"></text></g><g><title>_ZN5rowan6cursor8NodeData3new17hfefea863736b5aaeE.llvm.2114494239436949699 (11 samples, 0.29%)</title><rect x="14.9072%" y="405" width="0.2918%" height="15" fill="rgb(250,172,42)" fg:x="562" fg:w="11"/><text x="15.1572%" y="415.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="15.1724%" y="389" width="0.0265%" height="15" fill="rgb(209,34,43)" fg:x="572" fg:w="1"/><text x="15.4224%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="15.1724%" y="373" width="0.0265%" height="15" fill="rgb(223,11,35)" fg:x="572" fg:w="1"/><text x="15.4224%" y="383.50"></text></g><g><title>mi_find_page (1 samples, 0.03%)</title><rect x="15.1724%" y="357" width="0.0265%" height="15" fill="rgb(251,219,26)" fg:x="572" fg:w="1"/><text x="15.4224%" y="367.50"></text></g><g><title>_ZN7console4ansi24find_ansi_code_exclusive17hd6f99b82adc60620E.llvm.5070163526265238981 (3 samples, 0.08%)</title><rect x="15.1989%" y="405" width="0.0796%" height="15" fill="rgb(231,119,3)" fg:x="573" fg:w="3"/><text x="15.4489%" y="415.50"></text></g><g><title>_ZN9hashbrown3raw13RawTableInner13drop_elements17h71ccabc55de5dfddE.llvm.1661315254262317993 (1 samples, 0.03%)</title><rect x="15.2785%" y="405" width="0.0265%" height="15" fill="rgb(216,97,11)" fg:x="576" fg:w="1"/><text x="15.5285%" y="415.50"></text></g><g><title>_ZN9indicatif5style5width17h220ddda2b4970cbdE.llvm.12656244194994513056 (1 samples, 0.03%)</title><rect x="15.3050%" y="405" width="0.0265%" height="15" fill="rgb(223,59,9)" fg:x="577" fg:w="1"/><text x="15.5550%" y="415.50"></text></g><g><title>_ZN9indicatif5style8Template8from_str17h7e4fb757a9d0abfeE.llvm.12656244194994513056 (1 samples, 0.03%)</title><rect x="15.3316%" y="405" width="0.0265%" height="15" fill="rgb(233,93,31)" fg:x="578" fg:w="1"/><text x="15.5816%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.27%)</title><rect x="21.8568%" y="389" width="0.2653%" height="15" fill="rgb(239,81,33)" fg:x="824" fg:w="10"/><text x="22.1068%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.11%)</title><rect x="22.0159%" y="373" width="0.1061%" height="15" fill="rgb(213,120,34)" fg:x="830" fg:w="4"/><text x="22.2659%" y="383.50"></text></g><g><title>[unknown] (66 samples, 1.75%)</title><rect x="40.5570%" y="373" width="1.7507%" height="15" fill="rgb(243,49,53)" fg:x="1529" fg:w="66"/><text x="40.8070%" y="383.50"></text></g><g><title>[unknown] (29 samples, 0.77%)</title><rect x="41.5385%" y="357" width="0.7692%" height="15" fill="rgb(247,216,33)" fg:x="1566" fg:w="29"/><text x="41.7885%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.34%)</title><rect x="41.9629%" y="341" width="0.3448%" height="15" fill="rgb(226,26,14)" fg:x="1582" fg:w="13"/><text x="42.2129%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.2812%" y="325" width="0.0265%" height="15" fill="rgb(215,49,53)" fg:x="1594" fg:w="1"/><text x="42.5312%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="42.3342%" y="341" width="0.0531%" height="15" fill="rgb(245,162,40)" fg:x="1596" fg:w="2"/><text x="42.5842%" y="351.50"></text></g><g><title>mi_heap_collect_ex (2 samples, 0.05%)</title><rect x="42.3342%" y="325" width="0.0531%" height="15" fill="rgb(229,68,17)" fg:x="1596" fg:w="2"/><text x="42.5842%" y="335.50"></text></g><g><title>_mi_arena_segment_clear_abandoned_next (1 samples, 0.03%)</title><rect x="42.3607%" y="309" width="0.0265%" height="15" fill="rgb(213,182,10)" fg:x="1597" fg:w="1"/><text x="42.6107%" y="319.50"></text></g><g><title>_mi_abandoned_collect (1 samples, 0.03%)</title><rect x="42.3873%" y="341" width="0.0265%" height="15" fill="rgb(245,125,30)" fg:x="1598" fg:w="1"/><text x="42.6373%" y="351.50"></text></g><g><title>_mi_commit_mask_committed_size (1 samples, 0.03%)</title><rect x="42.4138%" y="309" width="0.0265%" height="15" fill="rgb(232,202,2)" fg:x="1599" fg:w="1"/><text x="42.6638%" y="319.50"></text></g><g><title>_mi_page_free (4 samples, 0.11%)</title><rect x="42.4403%" y="309" width="0.1061%" height="15" fill="rgb(237,140,51)" fg:x="1600" fg:w="4"/><text x="42.6903%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.6260%" y="277" width="0.0265%" height="15" fill="rgb(236,157,25)" fg:x="1607" fg:w="1"/><text x="42.8760%" y="287.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="42.6525%" y="261" width="0.0531%" height="15" fill="rgb(219,209,0)" fg:x="1608" fg:w="2"/><text x="42.9025%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="42.6525%" y="245" width="0.0531%" height="15" fill="rgb(240,116,54)" fg:x="1608" fg:w="2"/><text x="42.9025%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="42.6525%" y="229" width="0.0531%" height="15" fill="rgb(216,10,36)" fg:x="1608" fg:w="2"/><text x="42.9025%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.6790%" y="213" width="0.0265%" height="15" fill="rgb(222,72,44)" fg:x="1609" fg:w="1"/><text x="42.9290%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.6790%" y="197" width="0.0265%" height="15" fill="rgb(232,159,9)" fg:x="1609" fg:w="1"/><text x="42.9290%" y="207.50"></text></g><g><title>_mi_prim_clock_now (6 samples, 0.16%)</title><rect x="42.5995%" y="293" width="0.1592%" height="15" fill="rgb(210,39,32)" fg:x="1606" fg:w="6"/><text x="42.8495%" y="303.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (4 samples, 0.11%)</title><rect x="42.6525%" y="277" width="0.1061%" height="15" fill="rgb(216,194,45)" fg:x="1608" fg:w="4"/><text x="42.9025%" y="287.50"></text></g><g><title>mi_segment_span_free_coalesce (2 samples, 0.05%)</title><rect x="42.7056%" y="261" width="0.0531%" height="15" fill="rgb(218,18,35)" fg:x="1610" fg:w="2"/><text x="42.9556%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="42.7056%" y="245" width="0.0531%" height="15" fill="rgb(207,83,51)" fg:x="1610" fg:w="2"/><text x="42.9556%" y="255.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="42.7056%" y="229" width="0.0531%" height="15" fill="rgb(225,63,43)" fg:x="1610" fg:w="2"/><text x="42.9556%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="42.7056%" y="213" width="0.0531%" height="15" fill="rgb(207,57,36)" fg:x="1610" fg:w="2"/><text x="42.9556%" y="223.50"></text></g><g><title>_mi_segment_page_free (17 samples, 0.45%)</title><rect x="42.5464%" y="309" width="0.4509%" height="15" fill="rgb(216,99,33)" fg:x="1604" fg:w="17"/><text x="42.7964%" y="319.50"></text></g><g><title>mi_segment_page_clear (9 samples, 0.24%)</title><rect x="42.7586%" y="293" width="0.2387%" height="15" fill="rgb(225,42,16)" fg:x="1612" fg:w="9"/><text x="43.0086%" y="303.50"></text></g><g><title>mi_segment_span_free_coalesce (8 samples, 0.21%)</title><rect x="42.7851%" y="277" width="0.2122%" height="15" fill="rgb(220,201,45)" fg:x="1613" fg:w="8"/><text x="43.0351%" y="287.50"></text></g><g><title>_mi_prim_clock_now (4 samples, 0.11%)</title><rect x="42.8912%" y="261" width="0.1061%" height="15" fill="rgb(225,33,4)" fg:x="1617" fg:w="4"/><text x="43.1412%" y="271.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3 samples, 0.08%)</title><rect x="42.9178%" y="245" width="0.0796%" height="15" fill="rgb(224,33,50)" fg:x="1618" fg:w="3"/><text x="43.1678%" y="255.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="42.9443%" y="229" width="0.0531%" height="15" fill="rgb(246,198,51)" fg:x="1619" fg:w="2"/><text x="43.1943%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.9708%" y="213" width="0.0265%" height="15" fill="rgb(205,22,4)" fg:x="1620" fg:w="1"/><text x="43.2208%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="42.9708%" y="197" width="0.0265%" height="15" fill="rgb(206,3,8)" fg:x="1620" fg:w="1"/><text x="43.2208%" y="207.50"></text></g><g><title>_mi_stat_decrease (1 samples, 0.03%)</title><rect x="42.9973%" y="309" width="0.0265%" height="15" fill="rgb(251,23,15)" fg:x="1621" fg:w="1"/><text x="43.2473%" y="319.50"></text></g><g><title>_mi_heap_collect_retired (25 samples, 0.66%)</title><rect x="42.4138%" y="325" width="0.6631%" height="15" fill="rgb(252,88,28)" fg:x="1599" fg:w="25"/><text x="42.6638%" y="335.50"></text></g><g><title>mi_segment_free.isra.0 (2 samples, 0.05%)</title><rect x="43.0239%" y="309" width="0.0531%" height="15" fill="rgb(212,127,14)" fg:x="1622" fg:w="2"/><text x="43.2739%" y="319.50"></text></g><g><title>_mi_heap_delayed_free_all (1 samples, 0.03%)</title><rect x="43.0769%" y="325" width="0.0265%" height="15" fill="rgb(247,145,37)" fg:x="1624" fg:w="1"/><text x="43.3269%" y="335.50"></text></g><g><title>_mi_heap_delayed_free_partial (1 samples, 0.03%)</title><rect x="43.0769%" y="309" width="0.0265%" height="15" fill="rgb(209,117,53)" fg:x="1624" fg:w="1"/><text x="43.3269%" y="319.50"></text></g><g><title>__GI___nptl_deallocate_tsd (31 samples, 0.82%)</title><rect x="42.3077%" y="373" width="0.8223%" height="15" fill="rgb(212,90,42)" fg:x="1595" fg:w="31"/><text x="42.5577%" y="383.50"></text></g><g><title>_mi_thread_done (30 samples, 0.80%)</title><rect x="42.3342%" y="357" width="0.7958%" height="15" fill="rgb(218,164,37)" fg:x="1596" fg:w="30"/><text x="42.5842%" y="367.50"></text></g><g><title>mi_heap_collect_ex (27 samples, 0.72%)</title><rect x="42.4138%" y="341" width="0.7162%" height="15" fill="rgb(246,65,34)" fg:x="1599" fg:w="27"/><text x="42.6638%" y="351.50"></text></g><g><title>mi_segment_free.isra.0 (1 samples, 0.03%)</title><rect x="43.1034%" y="325" width="0.0265%" height="15" fill="rgb(231,100,33)" fg:x="1625" fg:w="1"/><text x="43.3534%" y="335.50"></text></g><g><title>__call_tls_dtors (4 samples, 0.11%)</title><rect x="43.1300%" y="373" width="0.1061%" height="15" fill="rgb(228,126,14)" fg:x="1626" fg:w="4"/><text x="43.3800%" y="383.50"></text></g><g><title>_ZN3std3sys12thread_local6native5eager7destroy17h25bdcf9c32cd02e4E.llvm.6788498657682749250 (1 samples, 0.03%)</title><rect x="43.2095%" y="357" width="0.0265%" height="15" fill="rgb(215,173,21)" fg:x="1629" fg:w="1"/><text x="43.4595%" y="367.50"></text></g><g><title>__ctype_init (390 samples, 10.34%)</title><rect x="43.2361%" y="373" width="10.3448%" height="15" fill="rgb(210,6,40)" fg:x="1630" fg:w="390"/><text x="43.4861%" y="383.50">__ctype_init</text></g><g><title>[unknown] (15 samples, 0.40%)</title><rect x="53.1830%" y="357" width="0.3979%" height="15" fill="rgb(212,48,18)" fg:x="2005" fg:w="15"/><text x="53.4330%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.08%)</title><rect x="53.5013%" y="341" width="0.0796%" height="15" fill="rgb(230,214,11)" fg:x="2017" fg:w="3"/><text x="53.7513%" y="351.50"></text></g><g><title>__libc_thread_freeres (1 samples, 0.03%)</title><rect x="53.5809%" y="373" width="0.0265%" height="15" fill="rgb(254,105,39)" fg:x="2020" fg:w="1"/><text x="53.8309%" y="383.50"></text></g><g><title>__res_thread_freeres (1 samples, 0.03%)</title><rect x="53.5809%" y="357" width="0.0265%" height="15" fill="rgb(245,158,5)" fg:x="2020" fg:w="1"/><text x="53.8309%" y="367.50"></text></g><g><title>__malloc_arena_thread_freeres (2 samples, 0.05%)</title><rect x="53.6074%" y="373" width="0.0531%" height="15" fill="rgb(249,208,11)" fg:x="2021" fg:w="2"/><text x="53.8574%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="53.6074%" y="357" width="0.0531%" height="15" fill="rgb(210,39,28)" fg:x="2021" fg:w="2"/><text x="53.8574%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="53.6340%" y="341" width="0.0265%" height="15" fill="rgb(211,56,53)" fg:x="2022" fg:w="1"/><text x="53.8840%" y="351.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.03%)</title><rect x="53.6340%" y="325" width="0.0265%" height="15" fill="rgb(226,201,30)" fg:x="2022" fg:w="1"/><text x="53.8840%" y="335.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.03%)</title><rect x="53.6340%" y="309" width="0.0265%" height="15" fill="rgb(239,101,34)" fg:x="2022" fg:w="1"/><text x="53.8840%" y="319.50"></text></g><g><title>__sigsetjmp (1 samples, 0.03%)</title><rect x="53.6605%" y="373" width="0.0265%" height="15" fill="rgb(226,209,5)" fg:x="2023" fg:w="1"/><text x="53.9105%" y="383.50"></text></g><g><title>mi_free_block_mt (1 samples, 0.03%)</title><rect x="53.6870%" y="373" width="0.0265%" height="15" fill="rgb(250,105,47)" fg:x="2024" fg:w="1"/><text x="53.9370%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="54.1379%" y="357" width="0.0265%" height="15" fill="rgb(230,72,3)" fg:x="2041" fg:w="1"/><text x="54.3879%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.11%)</title><rect x="54.8276%" y="341" width="0.1061%" height="15" fill="rgb(232,218,39)" fg:x="2067" fg:w="4"/><text x="55.0776%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="55.9151%" y="325" width="0.0531%" height="15" fill="rgb(248,166,6)" fg:x="2108" fg:w="2"/><text x="56.1651%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="55.9416%" y="309" width="0.0265%" height="15" fill="rgb(247,89,20)" fg:x="2109" fg:w="1"/><text x="56.1916%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="55.9416%" y="293" width="0.0265%" height="15" fill="rgb(248,130,54)" fg:x="2109" fg:w="1"/><text x="56.1916%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="55.9416%" y="277" width="0.0265%" height="15" fill="rgb(234,196,4)" fg:x="2109" fg:w="1"/><text x="56.1916%" y="287.50"></text></g><g><title>[unknown] (16 samples, 0.42%)</title><rect x="65.3316%" y="309" width="0.4244%" height="15" fill="rgb(250,143,31)" fg:x="2463" fg:w="16"/><text x="65.5816%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="65.7029%" y="293" width="0.0531%" height="15" fill="rgb(211,110,34)" fg:x="2477" fg:w="2"/><text x="65.9529%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="67.0027%" y="293" width="0.0531%" height="15" fill="rgb(215,124,48)" fg:x="2526" fg:w="2"/><text x="67.2527%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (93 samples, 2.47%)</title><rect x="67.0557%" y="293" width="2.4668%" height="15" fill="rgb(216,46,13)" fg:x="2528" fg:w="93"/><text x="67.3057%" y="303.50">__..</text></g><g><title>[unknown] (3 samples, 0.08%)</title><rect x="69.4430%" y="277" width="0.0796%" height="15" fill="rgb(205,184,25)" fg:x="2618" fg:w="3"/><text x="69.6930%" y="287.50"></text></g><g><title>__printf_buffer_write (151 samples, 4.01%)</title><rect x="65.7560%" y="309" width="4.0053%" height="15" fill="rgb(228,1,10)" fg:x="2479" fg:w="151"/><text x="66.0060%" y="319.50">__pr..</text></g><g><title>memcpy@@GLIBC_2.14@plt (9 samples, 0.24%)</title><rect x="69.5225%" y="293" width="0.2387%" height="15" fill="rgb(213,116,27)" fg:x="2621" fg:w="9"/><text x="69.7725%" y="303.50"></text></g><g><title>__strchrnul_evex (137 samples, 3.63%)</title><rect x="69.7613%" y="309" width="3.6340%" height="15" fill="rgb(241,95,50)" fg:x="2630" fg:w="137"/><text x="70.0113%" y="319.50">__st..</text></g><g><title>[unknown] (5 samples, 0.13%)</title><rect x="73.2626%" y="293" width="0.1326%" height="15" fill="rgb(238,48,32)" fg:x="2762" fg:w="5"/><text x="73.5126%" y="303.50"></text></g><g><title>__strchrnul_ifunc@plt (8 samples, 0.21%)</title><rect x="73.3952%" y="309" width="0.2122%" height="15" fill="rgb(235,113,49)" fg:x="2767" fg:w="8"/><text x="73.6452%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="73.5809%" y="293" width="0.0265%" height="15" fill="rgb(205,127,43)" fg:x="2774" fg:w="1"/><text x="73.8309%" y="303.50"></text></g><g><title>__printf_buffer (713 samples, 18.91%)</title><rect x="55.9682%" y="325" width="18.9125%" height="15" fill="rgb(250,162,2)" fg:x="2110" fg:w="713"/><text x="56.2182%" y="335.50">__printf_buffer</text></g><g><title>_itoa_word (48 samples, 1.27%)</title><rect x="73.6074%" y="309" width="1.2732%" height="15" fill="rgb(220,13,41)" fg:x="2775" fg:w="48"/><text x="73.8574%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="74.8541%" y="293" width="0.0265%" height="15" fill="rgb(249,221,25)" fg:x="2822" fg:w="1"/><text x="75.1041%" y="303.50"></text></g><g><title>__GI___snprintf (794 samples, 21.06%)</title><rect x="54.1645%" y="357" width="21.0610%" height="15" fill="rgb(215,208,19)" fg:x="2042" fg:w="794"/><text x="54.4145%" y="367.50">__GI___snprintf</text></g><g><title>__vsnprintf_internal (765 samples, 20.29%)</title><rect x="54.9337%" y="341" width="20.2918%" height="15" fill="rgb(236,175,2)" fg:x="2071" fg:w="765"/><text x="55.1837%" y="351.50">__vsnprintf_internal</text></g><g><title>__printf_buffer_done (13 samples, 0.34%)</title><rect x="74.8806%" y="325" width="0.3448%" height="15" fill="rgb(241,52,2)" fg:x="2823" fg:w="13"/><text x="75.1306%" y="335.50"></text></g><g><title>name_stack_maps (836 samples, 22.18%)</title><rect x="53.7135%" y="373" width="22.1751%" height="15" fill="rgb(248,140,14)" fg:x="2025" fg:w="836"/><text x="53.9635%" y="383.50">name_stack_maps</text></g><g><title>__set_vma_name (25 samples, 0.66%)</title><rect x="75.2255%" y="357" width="0.6631%" height="15" fill="rgb(253,22,42)" fg:x="2836" fg:w="25"/><text x="75.4755%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="75.9416%" y="357" width="0.0265%" height="15" fill="rgb(234,61,47)" fg:x="2863" fg:w="1"/><text x="76.1916%" y="367.50"></text></g><g><title>__GI___sigaltstack (2 samples, 0.05%)</title><rect x="75.9682%" y="357" width="0.0531%" height="15" fill="rgb(208,226,15)" fg:x="2864" fg:w="2"/><text x="76.2182%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="75.9682%" y="341" width="0.0531%" height="15" fill="rgb(217,221,4)" fg:x="2864" fg:w="2"/><text x="76.2182%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="75.9682%" y="325" width="0.0531%" height="15" fill="rgb(212,174,34)" fg:x="2864" fg:w="2"/><text x="76.2182%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="75.9947%" y="309" width="0.0265%" height="15" fill="rgb(253,83,4)" fg:x="2865" fg:w="1"/><text x="76.2447%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="75.9947%" y="293" width="0.0265%" height="15" fill="rgb(250,195,49)" fg:x="2865" fg:w="1"/><text x="76.2447%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="76.0743%" y="325" width="0.0531%" height="15" fill="rgb(241,192,25)" fg:x="2868" fg:w="2"/><text x="76.3243%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="76.1008%" y="309" width="0.0265%" height="15" fill="rgb(208,124,10)" fg:x="2869" fg:w="1"/><text x="76.3508%" y="319.50"></text></g><g><title>__GI___pthread_attr_destroy (3 samples, 0.08%)</title><rect x="76.0743%" y="341" width="0.0796%" height="15" fill="rgb(222,33,0)" fg:x="2868" fg:w="3"/><text x="76.3243%" y="351.50"></text></g><g><title>free@plt (1 samples, 0.03%)</title><rect x="76.1273%" y="325" width="0.0265%" height="15" fill="rgb(234,209,28)" fg:x="2870" fg:w="1"/><text x="76.3773%" y="335.50"></text></g><g><title>__GI___sigaltstack (2 samples, 0.05%)</title><rect x="76.1538%" y="341" width="0.0531%" height="15" fill="rgb(224,11,23)" fg:x="2871" fg:w="2"/><text x="76.4038%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="76.1538%" y="325" width="0.0531%" height="15" fill="rgb(232,99,1)" fg:x="2871" fg:w="2"/><text x="76.4038%" y="335.50"></text></g><g><title>__getauxval (4 samples, 0.11%)</title><rect x="76.2069%" y="341" width="0.1061%" height="15" fill="rgb(237,95,45)" fg:x="2873" fg:w="4"/><text x="76.4569%" y="351.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="76.3130%" y="341" width="0.0265%" height="15" fill="rgb(208,109,11)" fg:x="2877" fg:w="1"/><text x="76.5630%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="76.3130%" y="325" width="0.0265%" height="15" fill="rgb(216,190,48)" fg:x="2877" fg:w="1"/><text x="76.5630%" y="335.50"></text></g><g><title>__mprotect (1 samples, 0.03%)</title><rect x="76.3395%" y="341" width="0.0265%" height="15" fill="rgb(251,171,36)" fg:x="2878" fg:w="1"/><text x="76.5895%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="76.3395%" y="325" width="0.0265%" height="15" fill="rgb(230,62,22)" fg:x="2878" fg:w="1"/><text x="76.5895%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="76.3395%" y="309" width="0.0265%" height="15" fill="rgb(225,114,35)" fg:x="2878" fg:w="1"/><text x="76.5895%" y="319.50"></text></g><g><title>pthread_attr_getstack@@GLIBC_2.34 (2 samples, 0.05%)</title><rect x="76.3660%" y="341" width="0.0531%" height="15" fill="rgb(215,118,42)" fg:x="2879" fg:w="2"/><text x="76.6160%" y="351.50"></text></g><g><title>_int_malloc (7 samples, 0.19%)</title><rect x="76.4721%" y="309" width="0.1857%" height="15" fill="rgb(243,119,21)" fg:x="2883" fg:w="7"/><text x="76.7221%" y="319.50"></text></g><g><title>_int_malloc (3 samples, 0.08%)</title><rect x="76.6844%" y="293" width="0.0796%" height="15" fill="rgb(252,177,53)" fg:x="2891" fg:w="3"/><text x="76.9344%" y="303.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="77.1618%" y="261" width="0.0265%" height="15" fill="rgb(237,209,29)" fg:x="2909" fg:w="1"/><text x="77.4118%" y="271.50"></text></g><g><title>malloc (28 samples, 0.74%)</title><rect x="76.4721%" y="325" width="0.7427%" height="15" fill="rgb(212,65,23)" fg:x="2883" fg:w="28"/><text x="76.7221%" y="335.50"></text></g><g><title>tcache_init.part.0 (21 samples, 0.56%)</title><rect x="76.6578%" y="309" width="0.5570%" height="15" fill="rgb(230,222,46)" fg:x="2890" fg:w="21"/><text x="76.9078%" y="319.50"></text></g><g><title>arena_get2 (17 samples, 0.45%)</title><rect x="76.7639%" y="293" width="0.4509%" height="15" fill="rgb(215,135,32)" fg:x="2894" fg:w="17"/><text x="77.0139%" y="303.50"></text></g><g><title>alloc_new_heap (7 samples, 0.19%)</title><rect x="77.0292%" y="277" width="0.1857%" height="15" fill="rgb(246,101,22)" fg:x="2904" fg:w="7"/><text x="77.2792%" y="287.50"></text></g><g><title>__mprotect (1 samples, 0.03%)</title><rect x="77.1883%" y="261" width="0.0265%" height="15" fill="rgb(206,107,13)" fg:x="2910" fg:w="1"/><text x="77.4383%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="77.1883%" y="245" width="0.0265%" height="15" fill="rgb(250,100,44)" fg:x="2910" fg:w="1"/><text x="77.4383%" y="255.50"></text></g><g><title>__pthread_attr_extension (2 samples, 0.05%)</title><rect x="77.2149%" y="309" width="0.0531%" height="15" fill="rgb(231,147,38)" fg:x="2911" fg:w="2"/><text x="77.4649%" y="319.50"></text></g><g><title>__libc_calloc (2 samples, 0.05%)</title><rect x="77.2149%" y="293" width="0.0531%" height="15" fill="rgb(229,8,40)" fg:x="2911" fg:w="2"/><text x="77.4649%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="77.2414%" y="277" width="0.0265%" height="15" fill="rgb(221,135,30)" fg:x="2912" fg:w="1"/><text x="77.4914%" y="287.50"></text></g><g><title>pthread_attr_setaffinity_np@@GLIBC_2.32 (3 samples, 0.08%)</title><rect x="77.2149%" y="325" width="0.0796%" height="15" fill="rgb(249,193,18)" fg:x="2911" fg:w="3"/><text x="77.4649%" y="335.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="77.2679%" y="309" width="0.0265%" height="15" fill="rgb(209,133,39)" fg:x="2913" fg:w="1"/><text x="77.5179%" y="319.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (1 samples, 0.03%)</title><rect x="77.2944%" y="325" width="0.0265%" height="15" fill="rgb(232,100,14)" fg:x="2914" fg:w="1"/><text x="77.5444%" y="335.50"></text></g><g><title>__GI___clone3 (2,345 samples, 62.20%)</title><rect x="15.3581%" y="405" width="62.2016%" height="15" fill="rgb(224,185,1)" fg:x="579" fg:w="2345"/><text x="15.6081%" y="415.50">__GI___clone3</text></g><g><title>start_thread (2,090 samples, 55.44%)</title><rect x="22.1220%" y="389" width="55.4377%" height="15" fill="rgb(223,139,8)" fg:x="834" fg:w="2090"/><text x="22.3720%" y="399.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (63 samples, 1.67%)</title><rect x="75.8886%" y="373" width="1.6711%" height="15" fill="rgb(232,213,38)" fg:x="2861" fg:w="63"/><text x="76.1386%" y="383.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (58 samples, 1.54%)</title><rect x="76.0212%" y="357" width="1.5385%" height="15" fill="rgb(207,94,22)" fg:x="2866" fg:w="58"/><text x="76.2712%" y="367.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (43 samples, 1.14%)</title><rect x="76.4191%" y="341" width="1.1406%" height="15" fill="rgb(219,183,54)" fg:x="2881" fg:w="43"/><text x="76.6691%" y="351.50"></text></g><g><title>realloc (9 samples, 0.24%)</title><rect x="77.3210%" y="325" width="0.2387%" height="15" fill="rgb(216,185,54)" fg:x="2915" fg:w="9"/><text x="77.5710%" y="335.50"></text></g><g><title>__GI___ioctl (1 samples, 0.03%)</title><rect x="77.5597%" y="405" width="0.0265%" height="15" fill="rgb(254,217,39)" fg:x="2924" fg:w="1"/><text x="77.8097%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="77.5597%" y="389" width="0.0265%" height="15" fill="rgb(240,178,23)" fg:x="2924" fg:w="1"/><text x="77.8097%" y="399.50"></text></g><g><title>__rust_alloc (3 samples, 0.08%)</title><rect x="77.5862%" y="405" width="0.0796%" height="15" fill="rgb(218,11,47)" fg:x="2925" fg:w="3"/><text x="77.8362%" y="415.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.08%)</title><rect x="77.5862%" y="389" width="0.0796%" height="15" fill="rgb(218,51,51)" fg:x="2925" fg:w="3"/><text x="77.8362%" y="399.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="77.6658%" y="405" width="0.0531%" height="15" fill="rgb(238,126,27)" fg:x="2928" fg:w="2"/><text x="77.9158%" y="415.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="77.6658%" y="389" width="0.0531%" height="15" fill="rgb(249,202,22)" fg:x="2928" fg:w="2"/><text x="77.9158%" y="399.50"></text></g><g><title>_blake3_compress_in_place_avx512 (2 samples, 0.05%)</title><rect x="77.7188%" y="405" width="0.0531%" height="15" fill="rgb(254,195,49)" fg:x="2930" fg:w="2"/><text x="77.9688%" y="415.50"></text></g><g><title>_mi_bitmap_try_find_from_claim (1 samples, 0.03%)</title><rect x="77.7719%" y="405" width="0.0265%" height="15" fill="rgb(208,123,14)" fg:x="2932" fg:w="1"/><text x="78.0219%" y="415.50"></text></g><g><title>_mi_page_malloc (10 samples, 0.27%)</title><rect x="77.7984%" y="405" width="0.2653%" height="15" fill="rgb(224,200,8)" fg:x="2933" fg:w="10"/><text x="78.0484%" y="415.50"></text></g><g><title>_mi_page_ptr_unalign (1 samples, 0.03%)</title><rect x="78.0637%" y="405" width="0.0265%" height="15" fill="rgb(217,61,36)" fg:x="2943" fg:w="1"/><text x="78.3137%" y="415.50"></text></g><g><title>_mi_page_retire (1 samples, 0.03%)</title><rect x="78.0902%" y="405" width="0.0265%" height="15" fill="rgb(206,35,45)" fg:x="2944" fg:w="1"/><text x="78.3402%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.19%)</title><rect x="78.1167%" y="389" width="0.1857%" height="15" fill="rgb(217,65,33)" fg:x="2945" fg:w="7"/><text x="78.3667%" y="399.50"></text></g><g><title>chacha_block (7 samples, 0.19%)</title><rect x="78.1167%" y="373" width="0.1857%" height="15" fill="rgb(222,158,48)" fg:x="2945" fg:w="7"/><text x="78.3667%" y="383.50"></text></g><g><title>_mi_random_next (9 samples, 0.24%)</title><rect x="78.1167%" y="405" width="0.2387%" height="15" fill="rgb(254,2,54)" fg:x="2945" fg:w="9"/><text x="78.3667%" y="415.50"></text></g><g><title>chacha_block (2 samples, 0.05%)</title><rect x="78.3024%" y="389" width="0.0531%" height="15" fill="rgb(250,143,38)" fg:x="2952" fg:w="2"/><text x="78.5524%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="78.3820%" y="389" width="0.0265%" height="15" fill="rgb(248,25,0)" fg:x="2955" fg:w="1"/><text x="78.6320%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="78.4350%" y="373" width="0.0265%" height="15" fill="rgb(206,152,27)" fg:x="2957" fg:w="1"/><text x="78.6850%" y="383.50"></text></g><g><title>_dl_sysdep_parse_arguments (1 samples, 0.03%)</title><rect x="78.4615%" y="357" width="0.0265%" height="15" fill="rgb(240,77,30)" fg:x="2958" fg:w="1"/><text x="78.7115%" y="367.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.03%)</title><rect x="78.4881%" y="341" width="0.0265%" height="15" fill="rgb(231,5,3)" fg:x="2959" fg:w="1"/><text x="78.7381%" y="351.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.03%)</title><rect x="78.4881%" y="325" width="0.0265%" height="15" fill="rgb(207,226,32)" fg:x="2959" fg:w="1"/><text x="78.7381%" y="335.50"></text></g><g><title>openaux (1 samples, 0.03%)</title><rect x="78.4881%" y="309" width="0.0265%" height="15" fill="rgb(222,207,47)" fg:x="2959" fg:w="1"/><text x="78.7381%" y="319.50"></text></g><g><title>_dl_map_object (1 samples, 0.03%)</title><rect x="78.4881%" y="293" width="0.0265%" height="15" fill="rgb(229,115,45)" fg:x="2959" fg:w="1"/><text x="78.7381%" y="303.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.03%)</title><rect x="78.4881%" y="277" width="0.0265%" height="15" fill="rgb(224,191,6)" fg:x="2959" fg:w="1"/><text x="78.7381%" y="287.50"></text></g><g><title>_start (8 samples, 0.21%)</title><rect x="78.3554%" y="405" width="0.2122%" height="15" fill="rgb(230,227,24)" fg:x="2954" fg:w="8"/><text x="78.6054%" y="415.50"></text></g><g><title>_dl_start (6 samples, 0.16%)</title><rect x="78.4085%" y="389" width="0.1592%" height="15" fill="rgb(228,80,19)" fg:x="2956" fg:w="6"/><text x="78.6585%" y="399.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.11%)</title><rect x="78.4615%" y="373" width="0.1061%" height="15" fill="rgb(247,229,0)" fg:x="2958" fg:w="4"/><text x="78.7115%" y="383.50"></text></g><g><title>dl_main (3 samples, 0.08%)</title><rect x="78.4881%" y="357" width="0.0796%" height="15" fill="rgb(237,194,15)" fg:x="2959" fg:w="3"/><text x="78.7381%" y="367.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.05%)</title><rect x="78.5146%" y="341" width="0.0531%" height="15" fill="rgb(219,203,20)" fg:x="2960" fg:w="2"/><text x="78.7646%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.03%)</title><rect x="78.5676%" y="405" width="0.0265%" height="15" fill="rgb(234,128,8)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.03%)</title><rect x="78.5676%" y="389" width="0.0265%" height="15" fill="rgb(248,202,8)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1 samples, 0.03%)</title><rect x="78.5676%" y="373" width="0.0265%" height="15" fill="rgb(206,104,37)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.03%)</title><rect x="78.5676%" y="357" width="0.0265%" height="15" fill="rgb(223,8,27)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="367.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.03%)</title><rect x="78.5676%" y="341" width="0.0265%" height="15" fill="rgb(216,217,28)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="351.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (1 samples, 0.03%)</title><rect x="78.5676%" y="325" width="0.0265%" height="15" fill="rgb(249,199,1)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.03%)</title><rect x="78.5676%" y="309" width="0.0265%" height="15" fill="rgb(240,85,17)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="78.5676%" y="293" width="0.0265%" height="15" fill="rgb(206,108,45)" fg:x="2962" fg:w="1"/><text x="78.8176%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.03%)</title><rect x="78.6207%" y="357" width="0.0265%" height="15" fill="rgb(245,210,41)" fg:x="2964" fg:w="1"/><text x="78.8707%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="78.6472%" y="357" width="0.0265%" height="15" fill="rgb(206,13,37)" fg:x="2965" fg:w="1"/><text x="78.8972%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3 samples, 0.08%)</title><rect x="78.6207%" y="389" width="0.0796%" height="15" fill="rgb(250,61,18)" fg:x="2964" fg:w="3"/><text x="78.8707%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3 samples, 0.08%)</title><rect x="78.6207%" y="373" width="0.0796%" height="15" fill="rgb(235,172,48)" fg:x="2964" fg:w="3"/><text x="78.8707%" y="383.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::bind_values (1 samples, 0.03%)</title><rect x="78.6737%" y="357" width="0.0265%" height="15" fill="rgb(249,201,17)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="367.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_bindings (1 samples, 0.03%)</title><rect x="78.6737%" y="341" width="0.0265%" height="15" fill="rgb(219,208,6)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="351.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_plain_inherits (1 samples, 0.03%)</title><rect x="78.6737%" y="325" width="0.0265%" height="15" fill="rgb(248,31,23)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="335.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_identifier_access (1 samples, 0.03%)</title><rect x="78.6737%" y="309" width="0.0265%" height="15" fill="rgb(245,15,42)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="319.50"></text></g><g><title>snix_eval::compiler::Compiler::push_op (1 samples, 0.03%)</title><rect x="78.6737%" y="293" width="0.0265%" height="15" fill="rgb(222,217,39)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="303.50"></text></g><g><title>snix_eval::compiler::Compiler::chunk (1 samples, 0.03%)</title><rect x="78.6737%" y="277" width="0.0265%" height="15" fill="rgb(210,219,27)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::context_mut (1 samples, 0.03%)</title><rect x="78.6737%" y="261" width="0.0265%" height="15" fill="rgb(252,166,36)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="78.6737%" y="245" width="0.0265%" height="15" fill="rgb(245,132,34)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="78.6737%" y="229" width="0.0265%" height="15" fill="rgb(236,54,3)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="78.6737%" y="213" width="0.0265%" height="15" fill="rgb(241,173,43)" fg:x="2966" fg:w="1"/><text x="78.9237%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.13%)</title><rect x="78.5942%" y="405" width="0.1326%" height="15" fill="rgb(215,190,9)" fg:x="2963" fg:w="5"/><text x="78.8442%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="78.7003%" y="389" width="0.0265%" height="15" fill="rgb(242,101,16)" fg:x="2967" fg:w="1"/><text x="78.9503%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="78.7268%" y="405" width="0.0531%" height="15" fill="rgb(223,190,21)" fg:x="2968" fg:w="2"/><text x="78.9768%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="78.7533%" y="389" width="0.0265%" height="15" fill="rgb(215,228,25)" fg:x="2969" fg:w="1"/><text x="79.0033%" y="399.50"></text></g><g><title>alloc::raw_vec::min_non_zero_cap (1 samples, 0.03%)</title><rect x="78.7533%" y="373" width="0.0265%" height="15" fill="rgb(225,36,22)" fg:x="2969" fg:w="1"/><text x="79.0033%" y="383.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.03%)</title><rect x="78.8329%" y="341" width="0.0265%" height="15" fill="rgb(251,106,46)" fg:x="2972" fg:w="1"/><text x="79.0829%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="78.8329%" y="325" width="0.0265%" height="15" fill="rgb(208,90,1)" fg:x="2972" fg:w="1"/><text x="79.0829%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.11%)</title><rect x="78.7798%" y="405" width="0.1061%" height="15" fill="rgb(243,10,4)" fg:x="2970" fg:w="4"/><text x="79.0298%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="78.8329%" y="389" width="0.0531%" height="15" fill="rgb(212,137,27)" fg:x="2972" fg:w="2"/><text x="79.0829%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="78.8329%" y="373" width="0.0531%" height="15" fill="rgb(231,220,49)" fg:x="2972" fg:w="2"/><text x="79.0829%" y="383.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="78.8329%" y="357" width="0.0531%" height="15" fill="rgb(237,96,20)" fg:x="2972" fg:w="2"/><text x="79.0829%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_constant (1 samples, 0.03%)</title><rect x="78.8594%" y="341" width="0.0265%" height="15" fill="rgb(239,229,30)" fg:x="2973" fg:w="1"/><text x="79.1094%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Weak&lt;core::cell::Cell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.03%)</title><rect x="78.8859%" y="389" width="0.0265%" height="15" fill="rgb(219,65,33)" fg:x="2974" fg:w="1"/><text x="79.1359%" y="399.50"></text></g><g><title>&lt;alloc::rc::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="78.8859%" y="373" width="0.0265%" height="15" fill="rgb(243,134,7)" fg:x="2974" fg:w="1"/><text x="79.1359%" y="383.50"></text></g><g><title>alloc::rc::Weak&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="78.8859%" y="357" width="0.0265%" height="15" fill="rgb(216,177,54)" fg:x="2974" fg:w="1"/><text x="79.1359%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (2 samples, 0.05%)</title><rect x="78.8859%" y="405" width="0.0531%" height="15" fill="rgb(211,160,20)" fg:x="2974" fg:w="2"/><text x="79.1359%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Cell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="78.9125%" y="389" width="0.0265%" height="15" fill="rgb(239,85,39)" fg:x="2975" fg:w="1"/><text x="79.1625%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="78.9125%" y="373" width="0.0265%" height="15" fill="rgb(232,125,22)" fg:x="2975" fg:w="1"/><text x="79.1625%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (1 samples, 0.03%)</title><rect x="78.9125%" y="357" width="0.0265%" height="15" fill="rgb(244,57,34)" fg:x="2975" fg:w="1"/><text x="79.1625%" y="367.50"></text></g><g><title>_mi_deferred_free (2 samples, 0.05%)</title><rect x="78.9655%" y="373" width="0.0531%" height="15" fill="rgb(214,203,32)" fg:x="2977" fg:w="2"/><text x="79.2155%" y="383.50"></text></g><g><title>_mi_prim_thread_associate_default_heap (1 samples, 0.03%)</title><rect x="79.0186%" y="341" width="0.0265%" height="15" fill="rgb(207,58,43)" fg:x="2979" fg:w="1"/><text x="79.2686%" y="351.50"></text></g><g><title>_mi_tld_init (7 samples, 0.19%)</title><rect x="79.1512%" y="325" width="0.1857%" height="15" fill="rgb(215,193,15)" fg:x="2984" fg:w="7"/><text x="79.4012%" y="335.50"></text></g><g><title>mi_heap_get_default (13 samples, 0.34%)</title><rect x="79.0186%" y="357" width="0.3448%" height="15" fill="rgb(232,15,44)" fg:x="2979" fg:w="13"/><text x="79.2686%" y="367.50"></text></g><g><title>mi_thread_init (12 samples, 0.32%)</title><rect x="79.0451%" y="341" width="0.3183%" height="15" fill="rgb(212,3,48)" fg:x="2980" fg:w="12"/><text x="79.2951%" y="351.50"></text></g><g><title>mi_process_init (1 samples, 0.03%)</title><rect x="79.3369%" y="325" width="0.0265%" height="15" fill="rgb(218,128,7)" fg:x="2991" fg:w="1"/><text x="79.5869%" y="335.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.03%)</title><rect x="79.3634%" y="341" width="0.0265%" height="15" fill="rgb(226,216,39)" fg:x="2992" fg:w="1"/><text x="79.6134%" y="351.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.03%)</title><rect x="79.3899%" y="341" width="0.0265%" height="15" fill="rgb(243,47,51)" fg:x="2993" fg:w="1"/><text x="79.6399%" y="351.50"></text></g><g><title>_mi_arena_alloc_aligned (1 samples, 0.03%)</title><rect x="79.4430%" y="309" width="0.0265%" height="15" fill="rgb(241,183,40)" fg:x="2995" fg:w="1"/><text x="79.6930%" y="319.50"></text></g><g><title>__memset_avx512_unaligned_erms (51 samples, 1.35%)</title><rect x="79.6286%" y="293" width="1.3528%" height="15" fill="rgb(231,217,32)" fg:x="3002" fg:w="51"/><text x="79.8786%" y="303.50"></text></g><g><title>_mi_arena_alloc_aligned (6 samples, 0.16%)</title><rect x="80.9814%" y="293" width="0.1592%" height="15" fill="rgb(229,61,38)" fg:x="3053" fg:w="6"/><text x="81.2314%" y="303.50"></text></g><g><title>mi_arena_try_alloc.isra.0 (4 samples, 0.11%)</title><rect x="81.0345%" y="277" width="0.1061%" height="15" fill="rgb(225,210,5)" fg:x="3055" fg:w="4"/><text x="81.2845%" y="287.50"></text></g><g><title>mi_arena_try_alloc_at.isra.0 (2 samples, 0.05%)</title><rect x="81.0875%" y="261" width="0.0531%" height="15" fill="rgb(231,79,45)" fg:x="3057" fg:w="2"/><text x="81.3375%" y="271.50"></text></g><g><title>_mi_bitmap_claim_across (1 samples, 0.03%)</title><rect x="81.1141%" y="245" width="0.0265%" height="15" fill="rgb(224,100,7)" fg:x="3058" fg:w="1"/><text x="81.3641%" y="255.50"></text></g><g><title>_mi_segment_map_allocated_at (2 samples, 0.05%)</title><rect x="81.1406%" y="293" width="0.0531%" height="15" fill="rgb(241,198,18)" fg:x="3059" fg:w="2"/><text x="81.3906%" y="303.50"></text></g><g><title>mi_segment_alloc (66 samples, 1.75%)</title><rect x="79.4695%" y="309" width="1.7507%" height="15" fill="rgb(252,97,53)" fg:x="2996" fg:w="66"/><text x="79.7195%" y="319.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (1 samples, 0.03%)</title><rect x="81.1936%" y="293" width="0.0265%" height="15" fill="rgb(220,88,7)" fg:x="3061" fg:w="1"/><text x="81.4436%" y="303.50"></text></g><g><title>mi_segment_try_reclaim (1 samples, 0.03%)</title><rect x="81.2202%" y="309" width="0.0265%" height="15" fill="rgb(213,176,14)" fg:x="3062" fg:w="1"/><text x="81.4702%" y="319.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (71 samples, 1.88%)</title><rect x="79.4430%" y="325" width="1.8833%" height="15" fill="rgb(246,73,7)" fg:x="2995" fg:w="71"/><text x="79.6930%" y="335.50">m..</text></g><g><title>mi_segments_page_find_and_allocate (3 samples, 0.08%)</title><rect x="81.2467%" y="309" width="0.0796%" height="15" fill="rgb(245,64,36)" fg:x="3063" fg:w="3"/><text x="81.4967%" y="319.50"></text></g><g><title>_mi_malloc_generic (88 samples, 2.33%)</title><rect x="79.0186%" y="373" width="2.3342%" height="15" fill="rgb(245,80,10)" fg:x="2979" fg:w="88"/><text x="79.2686%" y="383.50">_..</text></g><g><title>mi_page_queue_find_free_ex (75 samples, 1.99%)</title><rect x="79.3634%" y="357" width="1.9894%" height="15" fill="rgb(232,107,50)" fg:x="2992" fg:w="75"/><text x="79.6134%" y="367.50">m..</text></g><g><title>mi_page_fresh_alloc (73 samples, 1.94%)</title><rect x="79.4164%" y="341" width="1.9363%" height="15" fill="rgb(253,3,0)" fg:x="2994" fg:w="73"/><text x="79.6664%" y="351.50">m..</text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.03%)</title><rect x="81.3263%" y="325" width="0.0265%" height="15" fill="rgb(212,99,53)" fg:x="3066" fg:w="1"/><text x="81.5763%" y="335.50"></text></g><g><title>mi_find_page (1 samples, 0.03%)</title><rect x="81.3528%" y="373" width="0.0265%" height="15" fill="rgb(249,111,54)" fg:x="3067" fg:w="1"/><text x="81.6028%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::repeat (93 samples, 2.47%)</title><rect x="78.9390%" y="405" width="2.4668%" height="15" fill="rgb(249,55,30)" fg:x="2976" fg:w="93"/><text x="79.1890%" y="415.50">al..</text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (93 samples, 2.47%)</title><rect x="78.9390%" y="389" width="2.4668%" height="15" fill="rgb(237,47,42)" fg:x="2976" fg:w="93"/><text x="79.1890%" y="399.50">mi..</text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.03%)</title><rect x="81.3793%" y="373" width="0.0265%" height="15" fill="rgb(211,20,18)" fg:x="3068" fg:w="1"/><text x="81.6293%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="81.4058%" y="405" width="0.0265%" height="15" fill="rgb(231,203,46)" fg:x="3069" fg:w="1"/><text x="81.6558%" y="415.50"></text></g><g><title>anon.bc732312d7c58fbd6906ea47ff0d64da.8.llvm.11452490582698466035 (1 samples, 0.03%)</title><rect x="81.4324%" y="405" width="0.0265%" height="15" fill="rgb(237,142,3)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="415.50"></text></g><g><title>nix_compat::nixbase32::encode (1 samples, 0.03%)</title><rect x="81.4324%" y="389" width="0.0265%" height="15" fill="rgb(241,107,1)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="81.4324%" y="373" width="0.0265%" height="15" fill="rgb(229,83,13)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.03%)</title><rect x="81.4324%" y="357" width="0.0265%" height="15" fill="rgb(241,91,40)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.03%)</title><rect x="81.4324%" y="341" width="0.0265%" height="15" fill="rgb(225,3,45)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="81.4324%" y="325" width="0.0265%" height="15" fill="rgb(244,223,14)" fg:x="3070" fg:w="1"/><text x="81.6824%" y="335.50"></text></g><g><title>bstr::ext_slice::ByteSlice::replace (1 samples, 0.03%)</title><rect x="81.4589%" y="405" width="0.0265%" height="15" fill="rgb(224,124,37)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="81.4589%" y="389" width="0.0265%" height="15" fill="rgb(251,171,30)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="81.4589%" y="373" width="0.0265%" height="15" fill="rgb(236,46,54)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="81.4589%" y="357" width="0.0265%" height="15" fill="rgb(245,213,5)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="81.4589%" y="341" width="0.0265%" height="15" fill="rgb(230,144,27)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="81.4589%" y="325" width="0.0265%" height="15" fill="rgb(220,86,6)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="81.4589%" y="309" width="0.0265%" height="15" fill="rgb(240,20,13)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="81.4589%" y="293" width="0.0265%" height="15" fill="rgb(217,89,34)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="81.4589%" y="277" width="0.0265%" height="15" fill="rgb(229,13,5)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="287.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="81.4589%" y="261" width="0.0265%" height="15" fill="rgb(244,67,35)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="271.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="81.4589%" y="245" width="0.0265%" height="15" fill="rgb(221,40,2)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="255.50"></text></g><g><title>_mi_bin (1 samples, 0.03%)</title><rect x="81.4589%" y="229" width="0.0265%" height="15" fill="rgb(237,157,21)" fg:x="3071" fg:w="1"/><text x="81.7089%" y="239.50"></text></g><g><title>chacha_block (4 samples, 0.11%)</title><rect x="81.4854%" y="405" width="0.1061%" height="15" fill="rgb(222,94,11)" fg:x="3072" fg:w="4"/><text x="81.7354%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="81.5915%" y="389" width="0.0265%" height="15" fill="rgb(249,113,6)" fg:x="3076" fg:w="1"/><text x="81.8415%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="81.5915%" y="373" width="0.0265%" height="15" fill="rgb(238,137,36)" fg:x="3076" fg:w="1"/><text x="81.8415%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (4 samples, 0.11%)</title><rect x="81.5915%" y="405" width="0.1061%" height="15" fill="rgb(210,102,26)" fg:x="3076" fg:w="4"/><text x="81.8415%" y="415.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (3 samples, 0.08%)</title><rect x="81.6180%" y="389" width="0.0796%" height="15" fill="rgb(218,30,30)" fg:x="3077" fg:w="3"/><text x="81.8680%" y="399.50"></text></g><g><title>__GI___ioctl (2 samples, 0.05%)</title><rect x="81.7241%" y="389" width="0.0531%" height="15" fill="rgb(214,67,26)" fg:x="3081" fg:w="2"/><text x="81.9741%" y="399.50"></text></g><g><title>console::unix_term::terminal_size (4 samples, 0.11%)</title><rect x="81.6976%" y="405" width="0.1061%" height="15" fill="rgb(251,9,53)" fg:x="3080" fg:w="4"/><text x="81.9476%" y="415.50"></text></g><g><title>__isatty (1 samples, 0.03%)</title><rect x="81.7772%" y="389" width="0.0265%" height="15" fill="rgb(228,204,25)" fg:x="3083" fg:w="1"/><text x="82.0272%" y="399.50"></text></g><g><title>__GI___tcgetattr (1 samples, 0.03%)</title><rect x="81.7772%" y="373" width="0.0265%" height="15" fill="rgb(207,153,8)" fg:x="3083" fg:w="1"/><text x="82.0272%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="81.7772%" y="357" width="0.0265%" height="15" fill="rgb(242,9,16)" fg:x="3083" fg:w="1"/><text x="82.0272%" y="367.50"></text></g><g><title>core::array::_&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (1 samples, 0.03%)</title><rect x="81.8037%" y="405" width="0.0265%" height="15" fill="rgb(217,211,10)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="81.8037%" y="389" width="0.0265%" height="15" fill="rgb(219,228,52)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="399.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="81.8037%" y="373" width="0.0265%" height="15" fill="rgb(231,92,29)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="383.50"></text></g><g><title>core::fmt::builders::DebugList::entries (1 samples, 0.03%)</title><rect x="81.8037%" y="357" width="0.0265%" height="15" fill="rgb(232,8,23)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="367.50"></text></g><g><title>core::fmt::builders::DebugList::entry (1 samples, 0.03%)</title><rect x="81.8037%" y="341" width="0.0265%" height="15" fill="rgb(216,211,34)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="351.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.03%)</title><rect x="81.8037%" y="325" width="0.0265%" height="15" fill="rgb(236,151,0)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="81.8037%" y="309" width="0.0265%" height="15" fill="rgb(209,168,3)" fg:x="3084" fg:w="1"/><text x="82.0537%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="81.8302%" y="405" width="0.0531%" height="15" fill="rgb(208,129,28)" fg:x="3085" fg:w="2"/><text x="82.0802%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.11%)</title><rect x="81.8833%" y="405" width="0.1061%" height="15" fill="rgb(229,78,22)" fg:x="3087" fg:w="4"/><text x="82.1333%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.05%)</title><rect x="81.9363%" y="389" width="0.0531%" height="15" fill="rgb(228,187,13)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="399.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::hash::Hash&gt;::hash (2 samples, 0.05%)</title><rect x="81.9363%" y="373" width="0.0531%" height="15" fill="rgb(240,119,24)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="383.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (2 samples, 0.05%)</title><rect x="81.9363%" y="357" width="0.0531%" height="15" fill="rgb(209,194,42)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="367.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (2 samples, 0.05%)</title><rect x="81.9363%" y="341" width="0.0531%" height="15" fill="rgb(247,200,46)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="351.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (2 samples, 0.05%)</title><rect x="81.9363%" y="325" width="0.0531%" height="15" fill="rgb(218,76,16)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="335.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (2 samples, 0.05%)</title><rect x="81.9363%" y="309" width="0.0531%" height="15" fill="rgb(225,21,48)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="319.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (2 samples, 0.05%)</title><rect x="81.9363%" y="293" width="0.0531%" height="15" fill="rgb(239,223,50)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="303.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (2 samples, 0.05%)</title><rect x="81.9363%" y="277" width="0.0531%" height="15" fill="rgb(244,45,21)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.05%)</title><rect x="81.9363%" y="261" width="0.0531%" height="15" fill="rgb(232,33,43)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.05%)</title><rect x="81.9363%" y="245" width="0.0531%" height="15" fill="rgb(209,8,3)" fg:x="3089" fg:w="2"/><text x="82.1863%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="81.9894%" y="197" width="0.0265%" height="15" fill="rgb(214,25,53)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="81.9894%" y="181" width="0.0265%" height="15" fill="rgb(254,186,54)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="81.9894%" y="165" width="0.0265%" height="15" fill="rgb(208,174,49)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="175.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="81.9894%" y="149" width="0.0265%" height="15" fill="rgb(233,191,51)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="159.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_remove_attrs::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="81.9894%" y="133" width="0.0265%" height="15" fill="rgb(222,134,10)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="143.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.03%)</title><rect x="81.9894%" y="117" width="0.0265%" height="15" fill="rgb(230,226,20)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="127.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.03%)</title><rect x="81.9894%" y="101" width="0.0265%" height="15" fill="rgb(251,111,25)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.03%)</title><rect x="81.9894%" y="85" width="0.0265%" height="15" fill="rgb(224,40,46)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="95.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="81.9894%" y="69" width="0.0265%" height="15" fill="rgb(236,108,47)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="81.9894%" y="53" width="0.0265%" height="15" fill="rgb(234,93,0)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="63.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="81.9894%" y="37" width="0.0265%" height="15" fill="rgb(224,213,32)" fg:x="3091" fg:w="1"/><text x="82.2394%" y="47.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.05%)</title><rect x="81.9894%" y="405" width="0.0531%" height="15" fill="rgb(251,11,48)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (2 samples, 0.05%)</title><rect x="81.9894%" y="389" width="0.0531%" height="15" fill="rgb(236,173,5)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="81.9894%" y="373" width="0.0531%" height="15" fill="rgb(230,95,12)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="81.9894%" y="357" width="0.0531%" height="15" fill="rgb(232,209,1)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="81.9894%" y="341" width="0.0531%" height="15" fill="rgb(232,6,1)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="351.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="81.9894%" y="325" width="0.0531%" height="15" fill="rgb(210,224,50)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="81.9894%" y="309" width="0.0531%" height="15" fill="rgb(228,127,35)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="81.9894%" y="293" width="0.0531%" height="15" fill="rgb(245,102,45)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="81.9894%" y="277" width="0.0531%" height="15" fill="rgb(214,1,49)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="81.9894%" y="261" width="0.0531%" height="15" fill="rgb(226,163,40)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;,snix_eval::builtins::pure_builtins::builtin_remove_attrs::{{closure}}::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,snix_eval::errors::ErrorKind&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="81.9894%" y="245" width="0.0531%" height="15" fill="rgb(239,212,28)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;,snix_eval::builtins::pure_builtins::builtin_remove_attrs::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.05%)</title><rect x="81.9894%" y="229" width="0.0531%" height="15" fill="rgb(220,20,13)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;&gt; (2 samples, 0.05%)</title><rect x="81.9894%" y="213" width="0.0531%" height="15" fill="rgb(210,164,35)" fg:x="3091" fg:w="2"/><text x="82.2394%" y="223.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::construct (1 samples, 0.03%)</title><rect x="82.0159%" y="197" width="0.0265%" height="15" fill="rgb(248,109,41)" fg:x="3092" fg:w="1"/><text x="82.2659%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.03%)</title><rect x="82.0159%" y="181" width="0.0265%" height="15" fill="rgb(238,23,50)" fg:x="3092" fg:w="1"/><text x="82.2659%" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.19%)</title><rect x="82.0424%" y="405" width="0.1857%" height="15" fill="rgb(211,48,49)" fg:x="3093" fg:w="7"/><text x="82.2924%" y="415.50"></text></g><g><title>std::thread::current::set_current (1 samples, 0.03%)</title><rect x="82.2016%" y="389" width="0.0265%" height="15" fill="rgb(223,36,21)" fg:x="3099" fg:w="1"/><text x="82.4516%" y="399.50"></text></g><g><title>pthread_setspecific@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="82.2016%" y="373" width="0.0265%" height="15" fill="rgb(207,123,46)" fg:x="3099" fg:w="1"/><text x="82.4516%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (2 samples, 0.05%)</title><rect x="82.2281%" y="405" width="0.0531%" height="15" fill="rgb(240,218,32)" fg:x="3100" fg:w="2"/><text x="82.4781%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::rc::generator::Gen&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.2812%" y="405" width="0.0265%" height="15" fill="rgb(252,5,43)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.2812%" y="389" width="0.0265%" height="15" fill="rgb(252,84,19)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.2812%" y="373" width="0.0265%" height="15" fill="rgb(243,152,39)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.2812%" y="357" width="0.0265%" height="15" fill="rgb(234,160,15)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.2812%" y="341" width="0.0265%" height="15" fill="rgb(237,34,20)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="82.2812%" y="325" width="0.0265%" height="15" fill="rgb(229,97,13)" fg:x="3102" fg:w="1"/><text x="82.5312%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;snix_eval::value::attrs::NixAttrs&gt;&gt; (1 samples, 0.03%)</title><rect x="82.4668%" y="389" width="0.0265%" height="15" fill="rgb(234,71,50)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::attrs::NixAttrs&gt; (1 samples, 0.03%)</title><rect x="82.4668%" y="373" width="0.0265%" height="15" fill="rgb(253,155,4)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;snix_eval::value::attrs::AttrsRep&gt;&gt; (1 samples, 0.03%)</title><rect x="82.4668%" y="357" width="0.0265%" height="15" fill="rgb(222,185,37)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="82.4668%" y="341" width="0.0265%" height="15" fill="rgb(251,177,13)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="351.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (1 samples, 0.03%)</title><rect x="82.4668%" y="325" width="0.0265%" height="15" fill="rgb(250,179,40)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="82.4668%" y="309" width="0.0265%" height="15" fill="rgb(242,44,2)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="82.4668%" y="293" width="0.0265%" height="15" fill="rgb(216,177,13)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="303.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="82.4668%" y="277" width="0.0265%" height="15" fill="rgb(216,106,43)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="82.4668%" y="261" width="0.0265%" height="15" fill="rgb(216,183,2)" fg:x="3109" fg:w="1"/><text x="82.7168%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (10 samples, 0.27%)</title><rect x="82.3077%" y="405" width="0.2653%" height="15" fill="rgb(249,75,3)" fg:x="3103" fg:w="10"/><text x="82.5577%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk&gt; (3 samples, 0.08%)</title><rect x="82.4934%" y="389" width="0.0796%" height="15" fill="rgb(219,67,39)" fg:x="3110" fg:w="3"/><text x="82.7434%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="82.4934%" y="373" width="0.0796%" height="15" fill="rgb(253,228,2)" fg:x="3110" fg:w="3"/><text x="82.7434%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="82.4934%" y="357" width="0.0796%" height="15" fill="rgb(235,138,27)" fg:x="3110" fg:w="3"/><text x="82.7434%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="82.5464%" y="341" width="0.0265%" height="15" fill="rgb(236,97,51)" fg:x="3112" fg:w="1"/><text x="82.7964%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="82.5464%" y="325" width="0.0265%" height="15" fill="rgb(240,80,30)" fg:x="3112" fg:w="1"/><text x="82.7964%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk::force_::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="82.5729%" y="405" width="0.0265%" height="15" fill="rgb(230,178,19)" fg:x="3113" fg:w="1"/><text x="82.8229%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.03%)</title><rect x="82.5995%" y="405" width="0.0265%" height="15" fill="rgb(210,190,27)" fg:x="3114" fg:w="1"/><text x="82.8495%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="82.6260%" y="325" width="0.0265%" height="15" fill="rgb(222,107,31)" fg:x="3115" fg:w="1"/><text x="82.8760%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (2 samples, 0.05%)</title><rect x="82.6260%" y="405" width="0.0531%" height="15" fill="rgb(216,127,34)" fg:x="3115" fg:w="2"/><text x="82.8760%" y="415.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.05%)</title><rect x="82.6260%" y="389" width="0.0531%" height="15" fill="rgb(234,116,52)" fg:x="3115" fg:w="2"/><text x="82.8760%" y="399.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (2 samples, 0.05%)</title><rect x="82.6260%" y="373" width="0.0531%" height="15" fill="rgb(222,124,15)" fg:x="3115" fg:w="2"/><text x="82.8760%" y="383.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::into_iter_sorted::_{{closure}} (2 samples, 0.05%)</title><rect x="82.6260%" y="357" width="0.0531%" height="15" fill="rgb(231,179,28)" fg:x="3115" fg:w="2"/><text x="82.8760%" y="367.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::Ord&gt;::cmp (2 samples, 0.05%)</title><rect x="82.6260%" y="341" width="0.0531%" height="15" fill="rgb(226,93,45)" fg:x="3115" fg:w="2"/><text x="82.8760%" y="351.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::Ord for bstr::bstr::BStr&gt;::cmp (1 samples, 0.03%)</title><rect x="82.6525%" y="325" width="0.0265%" height="15" fill="rgb(215,8,51)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="335.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::PartialOrd for bstr::bstr::BStr&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="82.6525%" y="309" width="0.0265%" height="15" fill="rgb(223,106,5)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="82.6525%" y="293" width="0.0265%" height="15" fill="rgb(250,191,5)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="303.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (1 samples, 0.03%)</title><rect x="82.6525%" y="277" width="0.0265%" height="15" fill="rgb(242,132,44)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="287.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.03%)</title><rect x="82.6525%" y="261" width="0.0265%" height="15" fill="rgb(251,152,29)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="271.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.03%)</title><rect x="82.6525%" y="245" width="0.0265%" height="15" fill="rgb(218,179,5)" fg:x="3116" fg:w="1"/><text x="82.9025%" y="255.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (1 samples, 0.03%)</title><rect x="82.6790%" y="373" width="0.0265%" height="15" fill="rgb(227,67,19)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="383.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::into_iter_sorted::_{{closure}} (1 samples, 0.03%)</title><rect x="82.6790%" y="357" width="0.0265%" height="15" fill="rgb(233,119,31)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="367.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::Ord&gt;::cmp (1 samples, 0.03%)</title><rect x="82.6790%" y="341" width="0.0265%" height="15" fill="rgb(241,120,22)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="351.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::Ord for bstr::bstr::BStr&gt;::cmp (1 samples, 0.03%)</title><rect x="82.6790%" y="325" width="0.0265%" height="15" fill="rgb(224,102,30)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="335.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::PartialOrd for bstr::bstr::BStr&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="82.6790%" y="309" width="0.0265%" height="15" fill="rgb(210,164,37)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="82.6790%" y="293" width="0.0265%" height="15" fill="rgb(226,191,16)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="303.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (1 samples, 0.03%)</title><rect x="82.6790%" y="277" width="0.0265%" height="15" fill="rgb(214,40,45)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="287.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.03%)</title><rect x="82.6790%" y="261" width="0.0265%" height="15" fill="rgb(244,29,26)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="271.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.03%)</title><rect x="82.6790%" y="245" width="0.0265%" height="15" fill="rgb(216,16,5)" fg:x="3117" fg:w="1"/><text x="82.9290%" y="255.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (3 samples, 0.08%)</title><rect x="82.6790%" y="405" width="0.0796%" height="15" fill="rgb(249,76,35)" fg:x="3117" fg:w="3"/><text x="82.9290%" y="415.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (3 samples, 0.08%)</title><rect x="82.6790%" y="389" width="0.0796%" height="15" fill="rgb(207,11,44)" fg:x="3117" fg:w="3"/><text x="82.9290%" y="399.50"></text></g><g><title>core::slice::sort::stable::quicksort::PartitionState&lt;T&gt;::partition_one (2 samples, 0.05%)</title><rect x="82.7056%" y="373" width="0.0531%" height="15" fill="rgb(228,190,49)" fg:x="3118" fg:w="2"/><text x="82.9556%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.03%)</title><rect x="82.7586%" y="405" width="0.0265%" height="15" fill="rgb(214,173,12)" fg:x="3120" fg:w="1"/><text x="83.0086%" y="415.50"></text></g><g><title>data_encoding::Encoding::encode_len (1 samples, 0.03%)</title><rect x="82.7851%" y="405" width="0.0265%" height="15" fill="rgb(218,26,35)" fg:x="3121" fg:w="1"/><text x="83.0351%" y="415.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="83.1565%" y="389" width="0.0265%" height="15" fill="rgb(220,200,19)" fg:x="3135" fg:w="1"/><text x="83.4065%" y="399.50"></text></g><g><title>snix_glue::builtins::derivation::derivation_builtins::builtin_derivation_strict::_{{closure}} (1 samples, 0.03%)</title><rect x="83.1565%" y="373" width="0.0265%" height="15" fill="rgb(239,95,49)" fg:x="3135" fg:w="1"/><text x="83.4065%" y="383.50"></text></g><g><title>genawaiter::core::advance (16 samples, 0.42%)</title><rect x="82.8117%" y="405" width="0.4244%" height="15" fill="rgb(235,85,53)" fg:x="3122" fg:w="16"/><text x="83.0617%" y="415.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (2 samples, 0.05%)</title><rect x="83.1830%" y="389" width="0.0531%" height="15" fill="rgb(233,133,31)" fg:x="3136" fg:w="2"/><text x="83.4330%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.05%)</title><rect x="83.1830%" y="373" width="0.0531%" height="15" fill="rgb(218,25,20)" fg:x="3136" fg:w="2"/><text x="83.4330%" y="383.50"></text></g><g><title>core::mem::replace (2 samples, 0.05%)</title><rect x="83.1830%" y="357" width="0.0531%" height="15" fill="rgb(252,210,38)" fg:x="3136" fg:w="2"/><text x="83.4330%" y="367.50"></text></g><g><title>core::ptr::read (2 samples, 0.05%)</title><rect x="83.1830%" y="341" width="0.0531%" height="15" fill="rgb(242,134,21)" fg:x="3136" fg:w="2"/><text x="83.4330%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="83.2361%" y="389" width="0.0265%" height="15" fill="rgb(213,28,48)" fg:x="3138" fg:w="1"/><text x="83.4861%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="83.2361%" y="373" width="0.0265%" height="15" fill="rgb(250,196,2)" fg:x="3138" fg:w="1"/><text x="83.4861%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="83.2361%" y="357" width="0.0265%" height="15" fill="rgb(227,5,17)" fg:x="3138" fg:w="1"/><text x="83.4861%" y="367.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (6 samples, 0.16%)</title><rect x="83.2361%" y="405" width="0.1592%" height="15" fill="rgb(221,226,24)" fg:x="3138" fg:w="6"/><text x="83.4861%" y="415.50"></text></g><g><title>snix_eval::vm::generators::_&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator::_{{closure}} (5 samples, 0.13%)</title><rect x="83.2626%" y="389" width="0.1326%" height="15" fill="rgb(211,5,48)" fg:x="3139" fg:w="5"/><text x="83.5126%" y="399.50"></text></g><g><title>snix_eval::vm::generators::pin_generator (5 samples, 0.13%)</title><rect x="83.2626%" y="373" width="0.1326%" height="15" fill="rgb(219,150,6)" fg:x="3139" fg:w="5"/><text x="83.5126%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.13%)</title><rect x="83.2626%" y="357" width="0.1326%" height="15" fill="rgb(251,46,16)" fg:x="3139" fg:w="5"/><text x="83.5126%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.13%)</title><rect x="83.2626%" y="341" width="0.1326%" height="15" fill="rgb(220,204,40)" fg:x="3139" fg:w="5"/><text x="83.5126%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5 samples, 0.13%)</title><rect x="83.2626%" y="325" width="0.1326%" height="15" fill="rgb(211,85,2)" fg:x="3139" fg:w="5"/><text x="83.5126%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="83.4218%" y="357" width="0.0796%" height="15" fill="rgb(229,17,7)" fg:x="3145" fg:w="3"/><text x="83.6718%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.08%)</title><rect x="83.4218%" y="341" width="0.0796%" height="15" fill="rgb(239,72,28)" fg:x="3145" fg:w="3"/><text x="83.6718%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.08%)</title><rect x="83.4218%" y="325" width="0.0796%" height="15" fill="rgb(230,47,54)" fg:x="3145" fg:w="3"/><text x="83.6718%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.08%)</title><rect x="83.4218%" y="309" width="0.0796%" height="15" fill="rgb(214,50,8)" fg:x="3145" fg:w="3"/><text x="83.6718%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.08%)</title><rect x="83.4218%" y="293" width="0.0796%" height="15" fill="rgb(216,198,43)" fg:x="3145" fg:w="3"/><text x="83.6718%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="83.4483%" y="277" width="0.0531%" height="15" fill="rgb(234,20,35)" fg:x="3146" fg:w="2"/><text x="83.6983%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="83.4483%" y="261" width="0.0531%" height="15" fill="rgb(254,45,19)" fg:x="3146" fg:w="2"/><text x="83.6983%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4 samples, 0.11%)</title><rect x="83.4218%" y="389" width="0.1061%" height="15" fill="rgb(219,14,44)" fg:x="3145" fg:w="4"/><text x="83.6718%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.11%)</title><rect x="83.4218%" y="373" width="0.1061%" height="15" fill="rgb(217,220,26)" fg:x="3145" fg:w="4"/><text x="83.6718%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.03%)</title><rect x="83.5013%" y="357" width="0.0265%" height="15" fill="rgb(213,158,28)" fg:x="3148" fg:w="1"/><text x="83.7513%" y="367.50"></text></g><g><title>core::intrinsics::likely (1 samples, 0.03%)</title><rect x="83.5013%" y="341" width="0.0265%" height="15" fill="rgb(252,51,52)" fg:x="3148" fg:w="1"/><text x="83.7513%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="83.5279%" y="373" width="0.0265%" height="15" fill="rgb(246,89,16)" fg:x="3149" fg:w="1"/><text x="83.7779%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.03%)</title><rect x="83.5279%" y="357" width="0.0265%" height="15" fill="rgb(216,158,49)" fg:x="3149" fg:w="1"/><text x="83.7779%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="83.5279%" y="341" width="0.0265%" height="15" fill="rgb(236,107,19)" fg:x="3149" fg:w="1"/><text x="83.7779%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.19%)</title><rect x="83.3952%" y="405" width="0.1857%" height="15" fill="rgb(228,185,30)" fg:x="3144" fg:w="7"/><text x="83.6452%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (2 samples, 0.05%)</title><rect x="83.5279%" y="389" width="0.0531%" height="15" fill="rgb(246,134,8)" fg:x="3149" fg:w="2"/><text x="83.7779%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (1 samples, 0.03%)</title><rect x="83.5544%" y="373" width="0.0265%" height="15" fill="rgb(214,143,50)" fg:x="3150" fg:w="1"/><text x="83.8044%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.03%)</title><rect x="83.5809%" y="357" width="0.0265%" height="15" fill="rgb(228,75,8)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="367.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S,A&gt;::insert_with_hasher::_{{closure}} (1 samples, 0.03%)</title><rect x="83.5809%" y="341" width="0.0265%" height="15" fill="rgb(207,175,4)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="351.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token::_{{closure}} (1 samples, 0.03%)</title><rect x="83.5809%" y="325" width="0.0265%" height="15" fill="rgb(205,108,24)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="335.50"></text></g><g><title>rowan::green::node_cache::token_hash (1 samples, 0.03%)</title><rect x="83.5809%" y="309" width="0.0265%" height="15" fill="rgb(244,120,49)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.03%)</title><rect x="83.5809%" y="293" width="0.0265%" height="15" fill="rgb(223,47,38)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="303.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.03%)</title><rect x="83.5809%" y="277" width="0.0265%" height="15" fill="rgb(229,179,11)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="287.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u8 (1 samples, 0.03%)</title><rect x="83.5809%" y="261" width="0.0265%" height="15" fill="rgb(231,122,1)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="271.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.03%)</title><rect x="83.5809%" y="245" width="0.0265%" height="15" fill="rgb(245,119,9)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.03%)</title><rect x="83.5809%" y="229" width="0.0265%" height="15" fill="rgb(241,163,25)" fg:x="3151" fg:w="1"/><text x="83.8309%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="83.6340%" y="325" width="0.0265%" height="15" fill="rgb(217,214,3)" fg:x="3153" fg:w="1"/><text x="83.8840%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.11%)</title><rect x="83.5809%" y="389" width="0.1061%" height="15" fill="rgb(240,86,28)" fg:x="3151" fg:w="4"/><text x="83.8309%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.11%)</title><rect x="83.5809%" y="373" width="0.1061%" height="15" fill="rgb(215,47,9)" fg:x="3151" fg:w="4"/><text x="83.8309%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (3 samples, 0.08%)</title><rect x="83.6074%" y="357" width="0.0796%" height="15" fill="rgb(252,25,45)" fg:x="3152" fg:w="3"/><text x="83.8574%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (3 samples, 0.08%)</title><rect x="83.6074%" y="341" width="0.0796%" height="15" fill="rgb(251,164,9)" fg:x="3152" fg:w="3"/><text x="83.8574%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.03%)</title><rect x="83.6605%" y="325" width="0.0265%" height="15" fill="rgb(233,194,0)" fg:x="3154" fg:w="1"/><text x="83.9105%" y="335.50"></text></g><g><title>rowan::green::node_cache::node_hash (1 samples, 0.03%)</title><rect x="83.6870%" y="341" width="0.0265%" height="15" fill="rgb(249,111,24)" fg:x="3155" fg:w="1"/><text x="83.9370%" y="351.50"></text></g><g><title>rowan::green::node_cache::node_hash (2 samples, 0.05%)</title><rect x="83.6870%" y="357" width="0.0531%" height="15" fill="rgb(250,223,3)" fg:x="3155" fg:w="2"/><text x="83.9370%" y="367.50"></text></g><g><title>rowan::green::node_cache::token_hash (1 samples, 0.03%)</title><rect x="83.7135%" y="341" width="0.0265%" height="15" fill="rgb(236,178,37)" fg:x="3156" fg:w="1"/><text x="83.9635%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.03%)</title><rect x="83.7135%" y="325" width="0.0265%" height="15" fill="rgb(241,158,50)" fg:x="3156" fg:w="1"/><text x="83.9635%" y="335.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.03%)</title><rect x="83.7135%" y="309" width="0.0265%" height="15" fill="rgb(213,121,41)" fg:x="3156" fg:w="1"/><text x="83.9635%" y="319.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="83.7135%" y="293" width="0.0265%" height="15" fill="rgb(240,92,3)" fg:x="3156" fg:w="1"/><text x="83.9635%" y="303.50"></text></g><g><title>rowan::green::node_cache::node_hash (3 samples, 0.08%)</title><rect x="83.6870%" y="373" width="0.0796%" height="15" fill="rgb(205,123,3)" fg:x="3155" fg:w="3"/><text x="83.9370%" y="383.50"></text></g><g><title>rowan::green::node_cache::token_hash (1 samples, 0.03%)</title><rect x="83.7401%" y="357" width="0.0265%" height="15" fill="rgb(205,97,47)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.03%)</title><rect x="83.7401%" y="341" width="0.0265%" height="15" fill="rgb(247,152,14)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="351.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.03%)</title><rect x="83.7401%" y="325" width="0.0265%" height="15" fill="rgb(248,195,53)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="335.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="83.7401%" y="309" width="0.0265%" height="15" fill="rgb(226,201,16)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="319.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.03%)</title><rect x="83.7401%" y="293" width="0.0265%" height="15" fill="rgb(205,98,0)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.03%)</title><rect x="83.7401%" y="277" width="0.0265%" height="15" fill="rgb(214,191,48)" fg:x="3157" fg:w="1"/><text x="83.9901%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.21%)</title><rect x="83.5809%" y="405" width="0.2122%" height="15" fill="rgb(237,112,39)" fg:x="3151" fg:w="8"/><text x="83.8309%" y="415.50"></text></g><g><title>rowan::green::node_cache::node_hash (4 samples, 0.11%)</title><rect x="83.6870%" y="389" width="0.1061%" height="15" fill="rgb(247,203,27)" fg:x="3155" fg:w="4"/><text x="83.9370%" y="399.50"></text></g><g><title>rowan::green::node_cache::token_hash (1 samples, 0.03%)</title><rect x="83.7666%" y="373" width="0.0265%" height="15" fill="rgb(235,124,28)" fg:x="3158" fg:w="1"/><text x="84.0166%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.03%)</title><rect x="83.7666%" y="357" width="0.0265%" height="15" fill="rgb(208,207,46)" fg:x="3158" fg:w="1"/><text x="84.0166%" y="367.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.03%)</title><rect x="83.7666%" y="341" width="0.0265%" height="15" fill="rgb(234,176,4)" fg:x="3158" fg:w="1"/><text x="84.0166%" y="351.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="83.7666%" y="325" width="0.0265%" height="15" fill="rgb(230,133,28)" fg:x="3158" fg:w="1"/><text x="84.0166%" y="335.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::width (2 samples, 0.05%)</title><rect x="83.7931%" y="405" width="0.0531%" height="15" fill="rgb(211,137,40)" fg:x="3159" fg:w="2"/><text x="84.0431%" y="415.50"></text></g><g><title>indicatif::multi::MultiState::draw (1 samples, 0.03%)</title><rect x="83.8462%" y="405" width="0.0265%" height="15" fill="rgb(254,35,13)" fg:x="3161" fg:w="1"/><text x="84.0962%" y="415.50"></text></g><g><title>&lt;indicatif::style::PaddedStringDisplay as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="83.8462%" y="389" width="0.0265%" height="15" fill="rgb(225,49,51)" fg:x="3161" fg:w="1"/><text x="84.0962%" y="399.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="83.8462%" y="373" width="0.0265%" height="15" fill="rgb(251,10,15)" fg:x="3161" fg:w="1"/><text x="84.0962%" y="383.50"></text></g><g><title>indicatif::progress_bar::TickerControl::run (10 samples, 0.27%)</title><rect x="83.8727%" y="405" width="0.2653%" height="15" fill="rgb(228,207,15)" fg:x="3162" fg:w="10"/><text x="84.1227%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="84.0849%" y="389" width="0.0531%" height="15" fill="rgb(241,99,19)" fg:x="3170" fg:w="2"/><text x="84.3349%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="84.1114%" y="373" width="0.0265%" height="15" fill="rgb(207,104,49)" fg:x="3171" fg:w="1"/><text x="84.3614%" y="383.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (8 samples, 0.21%)</title><rect x="84.1379%" y="405" width="0.2122%" height="15" fill="rgb(234,99,18)" fg:x="3172" fg:w="8"/><text x="84.3879%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.03%)</title><rect x="84.5889%" y="389" width="0.0265%" height="15" fill="rgb(213,191,49)" fg:x="3189" fg:w="1"/><text x="84.8389%" y="399.50"></text></g><g><title>&lt;indicatif::format::BinaryBytes as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="84.6154%" y="389" width="0.0265%" height="15" fill="rgb(210,226,19)" fg:x="3190" fg:w="1"/><text x="84.8654%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="84.6154%" y="373" width="0.0265%" height="15" fill="rgb(229,97,18)" fg:x="3190" fg:w="1"/><text x="84.8654%" y="383.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.03%)</title><rect x="84.6419%" y="389" width="0.0265%" height="15" fill="rgb(211,167,15)" fg:x="3191" fg:w="1"/><text x="84.8919%" y="399.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (14 samples, 0.37%)</title><rect x="84.3501%" y="405" width="0.3714%" height="15" fill="rgb(210,169,34)" fg:x="3180" fg:w="14"/><text x="84.6001%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.05%)</title><rect x="84.6684%" y="389" width="0.0531%" height="15" fill="rgb(241,121,31)" fg:x="3192" fg:w="2"/><text x="84.9184%" y="399.50"></text></g><g><title>indicatif::style::ProgressStyle::push_line (1 samples, 0.03%)</title><rect x="84.7215%" y="405" width="0.0265%" height="15" fill="rgb(232,40,11)" fg:x="3194" fg:w="1"/><text x="84.9715%" y="415.50"></text></g><g><title>main (1 samples, 0.03%)</title><rect x="84.7480%" y="405" width="0.0265%" height="15" fill="rgb(205,86,26)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap_builder::builder::arg::Arg&gt; (1 samples, 0.03%)</title><rect x="84.7480%" y="389" width="0.0265%" height="15" fill="rgb(231,126,28)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(clap_builder::util::id::Id,clap_builder::builder::arg_predicate::ArgPredicate,core::option::Option&lt;clap_builder::builder::os_str::OsStr&gt;)&gt;&gt; (1 samples, 0.03%)</title><rect x="84.7480%" y="373" width="0.0265%" height="15" fill="rgb(219,221,18)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(clap_builder::util::id::Id,clap_builder::builder::arg_predicate::ArgPredicate,core::option::Option&lt;clap_builder::builder::os_str::OsStr&gt;)&gt;&gt; (1 samples, 0.03%)</title><rect x="84.7480%" y="357" width="0.0265%" height="15" fill="rgb(211,40,0)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="84.7480%" y="341" width="0.0265%" height="15" fill="rgb(239,85,43)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.03%)</title><rect x="84.7480%" y="325" width="0.0265%" height="15" fill="rgb(231,55,21)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.03%)</title><rect x="84.7480%" y="309" width="0.0265%" height="15" fill="rgb(225,184,43)" fg:x="3195" fg:w="1"/><text x="84.9980%" y="319.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward_with_ranker (1 samples, 0.03%)</title><rect x="84.7745%" y="405" width="0.0265%" height="15" fill="rgb(251,158,41)" fg:x="3196" fg:w="1"/><text x="85.0245%" y="415.50"></text></g><g><title>mi_arena_try_alloc.isra.0 (1 samples, 0.03%)</title><rect x="84.8011%" y="405" width="0.0265%" height="15" fill="rgb(234,159,37)" fg:x="3197" fg:w="1"/><text x="85.0511%" y="415.50"></text></g><g><title>mi_free (20 samples, 0.53%)</title><rect x="84.8276%" y="405" width="0.5305%" height="15" fill="rgb(216,204,22)" fg:x="3198" fg:w="20"/><text x="85.0776%" y="415.50"></text></g><g><title>mi_free_block_delayed_mt (12 samples, 0.32%)</title><rect x="85.3581%" y="405" width="0.3183%" height="15" fill="rgb(214,17,3)" fg:x="3218" fg:w="12"/><text x="85.6081%" y="415.50"></text></g><g><title>mi_heap_malloc_aligned_at (10 samples, 0.27%)</title><rect x="85.6764%" y="405" width="0.2653%" height="15" fill="rgb(212,111,17)" fg:x="3230" fg:w="10"/><text x="85.9264%" y="415.50"></text></g><g><title>mi_malloc_aligned (5 samples, 0.13%)</title><rect x="85.9416%" y="405" width="0.1326%" height="15" fill="rgb(221,157,24)" fg:x="3240" fg:w="5"/><text x="86.1916%" y="415.50"></text></g><g><title>mi_option_get (7 samples, 0.19%)</title><rect x="86.0743%" y="405" width="0.1857%" height="15" fill="rgb(252,16,13)" fg:x="3245" fg:w="7"/><text x="86.3243%" y="415.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (19 samples, 0.50%)</title><rect x="86.2599%" y="405" width="0.5040%" height="15" fill="rgb(221,62,2)" fg:x="3252" fg:w="19"/><text x="86.5099%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="86.7109%" y="389" width="0.0531%" height="15" fill="rgb(247,87,22)" fg:x="3269" fg:w="2"/><text x="86.9609%" y="399.50"></text></g><g><title>mi_segment_alloc (1 samples, 0.03%)</title><rect x="86.7639%" y="405" width="0.0265%" height="15" fill="rgb(215,73,9)" fg:x="3271" fg:w="1"/><text x="87.0139%" y="415.50"></text></g><g><title>_mi_stat_increase (1 samples, 0.03%)</title><rect x="86.7639%" y="389" width="0.0265%" height="15" fill="rgb(207,175,33)" fg:x="3271" fg:w="1"/><text x="87.0139%" y="399.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (2 samples, 0.05%)</title><rect x="86.7905%" y="405" width="0.0531%" height="15" fill="rgb(243,129,54)" fg:x="3272" fg:w="2"/><text x="87.0405%" y="415.50"></text></g><g><title>nix_compat::nixbase32::encode (2 samples, 0.05%)</title><rect x="86.8435%" y="405" width="0.0531%" height="15" fill="rgb(227,119,45)" fg:x="3274" fg:w="2"/><text x="87.0935%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="86.8700%" y="389" width="0.0265%" height="15" fill="rgb(205,109,36)" fg:x="3275" fg:w="1"/><text x="87.1200%" y="399.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.03%)</title><rect x="86.8700%" y="373" width="0.0265%" height="15" fill="rgb(205,6,39)" fg:x="3275" fg:w="1"/><text x="87.1200%" y="383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.03%)</title><rect x="86.8700%" y="357" width="0.0265%" height="15" fill="rgb(221,32,16)" fg:x="3275" fg:w="1"/><text x="87.1200%" y="367.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="86.8700%" y="341" width="0.0265%" height="15" fill="rgb(228,144,50)" fg:x="3275" fg:w="1"/><text x="87.1200%" y="351.50"></text></g><g><title>path_clean::clean (1 samples, 0.03%)</title><rect x="86.8966%" y="405" width="0.0265%" height="15" fill="rgb(229,201,53)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.03%)</title><rect x="86.8966%" y="389" width="0.0265%" height="15" fill="rgb(249,153,27)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.03%)</title><rect x="86.8966%" y="373" width="0.0265%" height="15" fill="rgb(227,106,25)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.03%)</title><rect x="86.8966%" y="357" width="0.0265%" height="15" fill="rgb(230,65,29)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="86.8966%" y="341" width="0.0265%" height="15" fill="rgb(221,57,46)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="86.8966%" y="325" width="0.0265%" height="15" fill="rgb(229,161,17)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="335.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="86.8966%" y="309" width="0.0265%" height="15" fill="rgb(222,213,11)" fg:x="3276" fg:w="1"/><text x="87.1466%" y="319.50"></text></g><g><title>regex_automata::util::determinize::next (1 samples, 0.03%)</title><rect x="86.9231%" y="405" width="0.0265%" height="15" fill="rgb(235,35,13)" fg:x="3277" fg:w="1"/><text x="87.1731%" y="415.50"></text></g><g><title>rnix::ast::str_util::unescape (1 samples, 0.03%)</title><rect x="86.9496%" y="405" width="0.0265%" height="15" fill="rgb(233,158,34)" fg:x="3278" fg:w="1"/><text x="87.1996%" y="415.50"></text></g><g><title>rnix::ast::support::nth (1 samples, 0.03%)</title><rect x="86.9761%" y="405" width="0.0265%" height="15" fill="rgb(215,151,48)" fg:x="3279" fg:w="1"/><text x="87.2261%" y="415.50"></text></g><g><title>rnix::ast::support::token_u (1 samples, 0.03%)</title><rect x="87.0027%" y="405" width="0.0265%" height="15" fill="rgb(229,84,14)" fg:x="3280" fg:w="1"/><text x="87.2527%" y="415.50"></text></g><g><title>rnix::ast::support::children_tokens_u (1 samples, 0.03%)</title><rect x="87.0027%" y="389" width="0.0265%" height="15" fill="rgb(229,68,14)" fg:x="3280" fg:w="1"/><text x="87.2527%" y="399.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children_with_tokens (1 samples, 0.03%)</title><rect x="87.0027%" y="373" width="0.0265%" height="15" fill="rgb(243,106,26)" fg:x="3280" fg:w="1"/><text x="87.2527%" y="383.50"></text></g><g><title>rowan::cursor::SyntaxNode::children_with_tokens (1 samples, 0.03%)</title><rect x="87.0027%" y="357" width="0.0265%" height="15" fill="rgb(206,45,38)" fg:x="3280" fg:w="1"/><text x="87.2527%" y="367.50"></text></g><g><title>rowan::cursor::SyntaxElementChildren::new (1 samples, 0.03%)</title><rect x="87.0027%" y="341" width="0.0265%" height="15" fill="rgb(226,6,15)" fg:x="3280" fg:w="1"/><text x="87.2527%" y="351.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::drain_trivia_buffer (1 samples, 0.03%)</title><rect x="87.0292%" y="405" width="0.0265%" height="15" fill="rgb(232,22,54)" fg:x="3281" fg:w="1"/><text x="87.2792%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.03%)</title><rect x="87.0292%" y="389" width="0.0265%" height="15" fill="rgb(229,222,32)" fg:x="3281" fg:w="1"/><text x="87.2792%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="87.0292%" y="373" width="0.0265%" height="15" fill="rgb(228,62,29)" fg:x="3281" fg:w="1"/><text x="87.2792%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_hasattr (1 samples, 0.03%)</title><rect x="87.0557%" y="405" width="0.0265%" height="15" fill="rgb(251,103,34)" fg:x="3282" fg:w="1"/><text x="87.3057%" y="415.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_left_assoc (1 samples, 0.03%)</title><rect x="87.0822%" y="405" width="0.0265%" height="15" fill="rgb(233,12,30)" fg:x="3283" fg:w="1"/><text x="87.3322%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="87.1618%" y="373" width="0.0265%" height="15" fill="rgb(238,52,0)" fg:x="3286" fg:w="1"/><text x="87.4118%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="87.1618%" y="357" width="0.0265%" height="15" fill="rgb(223,98,5)" fg:x="3286" fg:w="1"/><text x="87.4118%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="87.1883%" y="373" width="0.0265%" height="15" fill="rgb(228,75,37)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="383.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.03%)</title><rect x="87.1883%" y="357" width="0.0265%" height="15" fill="rgb(205,115,49)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="367.50"></text></g><g><title>rnix::tokenizer::Tokenizer::str_since (1 samples, 0.03%)</title><rect x="87.1883%" y="341" width="0.0265%" height="15" fill="rgb(250,154,43)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.03%)</title><rect x="87.1883%" y="325" width="0.0265%" height="15" fill="rgb(226,43,29)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.03%)</title><rect x="87.1883%" y="309" width="0.0265%" height="15" fill="rgb(249,228,39)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.03%)</title><rect x="87.1883%" y="293" width="0.0265%" height="15" fill="rgb(216,79,43)" fg:x="3287" fg:w="1"/><text x="87.4383%" y="303.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.03%)</title><rect x="87.2149%" y="373" width="0.0265%" height="15" fill="rgb(228,95,12)" fg:x="3288" fg:w="1"/><text x="87.4649%" y="383.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.11%)</title><rect x="87.1618%" y="389" width="0.1061%" height="15" fill="rgb(249,221,15)" fg:x="3286" fg:w="4"/><text x="87.4118%" y="399.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.03%)</title><rect x="87.2414%" y="373" width="0.0265%" height="15" fill="rgb(233,34,13)" fg:x="3289" fg:w="1"/><text x="87.4914%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (8 samples, 0.21%)</title><rect x="87.1088%" y="405" width="0.2122%" height="15" fill="rgb(214,103,39)" fg:x="3284" fg:w="8"/><text x="87.3588%" y="415.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_raw (2 samples, 0.05%)</title><rect x="87.2679%" y="389" width="0.0531%" height="15" fill="rgb(251,126,39)" fg:x="3290" fg:w="2"/><text x="87.5179%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (2 samples, 0.05%)</title><rect x="87.2679%" y="373" width="0.0531%" height="15" fill="rgb(214,216,36)" fg:x="3290" fg:w="2"/><text x="87.5179%" y="383.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume (2 samples, 0.05%)</title><rect x="87.3210%" y="405" width="0.0531%" height="15" fill="rgb(220,221,8)" fg:x="3292" fg:w="2"/><text x="87.5710%" y="415.50"></text></g><g><title>rnix::tokenizer::Tokenizer::str_since (1 samples, 0.03%)</title><rect x="87.3740%" y="405" width="0.0265%" height="15" fill="rgb(240,216,3)" fg:x="3294" fg:w="1"/><text x="87.6240%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="87.4271%" y="261" width="0.0265%" height="15" fill="rgb(232,218,17)" fg:x="3296" fg:w="1"/><text x="87.6771%" y="271.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="87.4271%" y="245" width="0.0265%" height="15" fill="rgb(229,163,45)" fg:x="3296" fg:w="1"/><text x="87.6771%" y="255.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (3 samples, 0.08%)</title><rect x="87.4005%" y="405" width="0.0796%" height="15" fill="rgb(231,110,42)" fg:x="3295" fg:w="3"/><text x="87.6505%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.4005%" y="389" width="0.0796%" height="15" fill="rgb(208,170,48)" fg:x="3295" fg:w="3"/><text x="87.6505%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.4005%" y="373" width="0.0796%" height="15" fill="rgb(239,116,25)" fg:x="3295" fg:w="3"/><text x="87.6505%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (3 samples, 0.08%)</title><rect x="87.4005%" y="357" width="0.0796%" height="15" fill="rgb(219,200,50)" fg:x="3295" fg:w="3"/><text x="87.6505%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (3 samples, 0.08%)</title><rect x="87.4005%" y="341" width="0.0796%" height="15" fill="rgb(245,200,0)" fg:x="3295" fg:w="3"/><text x="87.6505%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (2 samples, 0.05%)</title><rect x="87.4271%" y="325" width="0.0531%" height="15" fill="rgb(245,119,33)" fg:x="3296" fg:w="2"/><text x="87.6771%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (2 samples, 0.05%)</title><rect x="87.4271%" y="309" width="0.0531%" height="15" fill="rgb(231,125,12)" fg:x="3296" fg:w="2"/><text x="87.6771%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (2 samples, 0.05%)</title><rect x="87.4271%" y="293" width="0.0531%" height="15" fill="rgb(216,96,41)" fg:x="3296" fg:w="2"/><text x="87.6771%" y="303.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="87.4271%" y="277" width="0.0531%" height="15" fill="rgb(248,43,45)" fg:x="3296" fg:w="2"/><text x="87.6771%" y="287.50"></text></g><g><title>rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;H,[T]&gt;&gt;::from_thin (1 samples, 0.03%)</title><rect x="87.4536%" y="261" width="0.0265%" height="15" fill="rgb(217,222,7)" fg:x="3297" fg:w="1"/><text x="87.7036%" y="271.50"></text></g><g><title>rowan::cursor::NodeData::new (3 samples, 0.08%)</title><rect x="87.4801%" y="405" width="0.0796%" height="15" fill="rgb(233,28,6)" fg:x="3298" fg:w="3"/><text x="87.7301%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="87.4801%" y="389" width="0.0796%" height="15" fill="rgb(231,218,15)" fg:x="3298" fg:w="3"/><text x="87.7301%" y="399.50"></text></g><g><title>rowan::cursor::SyntaxNode::next_sibling (1 samples, 0.03%)</title><rect x="87.5597%" y="405" width="0.0265%" height="15" fill="rgb(226,171,48)" fg:x="3301" fg:w="1"/><text x="87.8097%" y="415.50"></text></g><g><title>rowan::cursor::NodeData::next_sibling (1 samples, 0.03%)</title><rect x="87.5597%" y="389" width="0.0265%" height="15" fill="rgb(235,201,9)" fg:x="3301" fg:w="1"/><text x="87.8097%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::nth (1 samples, 0.03%)</title><rect x="87.5597%" y="373" width="0.0265%" height="15" fill="rgb(217,80,15)" fg:x="3301" fg:w="1"/><text x="87.8097%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (1 samples, 0.03%)</title><rect x="87.5597%" y="357" width="0.0265%" height="15" fill="rgb(219,152,8)" fg:x="3301" fg:w="1"/><text x="87.8097%" y="367.50"></text></g><g><title>rowan::cursor::SyntaxNodeChildren::new (1 samples, 0.03%)</title><rect x="87.5862%" y="405" width="0.0265%" height="15" fill="rgb(243,107,38)" fg:x="3302" fg:w="1"/><text x="87.8362%" y="415.50"></text></g><g><title>rowan::cursor::free (1 samples, 0.03%)</title><rect x="87.6127%" y="405" width="0.0265%" height="15" fill="rgb(231,17,5)" fg:x="3303" fg:w="1"/><text x="87.8627%" y="415.50"></text></g><g><title>rowan::green::node::GreenNode::new (1 samples, 0.03%)</title><rect x="87.6393%" y="405" width="0.0265%" height="15" fill="rgb(209,25,54)" fg:x="3304" fg:w="1"/><text x="87.8893%" y="415.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (2 samples, 0.05%)</title><rect x="87.6658%" y="405" width="0.0531%" height="15" fill="rgb(219,0,2)" fg:x="3305" fg:w="2"/><text x="87.9158%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.03%)</title><rect x="87.6923%" y="389" width="0.0265%" height="15" fill="rgb(246,9,5)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="399.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.03%)</title><rect x="87.6923%" y="373" width="0.0265%" height="15" fill="rgb(226,159,4)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="87.6923%" y="357" width="0.0265%" height="15" fill="rgb(219,175,34)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.03%)</title><rect x="87.6923%" y="341" width="0.0265%" height="15" fill="rgb(236,10,46)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.03%)</title><rect x="87.6923%" y="325" width="0.0265%" height="15" fill="rgb(240,211,16)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="335.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (1 samples, 0.03%)</title><rect x="87.6923%" y="309" width="0.0265%" height="15" fill="rgb(205,3,43)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="319.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node::_{{closure}} (1 samples, 0.03%)</title><rect x="87.6923%" y="293" width="0.0265%" height="15" fill="rgb(245,7,22)" fg:x="3306" fg:w="1"/><text x="87.9423%" y="303.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token (2 samples, 0.05%)</title><rect x="87.7188%" y="405" width="0.0531%" height="15" fill="rgb(239,132,32)" fg:x="3307" fg:w="2"/><text x="87.9688%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.03%)</title><rect x="87.7454%" y="389" width="0.0265%" height="15" fill="rgb(228,202,34)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="399.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.03%)</title><rect x="87.7454%" y="373" width="0.0265%" height="15" fill="rgb(254,200,22)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="87.7454%" y="357" width="0.0265%" height="15" fill="rgb(219,10,39)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.03%)</title><rect x="87.7454%" y="341" width="0.0265%" height="15" fill="rgb(226,210,39)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.03%)</title><rect x="87.7454%" y="325" width="0.0265%" height="15" fill="rgb(208,219,16)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="335.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (1 samples, 0.03%)</title><rect x="87.7454%" y="309" width="0.0265%" height="15" fill="rgb(216,158,51)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="319.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token::_{{closure}} (1 samples, 0.03%)</title><rect x="87.7454%" y="293" width="0.0265%" height="15" fill="rgb(233,14,44)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="303.50"></text></g><g><title>&lt;rowan::green::SyntaxKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="87.7454%" y="277" width="0.0265%" height="15" fill="rgb(237,97,39)" fg:x="3308" fg:w="1"/><text x="87.9954%" y="287.50"></text></g><g><title>rustls_pki_types::pem::from_buf (1 samples, 0.03%)</title><rect x="87.7719%" y="405" width="0.0265%" height="15" fill="rgb(218,198,43)" fg:x="3309" fg:w="1"/><text x="88.0219%" y="415.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (3 samples, 0.08%)</title><rect x="87.7984%" y="405" width="0.0796%" height="15" fill="rgb(231,104,20)" fg:x="3310" fg:w="3"/><text x="88.0484%" y="415.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.05%)</title><rect x="87.8780%" y="405" width="0.0531%" height="15" fill="rgb(254,36,13)" fg:x="3313" fg:w="2"/><text x="88.1280%" y="415.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::init_with (1 samples, 0.03%)</title><rect x="87.9310%" y="405" width="0.0265%" height="15" fill="rgb(248,14,50)" fg:x="3315" fg:w="1"/><text x="88.1810%" y="415.50"></text></g><g><title>smol_str::Repr::new (1 samples, 0.03%)</title><rect x="87.9576%" y="405" width="0.0265%" height="15" fill="rgb(217,107,29)" fg:x="3316" fg:w="1"/><text x="88.2076%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.03%)</title><rect x="87.9576%" y="389" width="0.0265%" height="15" fill="rgb(251,169,33)" fg:x="3316" fg:w="1"/><text x="88.2076%" y="399.50"></text></g><g><title>snix_castore::import::fs::dir_entry_to_ingestion_entry::_{{closure}} (1 samples, 0.03%)</title><rect x="87.9841%" y="405" width="0.0265%" height="15" fill="rgb(217,108,32)" fg:x="3317" fg:w="1"/><text x="88.2341%" y="415.50"></text></g><g><title>std::path::Path::strip_prefix (1 samples, 0.03%)</title><rect x="87.9841%" y="389" width="0.0265%" height="15" fill="rgb(219,66,42)" fg:x="3317" fg:w="1"/><text x="88.2341%" y="399.50"></text></g><g><title>std::path::Path::_strip_prefix (1 samples, 0.03%)</title><rect x="87.9841%" y="373" width="0.0265%" height="15" fill="rgb(206,180,7)" fg:x="3317" fg:w="1"/><text x="88.2341%" y="383.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="87.9841%" y="357" width="0.0265%" height="15" fill="rgb(208,226,31)" fg:x="3317" fg:w="1"/><text x="88.2341%" y="367.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_attr_names::_{{closure}} (1 samples, 0.03%)</title><rect x="88.0106%" y="405" width="0.0265%" height="15" fill="rgb(218,26,49)" fg:x="3318" fg:w="1"/><text x="88.2606%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="88.0106%" y="389" width="0.0265%" height="15" fill="rgb(233,197,48)" fg:x="3318" fg:w="1"/><text x="88.2606%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="88.0106%" y="373" width="0.0265%" height="15" fill="rgb(252,181,51)" fg:x="3318" fg:w="1"/><text x="88.2606%" y="383.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_filter::_{{closure}} (1 samples, 0.03%)</title><rect x="88.0371%" y="405" width="0.0265%" height="15" fill="rgb(253,90,19)" fg:x="3319" fg:w="1"/><text x="88.2871%" y="415.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_intersect_attrs::_{{closure}} (1 samples, 0.03%)</title><rect x="88.0637%" y="405" width="0.0265%" height="15" fill="rgb(215,171,30)" fg:x="3320" fg:w="1"/><text x="88.3137%" y="415.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (1 samples, 0.03%)</title><rect x="88.0637%" y="389" width="0.0265%" height="15" fill="rgb(214,222,9)" fg:x="3320" fg:w="1"/><text x="88.3137%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (1 samples, 0.03%)</title><rect x="88.0637%" y="373" width="0.0265%" height="15" fill="rgb(223,3,22)" fg:x="3320" fg:w="1"/><text x="88.3137%" y="383.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtins::_{{closure}} (2 samples, 0.05%)</title><rect x="88.0902%" y="405" width="0.0531%" height="15" fill="rgb(225,196,46)" fg:x="3321" fg:w="2"/><text x="88.3402%" y="415.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (1 samples, 0.03%)</title><rect x="88.1167%" y="389" width="0.0265%" height="15" fill="rgb(209,110,37)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="399.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="88.1167%" y="373" width="0.0265%" height="15" fill="rgb(249,89,12)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="88.1167%" y="357" width="0.0265%" height="15" fill="rgb(226,27,33)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="88.1167%" y="341" width="0.0265%" height="15" fill="rgb(213,82,22)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="88.1167%" y="325" width="0.0265%" height="15" fill="rgb(248,140,0)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="88.1167%" y="309" width="0.0265%" height="15" fill="rgb(228,106,3)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="88.1167%" y="293" width="0.0265%" height="15" fill="rgb(209,23,37)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="88.1167%" y="277" width="0.0265%" height="15" fill="rgb(241,93,50)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="287.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="88.1167%" y="261" width="0.0265%" height="15" fill="rgb(253,46,43)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="271.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="88.1167%" y="245" width="0.0265%" height="15" fill="rgb(226,206,43)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="255.50"></text></g><g><title>mi_find_page (1 samples, 0.03%)</title><rect x="88.1167%" y="229" width="0.0265%" height="15" fill="rgb(217,54,7)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="239.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.03%)</title><rect x="88.1167%" y="213" width="0.0265%" height="15" fill="rgb(223,5,52)" fg:x="3322" fg:w="1"/><text x="88.3667%" y="223.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="88.2493%" y="389" width="0.0265%" height="15" fill="rgb(206,52,46)" fg:x="3327" fg:w="1"/><text x="88.4993%" y="399.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="88.2493%" y="373" width="0.0265%" height="15" fill="rgb(253,136,11)" fg:x="3327" fg:w="1"/><text x="88.4993%" y="383.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1 samples, 0.03%)</title><rect x="88.2493%" y="357" width="0.0265%" height="15" fill="rgb(208,106,33)" fg:x="3327" fg:w="1"/><text x="88.4993%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.05%)</title><rect x="88.2759%" y="389" width="0.0531%" height="15" fill="rgb(206,54,4)" fg:x="3328" fg:w="2"/><text x="88.5259%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="88.2759%" y="373" width="0.0531%" height="15" fill="rgb(213,3,15)" fg:x="3328" fg:w="2"/><text x="88.5259%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.05%)</title><rect x="88.2759%" y="357" width="0.0531%" height="15" fill="rgb(252,211,39)" fg:x="3328" fg:w="2"/><text x="88.5259%" y="367.50"></text></g><g><title>snix_eval::chunk::Chunk::read_uvarint (8 samples, 0.21%)</title><rect x="88.1432%" y="405" width="0.2122%" height="15" fill="rgb(223,6,36)" fg:x="3323" fg:w="8"/><text x="88.3932%" y="415.50"></text></g><g><title>vu128::decode_u64 (1 samples, 0.03%)</title><rect x="88.3289%" y="389" width="0.0265%" height="15" fill="rgb(252,169,45)" fg:x="3330" fg:w="1"/><text x="88.5789%" y="399.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (1 samples, 0.03%)</title><rect x="88.3554%" y="405" width="0.0265%" height="15" fill="rgb(212,48,26)" fg:x="3331" fg:w="1"/><text x="88.6054%" y="415.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_constant (2 samples, 0.05%)</title><rect x="88.3820%" y="405" width="0.0531%" height="15" fill="rgb(251,102,48)" fg:x="3332" fg:w="2"/><text x="88.6320%" y="415.50"></text></g><g><title>snix_eval::chunk::Chunk::push_constant (2 samples, 0.05%)</title><rect x="88.3820%" y="389" width="0.0531%" height="15" fill="rgb(243,208,16)" fg:x="3332" fg:w="2"/><text x="88.6320%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.05%)</title><rect x="88.3820%" y="373" width="0.0531%" height="15" fill="rgb(219,96,24)" fg:x="3332" fg:w="2"/><text x="88.6320%" y="383.50"></text></g><g><title>snix_eval::compiler::Compiler::new_context (2 samples, 0.05%)</title><rect x="88.4350%" y="405" width="0.0531%" height="15" fill="rgb(219,33,29)" fg:x="3334" fg:w="2"/><text x="88.6850%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.05%)</title><rect x="88.4350%" y="389" width="0.0531%" height="15" fill="rgb(223,176,5)" fg:x="3334" fg:w="2"/><text x="88.6850%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="88.4350%" y="373" width="0.0531%" height="15" fill="rgb(228,140,14)" fg:x="3334" fg:w="2"/><text x="88.6850%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.05%)</title><rect x="88.4350%" y="357" width="0.0531%" height="15" fill="rgb(217,179,31)" fg:x="3334" fg:w="2"/><text x="88.6850%" y="367.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::bind_values (1 samples, 0.03%)</title><rect x="88.4881%" y="405" width="0.0265%" height="15" fill="rgb(230,9,30)" fg:x="3336" fg:w="1"/><text x="88.7381%" y="415.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_constant (1 samples, 0.03%)</title><rect x="88.4881%" y="389" width="0.0265%" height="15" fill="rgb(230,136,20)" fg:x="3336" fg:w="1"/><text x="88.7381%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::push_constant (1 samples, 0.03%)</title><rect x="88.4881%" y="373" width="0.0265%" height="15" fill="rgb(215,210,22)" fg:x="3336" fg:w="1"/><text x="88.7381%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="88.4881%" y="357" width="0.0265%" height="15" fill="rgb(218,43,5)" fg:x="3336" fg:w="1"/><text x="88.7381%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="88.4881%" y="341" width="0.0265%" height="15" fill="rgb(216,11,5)" fg:x="3336" fg:w="1"/><text x="88.7381%" y="351.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::resolve_upvalue_for_use (1 samples, 0.03%)</title><rect x="88.5146%" y="405" width="0.0265%" height="15" fill="rgb(209,82,29)" fg:x="3337" fg:w="1"/><text x="88.7646%" y="415.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_constant (1 samples, 0.03%)</title><rect x="88.5146%" y="389" width="0.0265%" height="15" fill="rgb(244,115,12)" fg:x="3337" fg:w="1"/><text x="88.7646%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::push_constant (1 samples, 0.03%)</title><rect x="88.5146%" y="373" width="0.0265%" height="15" fill="rgb(222,82,18)" fg:x="3337" fg:w="1"/><text x="88.7646%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="88.5146%" y="357" width="0.0265%" height="15" fill="rgb(249,227,8)" fg:x="3337" fg:w="1"/><text x="88.7646%" y="367.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_execute_op (2 samples, 0.05%)</title><rect x="88.5411%" y="405" width="0.0531%" height="15" fill="rgb(253,141,45)" fg:x="3338" fg:w="2"/><text x="88.7911%" y="415.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_exit_generator (1 samples, 0.03%)</title><rect x="88.5942%" y="405" width="0.0265%" height="15" fill="rgb(234,184,4)" fg:x="3340" fg:w="1"/><text x="88.8442%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="88.6737%" y="373" width="0.0531%" height="15" fill="rgb(218,194,23)" fg:x="3343" fg:w="2"/><text x="88.9237%" y="383.50"></text></g><g><title>snix_eval::upvalues::Upvalues::push (7 samples, 0.19%)</title><rect x="88.6207%" y="405" width="0.1857%" height="15" fill="rgb(235,66,41)" fg:x="3341" fg:w="7"/><text x="88.8707%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.16%)</title><rect x="88.6472%" y="389" width="0.1592%" height="15" fill="rgb(245,217,1)" fg:x="3342" fg:w="6"/><text x="88.8972%" y="399.50"></text></g><g><title>core::ptr::write (3 samples, 0.08%)</title><rect x="88.7268%" y="373" width="0.0796%" height="15" fill="rgb(229,91,1)" fg:x="3345" fg:w="3"/><text x="88.9768%" y="383.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string::_{{closure}} (1 samples, 0.03%)</title><rect x="88.8064%" y="405" width="0.0265%" height="15" fill="rgb(207,101,30)" fg:x="3348" fg:w="1"/><text x="89.0564%" y="415.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string_::_{{closure}} (1 samples, 0.03%)</title><rect x="88.8064%" y="389" width="0.0265%" height="15" fill="rgb(223,82,49)" fg:x="3348" fg:w="1"/><text x="89.0564%" y="399.50"></text></g><g><title>snix_eval::value::Value::force::_{{closure}} (1 samples, 0.03%)</title><rect x="88.8329%" y="405" width="0.0265%" height="15" fill="rgb(218,167,17)" fg:x="3349" fg:w="1"/><text x="89.0829%" y="415.50"></text></g><g><title>snix_eval::value::Value::is_catchable (1 samples, 0.03%)</title><rect x="88.8594%" y="405" width="0.0265%" height="15" fill="rgb(208,103,14)" fg:x="3350" fg:w="1"/><text x="89.1094%" y="415.50"></text></g><g><title>snix_eval::value::Value::nix_eq::_{{closure}} (1 samples, 0.03%)</title><rect x="88.8859%" y="405" width="0.0265%" height="15" fill="rgb(238,20,8)" fg:x="3351" fg:w="1"/><text x="89.1359%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="88.8859%" y="389" width="0.0265%" height="15" fill="rgb(218,80,54)" fg:x="3351" fg:w="1"/><text x="89.1359%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="88.8859%" y="373" width="0.0265%" height="15" fill="rgb(240,144,17)" fg:x="3351" fg:w="1"/><text x="89.1359%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="88.8859%" y="357" width="0.0265%" height="15" fill="rgb(245,27,50)" fg:x="3351" fg:w="1"/><text x="89.1359%" y="367.50"></text></g><g><title>snix_eval::value::Value::to_list (1 samples, 0.03%)</title><rect x="88.9125%" y="405" width="0.0265%" height="15" fill="rgb(251,51,7)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="415.50"></text></g><g><title>&lt;snix_eval::value::list::NixList as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="88.9125%" y="389" width="0.0265%" height="15" fill="rgb(245,217,29)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="88.9125%" y="373" width="0.0265%" height="15" fill="rgb(221,176,29)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="383.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.03%)</title><rect x="88.9125%" y="357" width="0.0265%" height="15" fill="rgb(212,180,24)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="88.9125%" y="341" width="0.0265%" height="15" fill="rgb(254,24,2)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="88.9125%" y="325" width="0.0265%" height="15" fill="rgb(230,100,2)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="335.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="88.9125%" y="309" width="0.0265%" height="15" fill="rgb(219,142,25)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="88.9125%" y="293" width="0.0265%" height="15" fill="rgb(240,73,43)" fg:x="3352" fg:w="1"/><text x="89.1625%" y="303.50"></text></g><g><title>snix_eval::value::Value::to_str (1 samples, 0.03%)</title><rect x="88.9390%" y="405" width="0.0265%" height="15" fill="rgb(214,114,15)" fg:x="3353" fg:w="1"/><text x="89.1890%" y="415.50"></text></g><g><title>snix_eval::value::attrs::AttrsRep::select (3 samples, 0.08%)</title><rect x="88.9655%" y="405" width="0.0796%" height="15" fill="rgb(207,130,4)" fg:x="3354" fg:w="3"/><text x="89.2155%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="88.9920%" y="389" width="0.0531%" height="15" fill="rgb(221,25,40)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="88.9920%" y="373" width="0.0531%" height="15" fill="rgb(241,184,7)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="88.9920%" y="357" width="0.0531%" height="15" fill="rgb(235,159,4)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="88.9920%" y="341" width="0.0531%" height="15" fill="rgb(214,87,48)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="88.9920%" y="325" width="0.0531%" height="15" fill="rgb(246,198,24)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.05%)</title><rect x="88.9920%" y="309" width="0.0531%" height="15" fill="rgb(209,66,40)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.05%)</title><rect x="88.9920%" y="293" width="0.0531%" height="15" fill="rgb(233,147,39)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.05%)</title><rect x="88.9920%" y="277" width="0.0531%" height="15" fill="rgb(231,145,52)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="287.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.05%)</title><rect x="88.9920%" y="261" width="0.0531%" height="15" fill="rgb(206,20,26)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="271.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::borrow::Borrow&lt;bstr::bstr::BStr&gt;&gt;::borrow (2 samples, 0.05%)</title><rect x="88.9920%" y="245" width="0.0531%" height="15" fill="rgb(238,220,4)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="255.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (2 samples, 0.05%)</title><rect x="88.9920%" y="229" width="0.0531%" height="15" fill="rgb(252,195,42)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="239.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (2 samples, 0.05%)</title><rect x="88.9920%" y="213" width="0.0531%" height="15" fill="rgb(209,10,6)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="223.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (2 samples, 0.05%)</title><rect x="88.9920%" y="197" width="0.0531%" height="15" fill="rgb(229,3,52)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="207.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (2 samples, 0.05%)</title><rect x="88.9920%" y="181" width="0.0531%" height="15" fill="rgb(253,49,37)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="191.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (2 samples, 0.05%)</title><rect x="88.9920%" y="165" width="0.0531%" height="15" fill="rgb(240,103,49)" fg:x="3355" fg:w="2"/><text x="89.2420%" y="175.50"></text></g><g><title>snix_eval::value::builtin::Builtin::apply_arg (1 samples, 0.03%)</title><rect x="89.0451%" y="405" width="0.0265%" height="15" fill="rgb(250,182,30)" fg:x="3357" fg:w="1"/><text x="89.2951%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="89.0451%" y="389" width="0.0265%" height="15" fill="rgb(248,8,30)" fg:x="3357" fg:w="1"/><text x="89.2951%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="89.0451%" y="373" width="0.0265%" height="15" fill="rgb(237,120,30)" fg:x="3357" fg:w="1"/><text x="89.2951%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (2 samples, 0.05%)</title><rect x="89.0716%" y="373" width="0.0531%" height="15" fill="rgb(221,146,34)" fg:x="3358" fg:w="2"/><text x="89.3216%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="89.0716%" y="357" width="0.0531%" height="15" fill="rgb(242,55,13)" fg:x="3358" fg:w="2"/><text x="89.3216%" y="367.50"></text></g><g><title>snix_eval::value::function::Closure::upvalues (4 samples, 0.11%)</title><rect x="89.0716%" y="405" width="0.1061%" height="15" fill="rgb(242,112,31)" fg:x="3358" fg:w="4"/><text x="89.3216%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="89.0716%" y="389" width="0.1061%" height="15" fill="rgb(249,192,27)" fg:x="3358" fg:w="4"/><text x="89.3216%" y="399.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.05%)</title><rect x="89.1247%" y="373" width="0.0531%" height="15" fill="rgb(208,204,44)" fg:x="3360" fg:w="2"/><text x="89.3747%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.05%)</title><rect x="89.1247%" y="357" width="0.0531%" height="15" fill="rgb(208,93,54)" fg:x="3360" fg:w="2"/><text x="89.3747%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.05%)</title><rect x="89.1247%" y="341" width="0.0531%" height="15" fill="rgb(242,1,31)" fg:x="3360" fg:w="2"/><text x="89.3747%" y="351.50"></text></g><g><title>core::mem::replace (2 samples, 0.05%)</title><rect x="89.1247%" y="325" width="0.0531%" height="15" fill="rgb(241,83,25)" fg:x="3360" fg:w="2"/><text x="89.3747%" y="335.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="89.1247%" y="309" width="0.0531%" height="15" fill="rgb(205,169,50)" fg:x="3360" fg:w="2"/><text x="89.3747%" y="319.50"></text></g><g><title>snix_eval::value::string::NixString::new (1 samples, 0.03%)</title><rect x="89.1777%" y="405" width="0.0265%" height="15" fill="rgb(239,186,37)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="415.50"></text></g><g><title>snix_eval::value::string::NixString::new_inner (1 samples, 0.03%)</title><rect x="89.1777%" y="389" width="0.0265%" height="15" fill="rgb(205,221,10)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.03%)</title><rect x="89.1777%" y="373" width="0.0265%" height="15" fill="rgb(218,196,15)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="89.1777%" y="357" width="0.0265%" height="15" fill="rgb(218,196,35)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="367.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="89.1777%" y="341" width="0.0265%" height="15" fill="rgb(233,63,24)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="351.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="89.1777%" y="325" width="0.0265%" height="15" fill="rgb(225,8,4)" fg:x="3362" fg:w="1"/><text x="89.4277%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::try_unwrap (1 samples, 0.03%)</title><rect x="89.5756%" y="389" width="0.0265%" height="15" fill="rgb(234,105,35)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Weak&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="89.5756%" y="373" width="0.0265%" height="15" fill="rgb(236,21,32)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="383.50"></text></g><g><title>&lt;alloc::rc::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="89.5756%" y="357" width="0.0265%" height="15" fill="rgb(228,109,6)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="89.5756%" y="341" width="0.0265%" height="15" fill="rgb(229,215,31)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="89.5756%" y="325" width="0.0265%" height="15" fill="rgb(221,52,54)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="89.5756%" y="309" width="0.0265%" height="15" fill="rgb(252,129,43)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="319.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.03%)</title><rect x="89.5756%" y="293" width="0.0265%" height="15" fill="rgb(248,183,27)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="303.50"></text></g><g><title>_mi_segment_page_free (1 samples, 0.03%)</title><rect x="89.5756%" y="277" width="0.0265%" height="15" fill="rgb(250,0,22)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="287.50"></text></g><g><title>_mi_stat_decrease (1 samples, 0.03%)</title><rect x="89.5756%" y="261" width="0.0265%" height="15" fill="rgb(213,166,10)" fg:x="3377" fg:w="1"/><text x="89.8256%" y="271.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::replace (17 samples, 0.45%)</title><rect x="89.6021%" y="389" width="0.4509%" height="15" fill="rgb(207,163,36)" fg:x="3378" fg:w="17"/><text x="89.8521%" y="399.50"></text></g><g><title>core::mem::replace (17 samples, 0.45%)</title><rect x="89.6021%" y="373" width="0.4509%" height="15" fill="rgb(208,122,22)" fg:x="3378" fg:w="17"/><text x="89.8521%" y="383.50"></text></g><g><title>core::ptr::write (17 samples, 0.45%)</title><rect x="89.6021%" y="357" width="0.4509%" height="15" fill="rgb(207,104,49)" fg:x="3378" fg:w="17"/><text x="89.8521%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (1 samples, 0.03%)</title><rect x="90.0531%" y="389" width="0.0265%" height="15" fill="rgb(248,211,50)" fg:x="3395" fg:w="1"/><text x="90.3031%" y="399.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (1 samples, 0.03%)</title><rect x="90.0531%" y="373" width="0.0265%" height="15" fill="rgb(217,13,45)" fg:x="3395" fg:w="1"/><text x="90.3031%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::peek (1 samples, 0.03%)</title><rect x="90.4509%" y="357" width="0.0265%" height="15" fill="rgb(211,216,49)" fg:x="3410" fg:w="1"/><text x="90.7009%" y="367.50"></text></g><g><title>genawaiter::core::Next&lt;Y,R&gt;::without_values (1 samples, 0.03%)</title><rect x="90.4509%" y="341" width="0.0265%" height="15" fill="rgb(221,58,53)" fg:x="3410" fg:w="1"/><text x="90.7009%" y="351.50"></text></g><g><title>core::ptr::read (3 samples, 0.08%)</title><rect x="90.4775%" y="309" width="0.0796%" height="15" fill="rgb(220,112,41)" fg:x="3411" fg:w="3"/><text x="90.7275%" y="319.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (10 samples, 0.27%)</title><rect x="90.3183%" y="373" width="0.2653%" height="15" fill="rgb(236,38,28)" fg:x="3405" fg:w="10"/><text x="90.5683%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (4 samples, 0.11%)</title><rect x="90.4775%" y="357" width="0.1061%" height="15" fill="rgb(227,195,22)" fg:x="3411" fg:w="4"/><text x="90.7275%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.11%)</title><rect x="90.4775%" y="341" width="0.1061%" height="15" fill="rgb(214,55,33)" fg:x="3411" fg:w="4"/><text x="90.7275%" y="351.50"></text></g><g><title>core::mem::replace (4 samples, 0.11%)</title><rect x="90.4775%" y="325" width="0.1061%" height="15" fill="rgb(248,80,13)" fg:x="3411" fg:w="4"/><text x="90.7275%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="90.5570%" y="309" width="0.0265%" height="15" fill="rgb(238,52,6)" fg:x="3414" fg:w="1"/><text x="90.8070%" y="319.50"></text></g><g><title>core::ptr::read (2 samples, 0.05%)</title><rect x="90.5836%" y="309" width="0.0531%" height="15" fill="rgb(224,198,47)" fg:x="3415" fg:w="2"/><text x="90.8336%" y="319.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force_::_{{closure}} (55 samples, 1.46%)</title><rect x="89.2042%" y="405" width="1.4589%" height="15" fill="rgb(233,171,20)" fg:x="3363" fg:w="55"/><text x="89.4542%" y="415.50"></text></g><g><title>snix_eval::vm::generators::request_enter_lambda::_{{closure}} (22 samples, 0.58%)</title><rect x="90.0796%" y="389" width="0.5836%" height="15" fill="rgb(241,30,25)" fg:x="3396" fg:w="22"/><text x="90.3296%" y="399.50"></text></g><g><title>genawaiter::core::Co&lt;A&gt;::yield_ (3 samples, 0.08%)</title><rect x="90.5836%" y="373" width="0.0796%" height="15" fill="rgb(207,171,38)" fg:x="3415" fg:w="3"/><text x="90.8336%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (3 samples, 0.08%)</title><rect x="90.5836%" y="357" width="0.0796%" height="15" fill="rgb(234,70,1)" fg:x="3415" fg:w="3"/><text x="90.8336%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.08%)</title><rect x="90.5836%" y="341" width="0.0796%" height="15" fill="rgb(232,178,18)" fg:x="3415" fg:w="3"/><text x="90.8336%" y="351.50"></text></g><g><title>core::mem::replace (3 samples, 0.08%)</title><rect x="90.5836%" y="325" width="0.0796%" height="15" fill="rgb(241,78,40)" fg:x="3415" fg:w="3"/><text x="90.8336%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="90.6366%" y="309" width="0.0265%" height="15" fill="rgb(222,35,25)" fg:x="3417" fg:w="1"/><text x="90.8866%" y="319.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (24 samples, 0.64%)</title><rect x="90.6631%" y="389" width="0.6366%" height="15" fill="rgb(207,92,16)" fg:x="3418" fg:w="24"/><text x="90.9131%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.61%)</title><rect x="90.6897%" y="373" width="0.6101%" height="15" fill="rgb(216,59,51)" fg:x="3419" fg:w="23"/><text x="90.9397%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="91.2732%" y="357" width="0.0265%" height="15" fill="rgb(213,80,28)" fg:x="3441" fg:w="1"/><text x="91.5232%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="91.2732%" y="341" width="0.0265%" height="15" fill="rgb(220,93,7)" fg:x="3441" fg:w="1"/><text x="91.5232%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="91.2732%" y="325" width="0.0265%" height="15" fill="rgb(225,24,44)" fg:x="3441" fg:w="1"/><text x="91.5232%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="91.2732%" y="309" width="0.0265%" height="15" fill="rgb(243,74,40)" fg:x="3441" fg:w="1"/><text x="91.5232%" y="319.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="91.2732%" y="293" width="0.0265%" height="15" fill="rgb(228,39,7)" fg:x="3441" fg:w="1"/><text x="91.5232%" y="303.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended (25 samples, 0.66%)</title><rect x="90.6631%" y="405" width="0.6631%" height="15" fill="rgb(227,79,8)" fg:x="3418" fg:w="25"/><text x="90.9131%" y="415.50"></text></g><g><title>snix_eval::upvalues::Upvalues::with_capacity (1 samples, 0.03%)</title><rect x="91.2997%" y="389" width="0.0265%" height="15" fill="rgb(236,58,11)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="91.2997%" y="373" width="0.0265%" height="15" fill="rgb(249,63,35)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="91.2997%" y="357" width="0.0265%" height="15" fill="rgb(252,114,16)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="91.2997%" y="341" width="0.0265%" height="15" fill="rgb(254,151,24)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="91.2997%" y="325" width="0.0265%" height="15" fill="rgb(253,54,39)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="91.2997%" y="309" width="0.0265%" height="15" fill="rgb(243,25,45)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="91.2997%" y="293" width="0.0265%" height="15" fill="rgb(234,134,9)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="91.2997%" y="277" width="0.0265%" height="15" fill="rgb(227,166,31)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="91.2997%" y="261" width="0.0265%" height="15" fill="rgb(245,143,41)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="271.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="91.2997%" y="245" width="0.0265%" height="15" fill="rgb(238,181,32)" fg:x="3442" fg:w="1"/><text x="91.5497%" y="255.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended_call (7 samples, 0.19%)</title><rect x="91.3263%" y="405" width="0.1857%" height="15" fill="rgb(224,113,18)" fg:x="3443" fg:w="7"/><text x="91.5763%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (6 samples, 0.16%)</title><rect x="91.3528%" y="389" width="0.1592%" height="15" fill="rgb(240,229,28)" fg:x="3444" fg:w="6"/><text x="91.6028%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.13%)</title><rect x="91.3793%" y="373" width="0.1326%" height="15" fill="rgb(250,185,3)" fg:x="3445" fg:w="5"/><text x="91.6293%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.11%)</title><rect x="91.4058%" y="357" width="0.1061%" height="15" fill="rgb(212,59,25)" fg:x="3446" fg:w="4"/><text x="91.6558%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (3 samples, 0.08%)</title><rect x="91.5119%" y="405" width="0.0796%" height="15" fill="rgb(221,87,20)" fg:x="3450" fg:w="3"/><text x="91.7619%" y="415.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (3 samples, 0.08%)</title><rect x="91.5119%" y="389" width="0.0796%" height="15" fill="rgb(213,74,28)" fg:x="3450" fg:w="3"/><text x="91.7619%" y="399.50"></text></g><g><title>snix_eval::value::thunk::Thunk::unwrap_or_clone (1 samples, 0.03%)</title><rect x="91.5915%" y="405" width="0.0265%" height="15" fill="rgb(224,132,34)" fg:x="3453" fg:w="1"/><text x="91.8415%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="91.5915%" y="389" width="0.0265%" height="15" fill="rgb(222,101,24)" fg:x="3453" fg:w="1"/><text x="91.8415%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="91.5915%" y="373" width="0.0265%" height="15" fill="rgb(254,142,4)" fg:x="3453" fg:w="1"/><text x="91.8415%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="91.5915%" y="357" width="0.0265%" height="15" fill="rgb(230,229,49)" fg:x="3453" fg:w="1"/><text x="91.8415%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="91.5915%" y="341" width="0.0265%" height="15" fill="rgb(238,70,47)" fg:x="3453" fg:w="1"/><text x="91.8415%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="91.6180%" y="389" width="0.0265%" height="15" fill="rgb(231,160,17)" fg:x="3454" fg:w="1"/><text x="91.8680%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="91.6180%" y="373" width="0.0265%" height="15" fill="rgb(218,68,53)" fg:x="3454" fg:w="1"/><text x="91.8680%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="91.6180%" y="357" width="0.0265%" height="15" fill="rgb(236,111,10)" fg:x="3454" fg:w="1"/><text x="91.8680%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::upvalues_mut (2 samples, 0.05%)</title><rect x="91.6180%" y="405" width="0.0531%" height="15" fill="rgb(224,34,41)" fg:x="3454" fg:w="2"/><text x="91.8680%" y="415.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="91.6446%" y="389" width="0.0265%" height="15" fill="rgb(241,118,19)" fg:x="3455" fg:w="1"/><text x="91.8946%" y="399.50"></text></g><g><title>snix_eval::value::thunk::Thunk::upvalues_mut::_{{closure}} (1 samples, 0.03%)</title><rect x="91.6446%" y="373" width="0.0265%" height="15" fill="rgb(238,129,25)" fg:x="3455" fg:w="1"/><text x="91.8946%" y="383.50"></text></g><g><title>snix_eval::value::thunk::Thunk::value (1 samples, 0.03%)</title><rect x="91.6711%" y="405" width="0.0265%" height="15" fill="rgb(238,22,31)" fg:x="3456" fg:w="1"/><text x="91.9211%" y="415.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="91.6711%" y="389" width="0.0265%" height="15" fill="rgb(222,174,48)" fg:x="3456" fg:w="1"/><text x="91.9211%" y="399.50"></text></g><g><title>snix_eval::value::thunk::Thunk::value::_{{closure}} (1 samples, 0.03%)</title><rect x="91.6711%" y="373" width="0.0265%" height="15" fill="rgb(206,152,40)" fg:x="3456" fg:w="1"/><text x="91.9211%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="91.7772%" y="373" width="0.0265%" height="15" fill="rgb(218,99,54)" fg:x="3460" fg:w="1"/><text x="92.0272%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.03%)</title><rect x="91.7772%" y="357" width="0.0265%" height="15" fill="rgb(220,174,26)" fg:x="3460" fg:w="1"/><text x="92.0272%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="91.8037%" y="373" width="0.0265%" height="15" fill="rgb(245,116,9)" fg:x="3461" fg:w="1"/><text x="92.0537%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="91.8037%" y="357" width="0.0265%" height="15" fill="rgb(209,72,35)" fg:x="3461" fg:w="1"/><text x="92.0537%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="91.8037%" y="341" width="0.0265%" height="15" fill="rgb(226,126,21)" fg:x="3461" fg:w="1"/><text x="92.0537%" y="351.50"></text></g><g><title>snix_eval::chunk::Chunk::get_span (14 samples, 0.37%)</title><rect x="91.7241%" y="389" width="0.3714%" height="15" fill="rgb(227,192,1)" fg:x="3458" fg:w="14"/><text x="91.9741%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (10 samples, 0.27%)</title><rect x="91.8302%" y="373" width="0.2653%" height="15" fill="rgb(237,180,29)" fg:x="3462" fg:w="10"/><text x="92.0802%" y="383.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (8 samples, 0.21%)</title><rect x="91.8833%" y="357" width="0.2122%" height="15" fill="rgb(230,197,35)" fg:x="3464" fg:w="8"/><text x="92.1333%" y="367.50"></text></g><g><title>snix_eval::vm::CallFrame::current_span (16 samples, 0.42%)</title><rect x="91.6976%" y="405" width="0.4244%" height="15" fill="rgb(246,193,31)" fg:x="3457" fg:w="16"/><text x="91.9476%" y="415.50"></text></g><g><title>snix_eval::vm::CallFrame::chunk (1 samples, 0.03%)</title><rect x="92.0955%" y="389" width="0.0265%" height="15" fill="rgb(241,36,4)" fg:x="3472" fg:w="1"/><text x="92.3455%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="92.0955%" y="373" width="0.0265%" height="15" fill="rgb(241,130,17)" fg:x="3472" fg:w="1"/><text x="92.3455%" y="383.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="92.0955%" y="357" width="0.0265%" height="15" fill="rgb(206,137,32)" fg:x="3472" fg:w="1"/><text x="92.3455%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="92.0955%" y="341" width="0.0265%" height="15" fill="rgb(237,228,51)" fg:x="3472" fg:w="1"/><text x="92.3455%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.11%)</title><rect x="92.1751%" y="389" width="0.1061%" height="15" fill="rgb(243,6,42)" fg:x="3475" fg:w="4"/><text x="92.4251%" y="399.50"></text></g><g><title>&lt;snix_eval::opcode::Op as core::convert::From&lt;u8&gt;&gt;::from (4 samples, 0.11%)</title><rect x="92.1751%" y="373" width="0.1061%" height="15" fill="rgb(251,74,28)" fg:x="3475" fg:w="4"/><text x="92.4251%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="92.2812%" y="389" width="0.0265%" height="15" fill="rgb(218,20,49)" fg:x="3479" fg:w="1"/><text x="92.5312%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="92.2812%" y="373" width="0.0265%" height="15" fill="rgb(238,28,14)" fg:x="3479" fg:w="1"/><text x="92.5312%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="92.2812%" y="357" width="0.0265%" height="15" fill="rgb(229,40,46)" fg:x="3479" fg:w="1"/><text x="92.5312%" y="367.50"></text></g><g><title>snix_eval::vm::CallFrame::inc_ip (9 samples, 0.24%)</title><rect x="92.1220%" y="405" width="0.2387%" height="15" fill="rgb(244,195,20)" fg:x="3473" fg:w="9"/><text x="92.3720%" y="415.50"></text></g><g><title>&lt;snix_eval::opcode::CodeIdx as core::ops::arith::AddAssign&lt;usize&gt;&gt;::add_assign (2 samples, 0.05%)</title><rect x="92.3077%" y="389" width="0.0531%" height="15" fill="rgb(253,56,35)" fg:x="3480" fg:w="2"/><text x="92.5577%" y="399.50"></text></g><g><title>snix_eval::vm::CallFrame::read_uvarint (6 samples, 0.16%)</title><rect x="92.3607%" y="405" width="0.1592%" height="15" fill="rgb(210,149,44)" fg:x="3482" fg:w="6"/><text x="92.6107%" y="415.50"></text></g><g><title>snix_eval::vm::CallFrame::upvalue (1 samples, 0.03%)</title><rect x="92.5199%" y="405" width="0.0265%" height="15" fill="rgb(240,135,12)" fg:x="3488" fg:w="1"/><text x="92.7699%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="92.5199%" y="389" width="0.0265%" height="15" fill="rgb(251,24,50)" fg:x="3488" fg:w="1"/><text x="92.7699%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="92.5199%" y="373" width="0.0265%" height="15" fill="rgb(243,200,47)" fg:x="3488" fg:w="1"/><text x="92.7699%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="92.5199%" y="357" width="0.0265%" height="15" fill="rgb(224,166,26)" fg:x="3488" fg:w="1"/><text x="92.7699%" y="367.50"></text></g><g><title>snix_eval::vm::ImportCache::get (1 samples, 0.03%)</title><rect x="92.5464%" y="405" width="0.0265%" height="15" fill="rgb(233,0,47)" fg:x="3489" fg:w="1"/><text x="92.7964%" y="415.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.03%)</title><rect x="92.5464%" y="389" width="0.0265%" height="15" fill="rgb(253,80,5)" fg:x="3489" fg:w="1"/><text x="92.7964%" y="399.50"></text></g><g><title>std::sys::pal::unix::fs::canonicalize (1 samples, 0.03%)</title><rect x="92.5464%" y="373" width="0.0265%" height="15" fill="rgb(214,133,25)" fg:x="3489" fg:w="1"/><text x="92.7964%" y="383.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::call_builtin (1 samples, 0.03%)</title><rect x="92.5995%" y="389" width="0.0265%" height="15" fill="rgb(209,27,14)" fg:x="3491" fg:w="1"/><text x="92.8495%" y="399.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::call_value (4 samples, 0.11%)</title><rect x="92.5729%" y="405" width="0.1061%" height="15" fill="rgb(219,102,51)" fg:x="3490" fg:w="4"/><text x="92.8229%" y="415.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::push_call_frame (2 samples, 0.05%)</title><rect x="92.6260%" y="389" width="0.0531%" height="15" fill="rgb(237,18,16)" fg:x="3492" fg:w="2"/><text x="92.8760%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="92.6525%" y="373" width="0.0265%" height="15" fill="rgb(241,85,17)" fg:x="3493" fg:w="1"/><text x="92.9025%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="92.6525%" y="357" width="0.0265%" height="15" fill="rgb(236,90,42)" fg:x="3493" fg:w="1"/><text x="92.9025%" y="367.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (7 samples, 0.19%)</title><rect x="92.6790%" y="405" width="0.1857%" height="15" fill="rgb(249,57,21)" fg:x="3494" fg:w="7"/><text x="92.9290%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="92.8117%" y="389" width="0.0531%" height="15" fill="rgb(243,12,36)" fg:x="3499" fg:w="2"/><text x="93.0617%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2 samples, 0.05%)</title><rect x="92.8117%" y="373" width="0.0531%" height="15" fill="rgb(253,128,47)" fg:x="3499" fg:w="2"/><text x="93.0617%" y="383.50"></text></g><g><title>snix_eval::vm::generators::request_call::_{{closure}} (2 samples, 0.05%)</title><rect x="92.8647%" y="405" width="0.0531%" height="15" fill="rgb(207,33,20)" fg:x="3501" fg:w="2"/><text x="93.1147%" y="415.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="92.8647%" y="389" width="0.0531%" height="15" fill="rgb(233,215,35)" fg:x="3501" fg:w="2"/><text x="93.1147%" y="399.50"></text></g><g><title>snix_eval::vm::generators::request_call_with::_{{closure}} (4 samples, 0.11%)</title><rect x="92.9178%" y="405" width="0.1061%" height="15" fill="rgb(249,188,52)" fg:x="3503" fg:w="4"/><text x="93.1678%" y="415.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="93.0504%" y="389" width="0.0531%" height="15" fill="rgb(225,12,32)" fg:x="3508" fg:w="2"/><text x="93.3004%" y="399.50"></text></g><g><title>snix_eval::vm::generators::request_force::_{{closure}} (4 samples, 0.11%)</title><rect x="93.0239%" y="405" width="0.1061%" height="15" fill="rgb(247,98,14)" fg:x="3507" fg:w="4"/><text x="93.2739%" y="415.50"></text></g><g><title>genawaiter::core::Co&lt;A&gt;::yield_ (1 samples, 0.03%)</title><rect x="93.1034%" y="389" width="0.0265%" height="15" fill="rgb(247,219,48)" fg:x="3510" fg:w="1"/><text x="93.3534%" y="399.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.03%)</title><rect x="93.1034%" y="373" width="0.0265%" height="15" fill="rgb(253,60,48)" fg:x="3510" fg:w="1"/><text x="93.3534%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="93.1034%" y="357" width="0.0265%" height="15" fill="rgb(245,15,52)" fg:x="3510" fg:w="1"/><text x="93.3534%" y="367.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="93.1034%" y="341" width="0.0265%" height="15" fill="rgb(220,133,28)" fg:x="3510" fg:w="1"/><text x="93.3534%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="93.1034%" y="325" width="0.0265%" height="15" fill="rgb(217,180,4)" fg:x="3510" fg:w="1"/><text x="93.3534%" y="335.50"></text></g><g><title>snix_eval::vm::generators::request_span::_{{closure}} (1 samples, 0.03%)</title><rect x="93.1300%" y="405" width="0.0265%" height="15" fill="rgb(251,24,1)" fg:x="3511" fg:w="1"/><text x="93.3800%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::vm::generators::VMResponse&gt; (1 samples, 0.03%)</title><rect x="93.1300%" y="389" width="0.0265%" height="15" fill="rgb(212,185,49)" fg:x="3511" fg:w="1"/><text x="93.3800%" y="399.50"></text></g><g><title>snix_eval::vm::generators::request_string_coerce::_{{closure}} (1 samples, 0.03%)</title><rect x="93.1565%" y="405" width="0.0265%" height="15" fill="rgb(215,175,22)" fg:x="3512" fg:w="1"/><text x="93.4065%" y="415.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="93.1565%" y="389" width="0.0265%" height="15" fill="rgb(250,205,14)" fg:x="3512" fg:w="1"/><text x="93.4065%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="93.2626%" y="373" width="0.0265%" height="15" fill="rgb(225,211,22)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.03%)</title><rect x="93.2626%" y="357" width="0.0265%" height="15" fill="rgb(251,179,42)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.03%)</title><rect x="93.2626%" y="341" width="0.0265%" height="15" fill="rgb(208,216,51)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="93.2626%" y="325" width="0.0265%" height="15" fill="rgb(235,36,11)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1 samples, 0.03%)</title><rect x="93.2626%" y="309" width="0.0265%" height="15" fill="rgb(213,189,28)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1 samples, 0.03%)</title><rect x="93.2626%" y="293" width="0.0265%" height="15" fill="rgb(227,203,42)" fg:x="3516" fg:w="1"/><text x="93.5126%" y="303.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::resume_with (4 samples, 0.11%)</title><rect x="93.3422%" y="357" width="0.1061%" height="15" fill="rgb(244,72,36)" fg:x="3519" fg:w="4"/><text x="93.5922%" y="367.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (3 samples, 0.08%)</title><rect x="93.3687%" y="341" width="0.0796%" height="15" fill="rgb(213,53,17)" fg:x="3520" fg:w="3"/><text x="93.6187%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.08%)</title><rect x="93.3687%" y="325" width="0.0796%" height="15" fill="rgb(207,167,3)" fg:x="3520" fg:w="3"/><text x="93.6187%" y="335.50"></text></g><g><title>core::mem::replace (3 samples, 0.08%)</title><rect x="93.3687%" y="309" width="0.0796%" height="15" fill="rgb(216,98,30)" fg:x="3520" fg:w="3"/><text x="93.6187%" y="319.50"></text></g><g><title>core::ptr::read (3 samples, 0.08%)</title><rect x="93.3687%" y="293" width="0.0796%" height="15" fill="rgb(236,123,15)" fg:x="3520" fg:w="3"/><text x="93.6187%" y="303.50"></text></g><g><title>snix_eval::vm::run_lambda (11 samples, 0.29%)</title><rect x="93.1830%" y="405" width="0.2918%" height="15" fill="rgb(248,81,50)" fg:x="3513" fg:w="11"/><text x="93.4330%" y="415.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (11 samples, 0.29%)</title><rect x="93.1830%" y="389" width="0.2918%" height="15" fill="rgb(214,120,4)" fg:x="3513" fg:w="11"/><text x="93.4330%" y="399.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (7 samples, 0.19%)</title><rect x="93.2891%" y="373" width="0.1857%" height="15" fill="rgb(208,179,34)" fg:x="3517" fg:w="7"/><text x="93.5391%" y="383.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::stack_pop (1 samples, 0.03%)</title><rect x="93.4483%" y="357" width="0.0265%" height="15" fill="rgb(227,140,7)" fg:x="3523" fg:w="1"/><text x="93.6983%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.03%)</title><rect x="93.4483%" y="341" width="0.0265%" height="15" fill="rgb(214,22,6)" fg:x="3523" fg:w="1"/><text x="93.6983%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="93.4483%" y="325" width="0.0265%" height="15" fill="rgb(207,137,27)" fg:x="3523" fg:w="1"/><text x="93.6983%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="94.7745%" y="373" width="0.0531%" height="15" fill="rgb(210,8,46)" fg:x="3573" fg:w="2"/><text x="95.0245%" y="383.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait_timeout_while (52 samples, 1.38%)</title><rect x="93.4748%" y="405" width="1.3793%" height="15" fill="rgb(240,16,54)" fg:x="3524" fg:w="52"/><text x="93.7248%" y="415.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (39 samples, 1.03%)</title><rect x="93.8196%" y="389" width="1.0345%" height="15" fill="rgb(211,209,29)" fg:x="3537" fg:w="39"/><text x="94.0696%" y="399.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="94.8276%" y="373" width="0.0265%" height="15" fill="rgb(226,228,24)" fg:x="3575" fg:w="1"/><text x="95.0776%" y="383.50"></text></g><g><title>alloc::string::String::try_reserve (1 samples, 0.03%)</title><rect x="94.8541%" y="357" width="0.0265%" height="15" fill="rgb(222,84,9)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="367.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.03%)</title><rect x="94.8541%" y="341" width="0.0265%" height="15" fill="rgb(234,203,30)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="351.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="94.8541%" y="325" width="0.0265%" height="15" fill="rgb(238,109,14)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="335.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.03%)</title><rect x="94.8541%" y="309" width="0.0265%" height="15" fill="rgb(233,206,34)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="319.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.03%)</title><rect x="94.8541%" y="293" width="0.0265%" height="15" fill="rgb(220,167,47)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="303.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.03%)</title><rect x="94.8541%" y="277" width="0.0265%" height="15" fill="rgb(238,105,10)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="287.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.03%)</title><rect x="94.8541%" y="261" width="0.0265%" height="15" fill="rgb(213,227,17)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="271.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.03%)</title><rect x="94.8541%" y="245" width="0.0265%" height="15" fill="rgb(217,132,38)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="255.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.03%)</title><rect x="94.8541%" y="229" width="0.0265%" height="15" fill="rgb(242,146,4)" fg:x="3576" fg:w="1"/><text x="95.1041%" y="239.50"></text></g><g><title>std::sys::pal::unix::fs::canonicalize (2 samples, 0.05%)</title><rect x="94.8541%" y="405" width="0.0531%" height="15" fill="rgb(212,61,9)" fg:x="3576" fg:w="2"/><text x="95.1041%" y="415.50"></text></g><g><title>snix_eval::compiler::import::import_impl::_{{closure}} (2 samples, 0.05%)</title><rect x="94.8541%" y="389" width="0.0531%" height="15" fill="rgb(247,126,22)" fg:x="3576" fg:w="2"/><text x="95.1041%" y="399.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (2 samples, 0.05%)</title><rect x="94.8541%" y="373" width="0.0531%" height="15" fill="rgb(220,196,2)" fg:x="3576" fg:w="2"/><text x="95.1041%" y="383.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="94.8806%" y="357" width="0.0265%" height="15" fill="rgb(208,46,4)" fg:x="3577" fg:w="1"/><text x="95.1306%" y="367.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (2 samples, 0.05%)</title><rect x="94.9072%" y="405" width="0.0531%" height="15" fill="rgb(252,104,46)" fg:x="3578" fg:w="2"/><text x="95.1572%" y="415.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="94.9602%" y="389" width="0.0265%" height="15" fill="rgb(237,152,48)" fg:x="3580" fg:w="1"/><text x="95.2102%" y="399.50"></text></g><g><title>snix_castore::import::fs::upload_blob::_{{closure}} (1 samples, 0.03%)</title><rect x="94.9602%" y="373" width="0.0265%" height="15" fill="rgb(221,59,37)" fg:x="3580" fg:w="1"/><text x="95.2102%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="94.9602%" y="357" width="0.0265%" height="15" fill="rgb(209,202,51)" fg:x="3580" fg:w="1"/><text x="95.2102%" y="367.50"></text></g><g><title>thread_count (2 samples, 0.05%)</title><rect x="94.9602%" y="405" width="0.0531%" height="15" fill="rgb(228,81,30)" fg:x="3580" fg:w="2"/><text x="95.2102%" y="415.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward_with_ranker (1 samples, 0.03%)</title><rect x="94.9867%" y="389" width="0.0265%" height="15" fill="rgb(227,42,39)" fg:x="3581" fg:w="1"/><text x="95.2367%" y="399.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.03%)</title><rect x="95.0133%" y="405" width="0.0265%" height="15" fill="rgb(221,26,2)" fg:x="3582" fg:w="1"/><text x="95.2633%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.0133%" y="389" width="0.0265%" height="15" fill="rgb(254,61,31)" fg:x="3582" fg:w="1"/><text x="95.2633%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.03%)</title><rect x="95.0133%" y="373" width="0.0265%" height="15" fill="rgb(222,173,38)" fg:x="3582" fg:w="1"/><text x="95.2633%" y="383.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.03%)</title><rect x="95.0133%" y="357" width="0.0265%" height="15" fill="rgb(218,50,12)" fg:x="3582" fg:w="1"/><text x="95.2633%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="95.0663%" y="309" width="0.0531%" height="15" fill="rgb(223,88,40)" fg:x="3584" fg:w="2"/><text x="95.3163%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,snix_eval::errors::ErrorKind&gt; as snix_eval::vm::WithSpan&lt;T,S,IO&gt;&gt;::with_span (7 samples, 0.19%)</title><rect x="95.1194%" y="309" width="0.1857%" height="15" fill="rgb(237,54,19)" fg:x="3586" fg:w="7"/><text x="95.3694%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.16%)</title><rect x="95.3050%" y="309" width="0.1592%" height="15" fill="rgb(251,129,25)" fg:x="3593" fg:w="6"/><text x="95.5550%" y="319.50"></text></g><g><title>core::ptr::write (5 samples, 0.13%)</title><rect x="95.3316%" y="293" width="0.1326%" height="15" fill="rgb(238,97,19)" fg:x="3594" fg:w="5"/><text x="95.5816%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.4377%" y="277" width="0.0265%" height="15" fill="rgb(240,169,18)" fg:x="3598" fg:w="1"/><text x="95.6877%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.4377%" y="261" width="0.0265%" height="15" fill="rgb(230,187,49)" fg:x="3598" fg:w="1"/><text x="95.6877%" y="271.50"></text></g><g><title>tracing::span::Span::in_scope (25 samples, 0.66%)</title><rect x="95.0398%" y="405" width="0.6631%" height="15" fill="rgb(209,44,26)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="415.50"></text></g><g><title>snix_cli::evaluate::_{{closure}} (25 samples, 0.66%)</title><rect x="95.0398%" y="389" width="0.6631%" height="15" fill="rgb(244,0,6)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="399.50"></text></g><g><title>snix_eval::Evaluation&lt;IO&gt;::evaluate (25 samples, 0.66%)</title><rect x="95.0398%" y="373" width="0.6631%" height="15" fill="rgb(248,18,21)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="383.50"></text></g><g><title>snix_eval::vm::run_lambda (25 samples, 0.66%)</title><rect x="95.0398%" y="357" width="0.6631%" height="15" fill="rgb(245,180,19)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="367.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (25 samples, 0.66%)</title><rect x="95.0398%" y="341" width="0.6631%" height="15" fill="rgb(252,118,36)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="351.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (25 samples, 0.66%)</title><rect x="95.0398%" y="325" width="0.6631%" height="15" fill="rgb(210,224,19)" fg:x="3583" fg:w="25"/><text x="95.2898%" y="335.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::reenqueue_generator (9 samples, 0.24%)</title><rect x="95.4642%" y="309" width="0.2387%" height="15" fill="rgb(218,30,24)" fg:x="3599" fg:w="9"/><text x="95.7142%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.24%)</title><rect x="95.4642%" y="293" width="0.2387%" height="15" fill="rgb(219,75,50)" fg:x="3599" fg:w="9"/><text x="95.7142%" y="303.50"></text></g><g><title>core::ptr::write (8 samples, 0.21%)</title><rect x="95.4907%" y="277" width="0.2122%" height="15" fill="rgb(234,72,50)" fg:x="3600" fg:w="8"/><text x="95.7407%" y="287.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.03%)</title><rect x="95.7029%" y="405" width="0.0265%" height="15" fill="rgb(219,100,48)" fg:x="3608" fg:w="1"/><text x="95.9529%" y="415.50"></text></g><g><title>tracing_indicatif::IndicatifSpanContext::add_keys_to_style (2 samples, 0.05%)</title><rect x="95.7294%" y="405" width="0.0531%" height="15" fill="rgb(253,5,41)" fg:x="3609" fg:w="2"/><text x="95.9794%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="95.7560%" y="389" width="0.0265%" height="15" fill="rgb(247,181,11)" fg:x="3610" fg:w="1"/><text x="96.0060%" y="399.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.05%)</title><rect x="95.7825%" y="405" width="0.0531%" height="15" fill="rgb(222,223,25)" fg:x="3611" fg:w="2"/><text x="96.0325%" y="415.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.03%)</title><rect x="95.8355%" y="405" width="0.0265%" height="15" fill="rgb(214,198,28)" fg:x="3613" fg:w="1"/><text x="96.0855%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="95.8355%" y="389" width="0.0265%" height="15" fill="rgb(230,46,43)" fg:x="3613" fg:w="1"/><text x="96.0855%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.03%)</title><rect x="95.8355%" y="373" width="0.0265%" height="15" fill="rgb(233,65,53)" fg:x="3613" fg:w="1"/><text x="96.0855%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="95.8355%" y="357" width="0.0265%" height="15" fill="rgb(221,121,27)" fg:x="3613" fg:w="1"/><text x="96.0855%" y="367.50"></text></g><g><title>snix (3,615 samples, 95.89%)</title><rect x="0.0000%" y="421" width="95.8886%" height="15" fill="rgb(247,70,47)" fg:x="0" fg:w="3615"/><text x="0.2500%" y="431.50">snix</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::insert (1 samples, 0.03%)</title><rect x="95.8621%" y="405" width="0.0265%" height="15" fill="rgb(228,85,35)" fg:x="3614" fg:w="1"/><text x="96.1121%" y="415.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.8621%" y="389" width="0.0265%" height="15" fill="rgb(209,50,18)" fg:x="3614" fg:w="1"/><text x="96.1121%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="95.8886%" y="373" width="0.0265%" height="15" fill="rgb(250,19,35)" fg:x="3615" fg:w="1"/><text x="96.1386%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::fs::File&gt;&gt; (1 samples, 0.03%)</title><rect x="95.8886%" y="357" width="0.0265%" height="15" fill="rgb(253,107,29)" fg:x="3615" fg:w="1"/><text x="96.1386%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.8886%" y="341" width="0.0265%" height="15" fill="rgb(252,179,29)" fg:x="3615" fg:w="1"/><text x="96.1386%" y="351.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs9try_statx17h4bba52956b2dfc8aE.llvm.18021593140882497897 (1 samples, 0.03%)</title><rect x="95.9151%" y="357" width="0.0265%" height="15" fill="rgb(238,194,6)" fg:x="3616" fg:w="1"/><text x="96.1651%" y="367.50"></text></g><g><title>tokio::fs::file::File::metadata::_{{closure}}::_{{closure}} (3 samples, 0.08%)</title><rect x="95.8886%" y="389" width="0.0796%" height="15" fill="rgb(238,164,29)" fg:x="3615" fg:w="3"/><text x="96.1386%" y="399.50"></text></g><g><title>std::fs::File::metadata (2 samples, 0.05%)</title><rect x="95.9151%" y="373" width="0.0531%" height="15" fill="rgb(224,25,9)" fg:x="3616" fg:w="2"/><text x="96.1651%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.03%)</title><rect x="95.9416%" y="357" width="0.0265%" height="15" fill="rgb(244,153,23)" fg:x="3617" fg:w="1"/><text x="96.1916%" y="367.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.21%)</title><rect x="95.8886%" y="405" width="0.2122%" height="15" fill="rgb(212,203,14)" fg:x="3615" fg:w="8"/><text x="96.1386%" y="415.50"></text></g><g><title>tokio::fs::file::File::open::_{{closure}}::_{{closure}} (5 samples, 0.13%)</title><rect x="95.9682%" y="389" width="0.1326%" height="15" fill="rgb(220,164,20)" fg:x="3618" fg:w="5"/><text x="96.2182%" y="399.50"></text></g><g><title>std::fs::File::open (5 samples, 0.13%)</title><rect x="95.9682%" y="373" width="0.1326%" height="15" fill="rgb(222,203,48)" fg:x="3618" fg:w="5"/><text x="96.2182%" y="383.50"></text></g><g><title>std::fs::OpenOptions::open (5 samples, 0.13%)</title><rect x="95.9682%" y="357" width="0.1326%" height="15" fill="rgb(215,159,22)" fg:x="3618" fg:w="5"/><text x="96.2182%" y="367.50"></text></g><g><title>std::fs::OpenOptions::_open (5 samples, 0.13%)</title><rect x="95.9682%" y="341" width="0.1326%" height="15" fill="rgb(216,183,47)" fg:x="3618" fg:w="5"/><text x="96.2182%" y="351.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (2 samples, 0.05%)</title><rect x="96.0477%" y="325" width="0.0531%" height="15" fill="rgb(229,195,25)" fg:x="3621" fg:w="2"/><text x="96.2977%" y="335.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="96.1273%" y="389" width="0.0265%" height="15" fill="rgb(224,132,51)" fg:x="3624" fg:w="1"/><text x="96.3773%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.1538%" y="389" width="0.0265%" height="15" fill="rgb(240,63,7)" fg:x="3625" fg:w="1"/><text x="96.4038%" y="399.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="96.1538%" y="373" width="0.0265%" height="15" fill="rgb(249,182,41)" fg:x="3625" fg:w="1"/><text x="96.4038%" y="383.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner6unpark17ha2552ce2e6e2653aE.llvm.12783554947409113215 (1 samples, 0.03%)</title><rect x="96.1804%" y="389" width="0.0265%" height="15" fill="rgb(243,47,26)" fg:x="3626" fg:w="1"/><text x="96.4304%" y="399.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hfc2e3cc1020d0995E.llvm.2901099113519762900 (2 samples, 0.05%)</title><rect x="96.2069%" y="389" width="0.0531%" height="15" fill="rgb(233,48,2)" fg:x="3627" fg:w="2"/><text x="96.4569%" y="399.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="96.2599%" y="389" width="0.0265%" height="15" fill="rgb(244,165,34)" fg:x="3629" fg:w="1"/><text x="96.5099%" y="399.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (3 samples, 0.08%)</title><rect x="96.2865%" y="389" width="0.0796%" height="15" fill="rgb(207,89,7)" fg:x="3630" fg:w="3"/><text x="96.5365%" y="399.50"></text></g><g><title>tokio::runtime::context::current::&lt;impl tokio::runtime::context::Context&gt;::set_current (1 samples, 0.03%)</title><rect x="96.3660%" y="389" width="0.0265%" height="15" fill="rgb(244,117,36)" fg:x="3633" fg:w="1"/><text x="96.6160%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.32%)</title><rect x="96.1008%" y="405" width="0.3183%" height="15" fill="rgb(226,144,34)" fg:x="3623" fg:w="12"/><text x="96.3508%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1 samples, 0.03%)</title><rect x="96.3926%" y="389" width="0.0265%" height="15" fill="rgb(213,23,19)" fg:x="3634" fg:w="1"/><text x="96.6426%" y="399.50"></text></g><g><title>mi_segment_alloc (1 samples, 0.03%)</title><rect x="96.4191%" y="309" width="0.0265%" height="15" fill="rgb(217,75,12)" fg:x="3635" fg:w="1"/><text x="96.6691%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4cab1235388af426E.llvm.10308337726731465238 (2 samples, 0.05%)</title><rect x="96.4191%" y="405" width="0.0531%" height="15" fill="rgb(224,159,17)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.05%)</title><rect x="96.4191%" y="389" width="0.0531%" height="15" fill="rgb(217,118,1)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="399.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.05%)</title><rect x="96.4191%" y="373" width="0.0531%" height="15" fill="rgb(232,180,48)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="383.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.05%)</title><rect x="96.4191%" y="357" width="0.0531%" height="15" fill="rgb(230,27,33)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="367.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.05%)</title><rect x="96.4191%" y="341" width="0.0531%" height="15" fill="rgb(205,31,21)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="351.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (2 samples, 0.05%)</title><rect x="96.4191%" y="325" width="0.0531%" height="15" fill="rgb(253,59,4)" fg:x="3635" fg:w="2"/><text x="96.6691%" y="335.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.03%)</title><rect x="96.4456%" y="309" width="0.0265%" height="15" fill="rgb(224,201,9)" fg:x="3636" fg:w="1"/><text x="96.6956%" y="319.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner6unpark17ha2552ce2e6e2653aE.llvm.12783554947409113215 (2 samples, 0.05%)</title><rect x="96.4721%" y="405" width="0.0531%" height="15" fill="rgb(229,206,30)" fg:x="3637" fg:w="2"/><text x="96.7221%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.7905%" y="373" width="0.0265%" height="15" fill="rgb(212,67,47)" fg:x="3649" fg:w="1"/><text x="97.0405%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.7905%" y="357" width="0.0265%" height="15" fill="rgb(211,96,50)" fg:x="3649" fg:w="1"/><text x="97.0405%" y="367.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.05%)</title><rect x="96.8170%" y="373" width="0.0531%" height="15" fill="rgb(252,114,18)" fg:x="3650" fg:w="2"/><text x="97.0670%" y="383.50"></text></g><g><title>std::sys::thread_local::guard::key::enable::run (1 samples, 0.03%)</title><rect x="96.8435%" y="357" width="0.0265%" height="15" fill="rgb(223,58,37)" fg:x="3651" fg:w="1"/><text x="97.0935%" y="367.50"></text></g><g><title>__call_tls_dtors (4 samples, 0.11%)</title><rect x="96.8700%" y="373" width="0.1061%" height="15" fill="rgb(237,70,4)" fg:x="3652" fg:w="4"/><text x="97.1200%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="96.9496%" y="357" width="0.0265%" height="15" fill="rgb(244,85,46)" fg:x="3655" fg:w="1"/><text x="97.1996%" y="367.50"></text></g><g><title>__set_vma_name (1 samples, 0.03%)</title><rect x="96.9761%" y="373" width="0.0265%" height="15" fill="rgb(223,39,52)" fg:x="3656" fg:w="1"/><text x="97.2261%" y="383.50"></text></g><g><title>name_stack_maps (11 samples, 0.29%)</title><rect x="97.0027%" y="373" width="0.2918%" height="15" fill="rgb(218,200,14)" fg:x="3657" fg:w="11"/><text x="97.2527%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.11%)</title><rect x="97.1883%" y="357" width="0.1061%" height="15" fill="rgb(208,171,16)" fg:x="3664" fg:w="4"/><text x="97.4383%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="97.2679%" y="341" width="0.0265%" height="15" fill="rgb(234,200,18)" fg:x="3667" fg:w="1"/><text x="97.5179%" y="351.50"></text></g><g><title>__GI___clone3 (30 samples, 0.80%)</title><rect x="96.5252%" y="405" width="0.7958%" height="15" fill="rgb(228,45,11)" fg:x="3639" fg:w="30"/><text x="96.7752%" y="415.50"></text></g><g><title>start_thread (30 samples, 0.80%)</title><rect x="96.5252%" y="389" width="0.7958%" height="15" fill="rgb(237,182,11)" fg:x="3639" fg:w="30"/><text x="96.7752%" y="399.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="97.2944%" y="373" width="0.0265%" height="15" fill="rgb(241,175,49)" fg:x="3668" fg:w="1"/><text x="97.5444%" y="383.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="97.3210%" y="405" width="0.0265%" height="15" fill="rgb(247,38,35)" fg:x="3669" fg:w="1"/><text x="97.5710%" y="415.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.03%)</title><rect x="97.3210%" y="389" width="0.0265%" height="15" fill="rgb(228,39,49)" fg:x="3669" fg:w="1"/><text x="97.5710%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="97.3475%" y="405" width="0.0265%" height="15" fill="rgb(226,101,26)" fg:x="3670" fg:w="1"/><text x="97.5975%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Context&gt; (1 samples, 0.03%)</title><rect x="97.3740%" y="405" width="0.0265%" height="15" fill="rgb(206,141,19)" fg:x="3671" fg:w="1"/><text x="97.6240%" y="415.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (2 samples, 0.05%)</title><rect x="97.4005%" y="405" width="0.0531%" height="15" fill="rgb(211,200,13)" fg:x="3672" fg:w="2"/><text x="97.6505%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.05%)</title><rect x="97.4005%" y="389" width="0.0531%" height="15" fill="rgb(241,121,6)" fg:x="3672" fg:w="2"/><text x="97.6505%" y="399.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.03%)</title><rect x="97.4271%" y="373" width="0.0265%" height="15" fill="rgb(234,221,29)" fg:x="3673" fg:w="1"/><text x="97.6771%" y="383.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="97.4271%" y="357" width="0.0265%" height="15" fill="rgb(229,136,5)" fg:x="3673" fg:w="1"/><text x="97.6771%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (4 samples, 0.11%)</title><rect x="97.4536%" y="405" width="0.1061%" height="15" fill="rgb(238,36,11)" fg:x="3674" fg:w="4"/><text x="97.7036%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (1 samples, 0.03%)</title><rect x="97.5597%" y="405" width="0.0265%" height="15" fill="rgb(251,55,41)" fg:x="3678" fg:w="1"/><text x="97.8097%" y="415.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.03%)</title><rect x="97.5862%" y="405" width="0.0265%" height="15" fill="rgb(242,34,40)" fg:x="3679" fg:w="1"/><text x="97.8362%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="98.3024%" y="373" width="0.0265%" height="15" fill="rgb(215,42,17)" fg:x="3706" fg:w="1"/><text x="98.5524%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.03%)</title><rect x="98.3024%" y="357" width="0.0265%" height="15" fill="rgb(207,44,46)" fg:x="3706" fg:w="1"/><text x="98.5524%" y="367.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="98.3024%" y="341" width="0.0265%" height="15" fill="rgb(211,206,28)" fg:x="3706" fg:w="1"/><text x="98.5524%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="98.3024%" y="325" width="0.0265%" height="15" fill="rgb(237,167,16)" fg:x="3706" fg:w="1"/><text x="98.5524%" y="335.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (14 samples, 0.37%)</title><rect x="97.9841%" y="389" width="0.3714%" height="15" fill="rgb(233,66,6)" fg:x="3694" fg:w="14"/><text x="98.2341%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.03%)</title><rect x="98.3289%" y="373" width="0.0265%" height="15" fill="rgb(246,123,29)" fg:x="3707" fg:w="1"/><text x="98.5789%" y="383.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (35 samples, 0.93%)</title><rect x="97.6127%" y="405" width="0.9284%" height="15" fill="rgb(209,62,40)" fg:x="3680" fg:w="35"/><text x="97.8627%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (7 samples, 0.19%)</title><rect x="98.3554%" y="389" width="0.1857%" height="15" fill="rgb(218,4,25)" fg:x="3708" fg:w="7"/><text x="98.6054%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (9 samples, 0.24%)</title><rect x="98.5411%" y="373" width="0.2387%" height="15" fill="rgb(253,91,49)" fg:x="3715" fg:w="9"/><text x="98.7911%" y="383.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (10 samples, 0.27%)</title><rect x="98.5411%" y="405" width="0.2653%" height="15" fill="rgb(228,155,29)" fg:x="3715" fg:w="10"/><text x="98.7911%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (10 samples, 0.27%)</title><rect x="98.5411%" y="389" width="0.2653%" height="15" fill="rgb(243,57,37)" fg:x="3715" fg:w="10"/><text x="98.7911%" y="399.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="98.7798%" y="373" width="0.0265%" height="15" fill="rgb(244,167,17)" fg:x="3724" fg:w="1"/><text x="99.0298%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.16%)</title><rect x="98.9655%" y="389" width="0.1592%" height="15" fill="rgb(207,181,38)" fg:x="3731" fg:w="6"/><text x="99.2155%" y="399.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (6 samples, 0.16%)</title><rect x="98.9655%" y="373" width="0.1592%" height="15" fill="rgb(211,8,23)" fg:x="3731" fg:w="6"/><text x="99.2155%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (19 samples, 0.50%)</title><rect x="98.8064%" y="405" width="0.5040%" height="15" fill="rgb(235,11,44)" fg:x="3725" fg:w="19"/><text x="99.0564%" y="415.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (7 samples, 0.19%)</title><rect x="99.1247%" y="389" width="0.1857%" height="15" fill="rgb(248,18,52)" fg:x="3737" fg:w="7"/><text x="99.3747%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (5 samples, 0.13%)</title><rect x="99.3103%" y="405" width="0.1326%" height="15" fill="rgb(208,4,7)" fg:x="3744" fg:w="5"/><text x="99.5603%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.4164%" y="389" width="0.0265%" height="15" fill="rgb(240,17,39)" fg:x="3748" fg:w="1"/><text x="99.6664%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (8 samples, 0.21%)</title><rect x="99.4430%" y="405" width="0.2122%" height="15" fill="rgb(207,170,3)" fg:x="3749" fg:w="8"/><text x="99.6930%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.03%)</title><rect x="99.6286%" y="389" width="0.0265%" height="15" fill="rgb(236,100,52)" fg:x="3756" fg:w="1"/><text x="99.8786%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.03%)</title><rect x="99.6552%" y="405" width="0.0265%" height="15" fill="rgb(246,78,51)" fg:x="3757" fg:w="1"/><text x="99.9052%" y="415.50"></text></g><g><title>tokio::loom::std::rand::seed (1 samples, 0.03%)</title><rect x="99.6552%" y="389" width="0.0265%" height="15" fill="rgb(211,17,15)" fg:x="3757" fg:w="1"/><text x="99.9052%" y="399.50"></text></g><g><title>std::sys::random::linux::hashmap_random_keys (1 samples, 0.03%)</title><rect x="99.6552%" y="373" width="0.0265%" height="15" fill="rgb(209,59,46)" fg:x="3757" fg:w="1"/><text x="99.9052%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.03%)</title><rect x="99.6817%" y="405" width="0.0265%" height="15" fill="rgb(210,92,25)" fg:x="3758" fg:w="1"/><text x="99.9317%" y="415.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.05%)</title><rect x="99.7082%" y="405" width="0.0531%" height="15" fill="rgb(238,174,52)" fg:x="3759" fg:w="2"/><text x="99.9582%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.08%)</title><rect x="99.7613%" y="405" width="0.0796%" height="15" fill="rgb(230,73,7)" fg:x="3761" fg:w="3"/><text x="100.0113%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.05%)</title><rect x="99.7878%" y="389" width="0.0531%" height="15" fill="rgb(243,124,40)" fg:x="3762" fg:w="2"/><text x="100.0378%" y="399.50"></text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.11%)</title><rect x="99.8408%" y="405" width="0.1061%" height="15" fill="rgb(244,170,11)" fg:x="3764" fg:w="4"/><text x="100.0908%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.03%)</title><rect x="99.9469%" y="405" width="0.0265%" height="15" fill="rgb(207,114,54)" fg:x="3768" fg:w="1"/><text x="100.1969%" y="415.50"></text></g><g><title>all (3,770 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(205,42,20)" fg:x="0" fg:w="3770"/><text x="0.2500%" y="447.50"></text></g><g><title>tokio-runtime-w (155 samples, 4.11%)</title><rect x="95.8886%" y="421" width="4.1114%" height="15" fill="rgb(230,30,28)" fg:x="3615" fg:w="155"/><text x="96.1386%" y="431.50">toki..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.03%)</title><rect x="99.9735%" y="405" width="0.0265%" height="15" fill="rgb(205,73,54)" fg:x="3769" fg:w="1"/><text x="100.2235%" y="415.50"></text></g></svg></svg>