<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="5124"><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.04%)</title><rect x="0.0000%" y="373" width="0.0390%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="0.0195%" y="357" width="0.0195%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2695%" y="367.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.02%)</title><rect x="0.0195%" y="341" width="0.0195%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2695%" y="351.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="0.0195%" y="325" width="0.0195%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2695%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="0.0390%" y="373" width="0.0195%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2890%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="0.0390%" y="357" width="0.0195%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2890%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="0.0390%" y="341" width="0.0195%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2890%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.0390%" y="325" width="0.0195%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2890%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="0.0390%" y="309" width="0.0195%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2890%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0390%" y="293" width="0.0195%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.2890%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="0.0390%" y="277" width="0.0195%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.2890%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0781%" y="309" width="0.0195%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="0.3281%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0781%" y="293" width="0.0195%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.3281%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0781%" y="277" width="0.0195%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.3281%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="0.0781%" y="261" width="0.0195%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.3281%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.08%)</title><rect x="0.0585%" y="373" width="0.0781%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="4"/><text x="0.3085%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="0.0781%" y="357" width="0.0585%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="3"/><text x="0.3281%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="0.0781%" y="341" width="0.0585%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="3"/><text x="0.3281%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="0.0781%" y="325" width="0.0585%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="3"/><text x="0.3281%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.04%)</title><rect x="0.0976%" y="309" width="0.0390%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="2"/><text x="0.3476%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.1366%" y="373" width="0.0195%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.3866%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.1366%" y="357" width="0.0195%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.3866%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.1366%" y="341" width="0.0195%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="0.3866%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="0.1366%" y="325" width="0.0195%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.3866%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.1366%" y="309" width="0.0195%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.3866%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="0.1366%" y="293" width="0.0195%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.3866%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="0.1366%" y="277" width="0.0195%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.3866%" y="287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.02%)</title><rect x="0.1366%" y="261" width="0.0195%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.3866%" y="271.50"></text></g><g><title>nix_compat::store_path::StorePath&lt;S&gt;::to_absolute_path (1 samples, 0.02%)</title><rect x="0.1366%" y="245" width="0.0195%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.3866%" y="255.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="0.1366%" y="229" width="0.0195%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.3866%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.02%)</title><rect x="0.1366%" y="213" width="0.0195%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.3866%" y="223.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1366%" y="197" width="0.0195%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.3866%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="0.1366%" y="181" width="0.0195%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.3866%" y="191.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.1561%" y="373" width="0.0195%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="0.4061%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(u64,rowan::utility_types::NodeOrToken&lt;rowan::green::node::GreenNode,rowan::green::token::GreenToken&gt;)]&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="357" width="0.0195%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.4061%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,rowan::utility_types::NodeOrToken&lt;rowan::green::node::GreenNode,rowan::green::token::GreenToken&gt;)&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="341" width="0.0195%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.4061%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::utility_types::NodeOrToken&lt;rowan::green::node::GreenNode,rowan::green::token::GreenToken&gt;&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="325" width="0.0195%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="0.4061%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="309" width="0.0195%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="0.4061%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="293" width="0.0195%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="0.4061%" y="303.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.1561%" y="277" width="0.0195%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="0.4061%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.1561%" y="261" width="0.0195%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="0.4061%" y="271.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.1561%" y="245" width="0.0195%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="0.4061%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.1756%" y="373" width="0.0195%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="0.4256%" y="383.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.02%)</title><rect x="0.1952%" y="373" width="0.0195%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="0.4452%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (1 samples, 0.02%)</title><rect x="0.2147%" y="357" width="0.0195%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="1"/><text x="0.4647%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="0.2147%" y="341" width="0.0195%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="1"/><text x="0.4647%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="0.2147%" y="325" width="0.0195%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="1"/><text x="0.4647%" y="335.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::advance_by (2 samples, 0.04%)</title><rect x="0.2147%" y="373" width="0.0390%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="2"/><text x="0.4647%" y="383.50"></text></g><g><title>core::str::validations::utf8_char_width (1 samples, 0.02%)</title><rect x="0.2342%" y="357" width="0.0195%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="1"/><text x="0.4842%" y="367.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.02%)</title><rect x="0.2927%" y="357" width="0.0195%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="0.5427%" y="367.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.14%)</title><rect x="0.2537%" y="373" width="0.1366%" height="15" fill="rgb(225,35,8)" fg:x="13" fg:w="7"/><text x="0.5037%" y="383.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4 samples, 0.08%)</title><rect x="0.3123%" y="357" width="0.0781%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="4"/><text x="0.5623%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.3708%" y="341" width="0.0195%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="1"/><text x="0.6208%" y="351.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.02%)</title><rect x="0.3903%" y="373" width="0.0195%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="1"/><text x="0.6403%" y="383.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (1 samples, 0.02%)</title><rect x="0.3903%" y="357" width="0.0195%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="1"/><text x="0.6403%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="0.3903%" y="341" width="0.0195%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="1"/><text x="0.6403%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="0.3903%" y="325" width="0.0195%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="1"/><text x="0.6403%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.04%)</title><rect x="0.4098%" y="373" width="0.0390%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="2"/><text x="0.6598%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.04%)</title><rect x="0.4098%" y="357" width="0.0390%" height="15" fill="rgb(209,12,38)" fg:x="21" fg:w="2"/><text x="0.6598%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="0.4098%" y="341" width="0.0390%" height="15" fill="rgb(227,1,9)" fg:x="21" fg:w="2"/><text x="0.6598%" y="351.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="0.4098%" y="325" width="0.0390%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="2"/><text x="0.6598%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.04%)</title><rect x="0.4098%" y="309" width="0.0390%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="2"/><text x="0.6598%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.4294%" y="293" width="0.0195%" height="15" fill="rgb(210,229,1)" fg:x="22" fg:w="1"/><text x="0.6794%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.4294%" y="277" width="0.0195%" height="15" fill="rgb(222,148,37)" fg:x="22" fg:w="1"/><text x="0.6794%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.6440%" y="325" width="0.0195%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="1"/><text x="0.8940%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="0.6440%" y="309" width="0.0195%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="1"/><text x="0.8940%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="0.6440%" y="293" width="0.0195%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="1"/><text x="0.8940%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="0.6440%" y="277" width="0.0195%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="1"/><text x="0.8940%" y="287.50"></text></g><g><title>core::clone::Clone::clone (17 samples, 0.33%)</title><rect x="0.6635%" y="325" width="0.3318%" height="15" fill="rgb(246,177,23)" fg:x="34" fg:w="17"/><text x="0.9135%" y="335.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (15 samples, 0.29%)</title><rect x="0.7026%" y="309" width="0.2927%" height="15" fill="rgb(230,62,27)" fg:x="36" fg:w="15"/><text x="0.9526%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.33%)</title><rect x="0.9953%" y="325" width="0.3318%" height="15" fill="rgb(216,154,8)" fg:x="51" fg:w="17"/><text x="1.2453%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.33%)</title><rect x="0.9953%" y="309" width="0.3318%" height="15" fill="rgb(244,35,45)" fg:x="51" fg:w="17"/><text x="1.2453%" y="319.50"></text></g><g><title>core::ptr::write (17 samples, 0.33%)</title><rect x="0.9953%" y="293" width="0.3318%" height="15" fill="rgb(251,115,12)" fg:x="51" fg:w="17"/><text x="1.2453%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.3076%" y="277" width="0.0195%" height="15" fill="rgb(240,54,50)" fg:x="67" fg:w="1"/><text x="1.5576%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.92%)</title><rect x="0.4489%" y="373" width="0.9173%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="47"/><text x="0.6989%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (46 samples, 0.90%)</title><rect x="0.4684%" y="357" width="0.8977%" height="15" fill="rgb(207,117,47)" fg:x="24" fg:w="46"/><text x="0.7184%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (46 samples, 0.90%)</title><rect x="0.4684%" y="341" width="0.8977%" height="15" fill="rgb(249,43,39)" fg:x="24" fg:w="46"/><text x="0.7184%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (2 samples, 0.04%)</title><rect x="1.3271%" y="325" width="0.0390%" height="15" fill="rgb(209,38,44)" fg:x="68" fg:w="2"/><text x="1.5771%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (2 samples, 0.04%)</title><rect x="1.3271%" y="309" width="0.0390%" height="15" fill="rgb(236,212,23)" fg:x="68" fg:w="2"/><text x="1.5771%" y="319.50"></text></g><g><title>hashbrown::raw::offset_from (2 samples, 0.04%)</title><rect x="1.3271%" y="293" width="0.0390%" height="15" fill="rgb(242,79,21)" fg:x="68" fg:w="2"/><text x="1.5771%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (2 samples, 0.04%)</title><rect x="1.3271%" y="277" width="0.0390%" height="15" fill="rgb(211,96,35)" fg:x="68" fg:w="2"/><text x="1.5771%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.3661%" y="373" width="0.0195%" height="15" fill="rgb(253,215,40)" fg:x="70" fg:w="1"/><text x="1.6161%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.02%)</title><rect x="1.3661%" y="357" width="0.0195%" height="15" fill="rgb(211,81,21)" fg:x="70" fg:w="1"/><text x="1.6161%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.02%)</title><rect x="1.3661%" y="341" width="0.0195%" height="15" fill="rgb(208,190,38)" fg:x="70" fg:w="1"/><text x="1.6161%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.02%)</title><rect x="1.3661%" y="325" width="0.0195%" height="15" fill="rgb(235,213,38)" fg:x="70" fg:w="1"/><text x="1.6161%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="1.3661%" y="309" width="0.0195%" height="15" fill="rgb(237,122,38)" fg:x="70" fg:w="1"/><text x="1.6161%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(snix_eval::value::string::NixString,snix_eval::value::Value)&gt; (1 samples, 0.02%)</title><rect x="1.3661%" y="293" width="0.0195%" height="15" fill="rgb(244,218,35)" fg:x="70" fg:w="1"/><text x="1.6161%" y="303.50"></text></g><g><title>&lt;indicatif::format::BinaryBytes as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="1.3856%" y="373" width="0.0195%" height="15" fill="rgb(240,68,47)" fg:x="71" fg:w="1"/><text x="1.6356%" y="383.50"></text></g><g><title>&lt;indicatif::format::HumanDuration as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="1.4052%" y="373" width="0.0195%" height="15" fill="rgb(210,16,53)" fg:x="72" fg:w="1"/><text x="1.6552%" y="383.50"></text></g><g><title>&lt;indicatif::style::BarDisplay as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="1.4247%" y="373" width="0.0195%" height="15" fill="rgb(235,124,12)" fg:x="73" fg:w="1"/><text x="1.6747%" y="383.50"></text></g><g><title>&lt;indicatif::style::TabRewriter as core::fmt::Write&gt;::write_str (3 samples, 0.06%)</title><rect x="1.4442%" y="373" width="0.0585%" height="15" fill="rgb(224,169,11)" fg:x="74" fg:w="3"/><text x="1.6942%" y="383.50"></text></g><g><title>&lt;rnix::ast::nodes::Attr as rowan::ast::AstNode&gt;::cast (1 samples, 0.02%)</title><rect x="1.5027%" y="373" width="0.0195%" height="15" fill="rgb(250,166,2)" fg:x="77" fg:w="1"/><text x="1.7527%" y="383.50"></text></g><g><title>&lt;rnix::ast::nodes::Str as snix_eval::spans::ToSpan&gt;::span_for (1 samples, 0.02%)</title><rect x="1.5222%" y="373" width="0.0195%" height="15" fill="rgb(242,216,29)" fg:x="78" fg:w="1"/><text x="1.7722%" y="383.50"></text></g><g><title>&lt;rowan::api::SyntaxNode&lt;rnix::NixLanguage&gt; as snix_eval::spans::ToSpan&gt;::span_for (1 samples, 0.02%)</title><rect x="1.5222%" y="357" width="0.0195%" height="15" fill="rgb(230,116,27)" fg:x="78" fg:w="1"/><text x="1.7722%" y="367.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::text_range (1 samples, 0.02%)</title><rect x="1.5222%" y="341" width="0.0195%" height="15" fill="rgb(228,99,48)" fg:x="78" fg:w="1"/><text x="1.7722%" y="351.50"></text></g><g><title>rowan::cursor::SyntaxNode::text_range (1 samples, 0.02%)</title><rect x="1.5222%" y="325" width="0.0195%" height="15" fill="rgb(253,11,6)" fg:x="78" fg:w="1"/><text x="1.7722%" y="335.50"></text></g><g><title>rowan::cursor::SyntaxNode::data (1 samples, 0.02%)</title><rect x="1.5222%" y="309" width="0.0195%" height="15" fill="rgb(247,143,39)" fg:x="78" fg:w="1"/><text x="1.7722%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="1.5222%" y="293" width="0.0195%" height="15" fill="rgb(236,97,10)" fg:x="78" fg:w="1"/><text x="1.7722%" y="303.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="1.5418%" y="373" width="0.0390%" height="15" fill="rgb(233,208,19)" fg:x="79" fg:w="2"/><text x="1.7918%" y="383.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.02%)</title><rect x="1.5613%" y="357" width="0.0195%" height="15" fill="rgb(216,164,2)" fg:x="80" fg:w="1"/><text x="1.8113%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (1 samples, 0.02%)</title><rect x="1.5613%" y="341" width="0.0195%" height="15" fill="rgb(220,129,5)" fg:x="80" fg:w="1"/><text x="1.8113%" y="351.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5808%" y="373" width="0.0195%" height="15" fill="rgb(242,17,10)" fg:x="81" fg:w="1"/><text x="1.8308%" y="383.50"></text></g><g><title>&lt;rowan::cursor::SyntaxElementChildren as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.6003%" y="373" width="0.0195%" height="15" fill="rgb(242,107,0)" fg:x="82" fg:w="1"/><text x="1.8503%" y="383.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.6198%" y="373" width="0.0195%" height="15" fill="rgb(251,28,31)" fg:x="83" fg:w="1"/><text x="1.8698%" y="383.50"></text></g><g><title>&lt;snix_castore::directoryservice::simple_putter::SimplePutter&lt;DS&gt; as snix_castore::directoryservice::DirectoryPutter&gt;::close::_{{closure}}::_{{closure}}::__CALLSITE::META (1 samples, 0.02%)</title><rect x="1.6393%" y="373" width="0.0195%" height="15" fill="rgb(233,223,10)" fg:x="84" fg:w="1"/><text x="1.8893%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.02%)</title><rect x="1.6393%" y="357" width="0.0195%" height="15" fill="rgb(215,21,27)" fg:x="84" fg:w="1"/><text x="1.8893%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="1.6589%" y="357" width="0.0195%" height="15" fill="rgb(232,23,21)" fg:x="85" fg:w="1"/><text x="1.9089%" y="367.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as std::os::unix::ffi::os_str::OsStringExt&gt;::into_vec (1 samples, 0.02%)</title><rect x="1.6784%" y="357" width="0.0195%" height="15" fill="rgb(244,5,23)" fg:x="86" fg:w="1"/><text x="1.9284%" y="367.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as std::sys_common::IntoInner&lt;std::sys::os_str::bytes::Buf&gt;&gt;::into_inner (1 samples, 0.02%)</title><rect x="1.6784%" y="341" width="0.0195%" height="15" fill="rgb(226,81,46)" fg:x="86" fg:w="1"/><text x="1.9284%" y="351.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.6979%" y="341" width="0.0195%" height="15" fill="rgb(247,70,30)" fg:x="87" fg:w="1"/><text x="1.9479%" y="351.50"></text></g><g><title>mi_heap_malloc_aligned_at (1 samples, 0.02%)</title><rect x="1.6979%" y="325" width="0.0195%" height="15" fill="rgb(212,68,19)" fg:x="87" fg:w="1"/><text x="1.9479%" y="335.50"></text></g><g><title>&lt;snix_eval::io::StdIO as snix_eval::io::EvalIO&gt;::read_dir (4 samples, 0.08%)</title><rect x="1.6589%" y="373" width="0.0781%" height="15" fill="rgb(240,187,13)" fg:x="85" fg:w="4"/><text x="1.9089%" y="383.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="1.6979%" y="357" width="0.0390%" height="15" fill="rgb(223,113,26)" fg:x="87" fg:w="2"/><text x="1.9479%" y="367.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.02%)</title><rect x="1.7174%" y="341" width="0.0195%" height="15" fill="rgb(206,192,2)" fg:x="88" fg:w="1"/><text x="1.9674%" y="351.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (7 samples, 0.14%)</title><rect x="1.7369%" y="373" width="0.1366%" height="15" fill="rgb(241,108,4)" fg:x="89" fg:w="7"/><text x="1.9869%" y="383.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::clone::Clone&gt;::clone (8 samples, 0.16%)</title><rect x="1.8735%" y="373" width="0.1561%" height="15" fill="rgb(247,173,49)" fg:x="96" fg:w="8"/><text x="2.1235%" y="383.50"></text></g><g><title>snix_eval::value::string::NixString::context (4 samples, 0.08%)</title><rect x="1.9516%" y="357" width="0.0781%" height="15" fill="rgb(224,114,35)" fg:x="100" fg:w="4"/><text x="2.2016%" y="367.50"></text></g><g><title>&lt;snix_glue::snix_store_io::SnixStoreIO as snix_eval::io::EvalIO&gt;::import_path (1 samples, 0.02%)</title><rect x="2.0297%" y="373" width="0.0195%" height="15" fill="rgb(245,159,27)" fg:x="104" fg:w="1"/><text x="2.2797%" y="383.50"></text></g><g><title>&lt;snix_glue::snix_store_io::SnixStoreIO as snix_eval::io::EvalIO&gt;::import_path::_{{closure}} (1 samples, 0.02%)</title><rect x="2.0297%" y="357" width="0.0195%" height="15" fill="rgb(245,172,44)" fg:x="104" fg:w="1"/><text x="2.2797%" y="367.50"></text></g><g><title>snix_store::import::path_to_name (1 samples, 0.02%)</title><rect x="2.0297%" y="341" width="0.0195%" height="15" fill="rgb(236,23,11)" fg:x="104" fg:w="1"/><text x="2.2797%" y="351.50"></text></g><g><title>std::path::Path::file_name (1 samples, 0.02%)</title><rect x="2.0297%" y="325" width="0.0195%" height="15" fill="rgb(205,117,38)" fg:x="104" fg:w="1"/><text x="2.2797%" y="335.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="2.0297%" y="309" width="0.0195%" height="15" fill="rgb(237,72,25)" fg:x="104" fg:w="1"/><text x="2.2797%" y="319.50"></text></g><g><title>&lt;snix_store::nar::renderer::SimpleRenderer&lt;BS,DS&gt; as snix_store::nar::NarCalculationService&gt;::calculate_nar (1 samples, 0.02%)</title><rect x="2.0492%" y="373" width="0.0195%" height="15" fill="rgb(244,70,9)" fg:x="105" fg:w="1"/><text x="2.2992%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="2.0492%" y="357" width="0.0195%" height="15" fill="rgb(217,125,39)" fg:x="105" fg:w="1"/><text x="2.2992%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="2.0492%" y="341" width="0.0195%" height="15" fill="rgb(235,36,10)" fg:x="105" fg:w="1"/><text x="2.2992%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="2.0492%" y="325" width="0.0195%" height="15" fill="rgb(251,123,47)" fg:x="105" fg:w="1"/><text x="2.2992%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="2.0492%" y="309" width="0.0195%" height="15" fill="rgb(221,13,13)" fg:x="105" fg:w="1"/><text x="2.2992%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.0492%" y="293" width="0.0195%" height="15" fill="rgb(238,131,9)" fg:x="105" fg:w="1"/><text x="2.2992%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.0492%" y="277" width="0.0195%" height="15" fill="rgb(211,50,8)" fg:x="105" fg:w="1"/><text x="2.2992%" y="287.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="2.0492%" y="261" width="0.0195%" height="15" fill="rgb(245,182,24)" fg:x="105" fg:w="1"/><text x="2.2992%" y="271.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="2.0492%" y="245" width="0.0195%" height="15" fill="rgb(242,14,37)" fg:x="105" fg:w="1"/><text x="2.2992%" y="255.50"></text></g><g><title>_mi_heap_delayed_free_partial (1 samples, 0.02%)</title><rect x="2.0492%" y="229" width="0.0195%" height="15" fill="rgb(246,228,12)" fg:x="105" fg:w="1"/><text x="2.2992%" y="239.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.02%)</title><rect x="2.0687%" y="373" width="0.0195%" height="15" fill="rgb(213,55,15)" fg:x="106" fg:w="1"/><text x="2.3187%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="2.0687%" y="357" width="0.0195%" height="15" fill="rgb(209,9,3)" fg:x="106" fg:w="1"/><text x="2.3187%" y="367.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.0882%" y="373" width="0.0195%" height="15" fill="rgb(230,59,30)" fg:x="107" fg:w="1"/><text x="2.3382%" y="383.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="2.1077%" y="373" width="0.0195%" height="15" fill="rgb(209,121,21)" fg:x="108" fg:w="1"/><text x="2.3577%" y="383.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.02%)</title><rect x="2.1077%" y="357" width="0.0195%" height="15" fill="rgb(220,109,13)" fg:x="108" fg:w="1"/><text x="2.3577%" y="367.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.02%)</title><rect x="2.1077%" y="341" width="0.0195%" height="15" fill="rgb(232,18,1)" fg:x="108" fg:w="1"/><text x="2.3577%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.02%)</title><rect x="2.1272%" y="373" width="0.0195%" height="15" fill="rgb(215,41,42)" fg:x="109" fg:w="1"/><text x="2.3772%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.02%)</title><rect x="2.1468%" y="373" width="0.0195%" height="15" fill="rgb(224,123,36)" fg:x="110" fg:w="1"/><text x="2.3968%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.02%)</title><rect x="2.1663%" y="373" width="0.0195%" height="15" fill="rgb(240,125,3)" fg:x="111" fg:w="1"/><text x="2.4163%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.02%)</title><rect x="2.1858%" y="373" width="0.0195%" height="15" fill="rgb(205,98,50)" fg:x="112" fg:w="1"/><text x="2.4358%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.02%)</title><rect x="2.2053%" y="373" width="0.0195%" height="15" fill="rgb(205,185,37)" fg:x="113" fg:w="1"/><text x="2.4553%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.02%)</title><rect x="2.2248%" y="373" width="0.0195%" height="15" fill="rgb(238,207,15)" fg:x="114" fg:w="1"/><text x="2.4748%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.02%)</title><rect x="2.2443%" y="373" width="0.0195%" height="15" fill="rgb(213,199,42)" fg:x="115" fg:w="1"/><text x="2.4943%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.02%)</title><rect x="2.2639%" y="373" width="0.0195%" height="15" fill="rgb(235,201,11)" fg:x="116" fg:w="1"/><text x="2.5139%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.02%)</title><rect x="2.2834%" y="373" width="0.0195%" height="15" fill="rgb(207,46,11)" fg:x="117" fg:w="1"/><text x="2.5334%" y="383.50"></text></g><g><title>__GI___nptl_deallocate_stack (1 samples, 0.02%)</title><rect x="2.3419%" y="309" width="0.0195%" height="15" fill="rgb(241,35,35)" fg:x="120" fg:w="1"/><text x="2.5919%" y="319.50"></text></g><g><title>BLAKE3_IV_3 (4 samples, 0.08%)</title><rect x="2.3029%" y="373" width="0.0781%" height="15" fill="rgb(243,32,47)" fg:x="118" fg:w="4"/><text x="2.5529%" y="383.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (4 samples, 0.08%)</title><rect x="2.3029%" y="357" width="0.0781%" height="15" fill="rgb(247,202,23)" fg:x="118" fg:w="4"/><text x="2.5529%" y="367.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (4 samples, 0.08%)</title><rect x="2.3029%" y="341" width="0.0781%" height="15" fill="rgb(219,102,11)" fg:x="118" fg:w="4"/><text x="2.5529%" y="351.50"></text></g><g><title>__pthread_clockjoin_ex (4 samples, 0.08%)</title><rect x="2.3029%" y="325" width="0.0781%" height="15" fill="rgb(243,110,44)" fg:x="118" fg:w="4"/><text x="2.5529%" y="335.50"></text></g><g><title>__futex_abstimed_wait_common (1 samples, 0.02%)</title><rect x="2.3614%" y="309" width="0.0195%" height="15" fill="rgb(222,74,54)" fg:x="121" fg:w="1"/><text x="2.6114%" y="319.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="2.3614%" y="293" width="0.0195%" height="15" fill="rgb(216,99,12)" fg:x="121" fg:w="1"/><text x="2.6114%" y="303.50"></text></g><g><title>&lt;indicatif::format::HumanDuration as core::fmt::Display&gt;::fmt (3 samples, 0.06%)</title><rect x="2.3810%" y="357" width="0.0585%" height="15" fill="rgb(226,22,26)" fg:x="122" fg:w="3"/><text x="2.6310%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="2.4200%" y="341" width="0.0195%" height="15" fill="rgb(217,163,10)" fg:x="124" fg:w="1"/><text x="2.6700%" y="351.50"></text></g><g><title>_ZN4core3fmt3num3imp23_$LT$impl$u20$usize$GT$4_fmt17h2781f2bd1aefa981E.llvm.736632125571485628 (1 samples, 0.02%)</title><rect x="2.4200%" y="325" width="0.0195%" height="15" fill="rgb(213,25,53)" fg:x="124" fg:w="1"/><text x="2.6700%" y="335.50"></text></g><g><title>[snix] (3 samples, 0.06%)</title><rect x="2.4395%" y="357" width="0.0585%" height="15" fill="rgb(252,105,26)" fg:x="125" fg:w="3"/><text x="2.6895%" y="367.50"></text></g><g><title>&lt;indicatif::format::DecimalBytes as core::fmt::Display&gt;::fmt (3 samples, 0.06%)</title><rect x="2.4395%" y="341" width="0.0585%" height="15" fill="rgb(220,39,43)" fg:x="125" fg:w="3"/><text x="2.6895%" y="351.50"></text></g><g><title>core::fmt::write (3 samples, 0.06%)</title><rect x="2.4395%" y="325" width="0.0585%" height="15" fill="rgb(229,68,48)" fg:x="125" fg:w="3"/><text x="2.6895%" y="335.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (2 samples, 0.04%)</title><rect x="2.4590%" y="309" width="0.0390%" height="15" fill="rgb(252,8,32)" fg:x="126" fg:w="2"/><text x="2.7090%" y="319.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (2 samples, 0.04%)</title><rect x="2.4590%" y="293" width="0.0390%" height="15" fill="rgb(223,20,43)" fg:x="126" fg:w="2"/><text x="2.7090%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="2.4980%" y="357" width="0.0195%" height="15" fill="rgb(229,81,49)" fg:x="128" fg:w="1"/><text x="2.7480%" y="367.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.02%)</title><rect x="2.4980%" y="341" width="0.0195%" height="15" fill="rgb(236,28,36)" fg:x="128" fg:w="1"/><text x="2.7480%" y="351.50"></text></g><g><title>&lt;rowan::green::SyntaxKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="2.5176%" y="229" width="0.0195%" height="15" fill="rgb(249,185,26)" fg:x="129" fg:w="1"/><text x="2.7676%" y="239.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token (2 samples, 0.04%)</title><rect x="2.5176%" y="357" width="0.0390%" height="15" fill="rgb(249,174,33)" fg:x="129" fg:w="2"/><text x="2.7676%" y="367.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (2 samples, 0.04%)</title><rect x="2.5176%" y="341" width="0.0390%" height="15" fill="rgb(233,201,37)" fg:x="129" fg:w="2"/><text x="2.7676%" y="351.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (2 samples, 0.04%)</title><rect x="2.5176%" y="325" width="0.0390%" height="15" fill="rgb(221,78,26)" fg:x="129" fg:w="2"/><text x="2.7676%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="2.5176%" y="309" width="0.0390%" height="15" fill="rgb(250,127,30)" fg:x="129" fg:w="2"/><text x="2.7676%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.04%)</title><rect x="2.5176%" y="293" width="0.0390%" height="15" fill="rgb(230,49,44)" fg:x="129" fg:w="2"/><text x="2.7676%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.04%)</title><rect x="2.5176%" y="277" width="0.0390%" height="15" fill="rgb(229,67,23)" fg:x="129" fg:w="2"/><text x="2.7676%" y="287.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (2 samples, 0.04%)</title><rect x="2.5176%" y="261" width="0.0390%" height="15" fill="rgb(249,83,47)" fg:x="129" fg:w="2"/><text x="2.7676%" y="271.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token::_{{closure}} (2 samples, 0.04%)</title><rect x="2.5176%" y="245" width="0.0390%" height="15" fill="rgb(215,43,3)" fg:x="129" fg:w="2"/><text x="2.7676%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="2.5371%" y="229" width="0.0195%" height="15" fill="rgb(238,154,13)" fg:x="130" fg:w="1"/><text x="2.7871%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="2.5371%" y="213" width="0.0195%" height="15" fill="rgb(219,56,2)" fg:x="130" fg:w="1"/><text x="2.7871%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="2.5371%" y="197" width="0.0195%" height="15" fill="rgb(233,0,4)" fg:x="130" fg:w="1"/><text x="2.7871%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.02%)</title><rect x="2.5371%" y="181" width="0.0195%" height="15" fill="rgb(235,30,7)" fg:x="130" fg:w="1"/><text x="2.7871%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="2.5371%" y="165" width="0.0195%" height="15" fill="rgb(250,79,13)" fg:x="130" fg:w="1"/><text x="2.7871%" y="175.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.02%)</title><rect x="2.5371%" y="149" width="0.0195%" height="15" fill="rgb(211,146,34)" fg:x="130" fg:w="1"/><text x="2.7871%" y="159.50"></text></g><g><title>[snix] (10 samples, 0.20%)</title><rect x="2.3810%" y="373" width="0.1952%" height="15" fill="rgb(228,22,38)" fg:x="122" fg:w="10"/><text x="2.6310%" y="383.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.02%)</title><rect x="2.5566%" y="357" width="0.0195%" height="15" fill="rgb(235,168,5)" fg:x="131" fg:w="1"/><text x="2.8066%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.08%)</title><rect x="3.0055%" y="357" width="0.0781%" height="15" fill="rgb(221,155,16)" fg:x="154" fg:w="4"/><text x="3.2555%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.04%)</title><rect x="3.0445%" y="341" width="0.0390%" height="15" fill="rgb(215,215,53)" fg:x="156" fg:w="2"/><text x="3.2945%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (2 samples, 0.04%)</title><rect x="3.0445%" y="325" width="0.0390%" height="15" fill="rgb(223,4,10)" fg:x="156" fg:w="2"/><text x="3.2945%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.04%)</title><rect x="3.0445%" y="309" width="0.0390%" height="15" fill="rgb(234,103,6)" fg:x="156" fg:w="2"/><text x="3.2945%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="3.0445%" y="293" width="0.0390%" height="15" fill="rgb(227,97,0)" fg:x="156" fg:w="2"/><text x="3.2945%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.0835%" y="357" width="0.0195%" height="15" fill="rgb(234,150,53)" fg:x="158" fg:w="1"/><text x="3.3335%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.0835%" y="341" width="0.0195%" height="15" fill="rgb(228,201,54)" fg:x="158" fg:w="1"/><text x="3.3335%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.0835%" y="325" width="0.0195%" height="15" fill="rgb(222,22,37)" fg:x="158" fg:w="1"/><text x="3.3335%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.0835%" y="309" width="0.0195%" height="15" fill="rgb(237,53,32)" fg:x="158" fg:w="1"/><text x="3.3335%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="3.0835%" y="293" width="0.0195%" height="15" fill="rgb(233,25,53)" fg:x="158" fg:w="1"/><text x="3.3335%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="3.0835%" y="277" width="0.0195%" height="15" fill="rgb(210,40,34)" fg:x="158" fg:w="1"/><text x="3.3335%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="3.0835%" y="261" width="0.0195%" height="15" fill="rgb(241,220,44)" fg:x="158" fg:w="1"/><text x="3.3335%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="3.0835%" y="245" width="0.0195%" height="15" fill="rgb(235,28,35)" fg:x="158" fg:w="1"/><text x="3.3335%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="3.1030%" y="357" width="0.0195%" height="15" fill="rgb(210,56,17)" fg:x="159" fg:w="1"/><text x="3.3530%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="3.1030%" y="341" width="0.0195%" height="15" fill="rgb(224,130,29)" fg:x="159" fg:w="1"/><text x="3.3530%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="3.1030%" y="325" width="0.0195%" height="15" fill="rgb(235,212,8)" fg:x="159" fg:w="1"/><text x="3.3530%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="3.1030%" y="309" width="0.0195%" height="15" fill="rgb(223,33,50)" fg:x="159" fg:w="1"/><text x="3.3530%" y="319.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.1226%" y="357" width="0.0195%" height="15" fill="rgb(219,149,13)" fg:x="160" fg:w="1"/><text x="3.3726%" y="367.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="3.1226%" y="341" width="0.0195%" height="15" fill="rgb(250,156,29)" fg:x="160" fg:w="1"/><text x="3.3726%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="3.1226%" y="325" width="0.0195%" height="15" fill="rgb(216,193,19)" fg:x="160" fg:w="1"/><text x="3.3726%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="3.1226%" y="309" width="0.0195%" height="15" fill="rgb(216,135,14)" fg:x="160" fg:w="1"/><text x="3.3726%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="3.1421%" y="357" width="0.0585%" height="15" fill="rgb(241,47,5)" fg:x="161" fg:w="3"/><text x="3.3921%" y="367.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="3.2006%" y="357" width="0.0195%" height="15" fill="rgb(233,42,35)" fg:x="164" fg:w="1"/><text x="3.4506%" y="367.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::advance_by (2 samples, 0.04%)</title><rect x="3.2201%" y="357" width="0.0390%" height="15" fill="rgb(231,13,6)" fg:x="165" fg:w="2"/><text x="3.4701%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (1 samples, 0.02%)</title><rect x="3.2397%" y="341" width="0.0195%" height="15" fill="rgb(207,181,40)" fg:x="166" fg:w="1"/><text x="3.4897%" y="351.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="3.2397%" y="325" width="0.0195%" height="15" fill="rgb(254,173,49)" fg:x="166" fg:w="1"/><text x="3.4897%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="3.2397%" y="309" width="0.0195%" height="15" fill="rgb(221,1,38)" fg:x="166" fg:w="1"/><text x="3.4897%" y="319.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="3.2592%" y="357" width="0.0585%" height="15" fill="rgb(206,124,46)" fg:x="167" fg:w="3"/><text x="3.5092%" y="367.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.02%)</title><rect x="3.2982%" y="341" width="0.0195%" height="15" fill="rgb(249,21,11)" fg:x="169" fg:w="1"/><text x="3.5482%" y="351.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume (1 samples, 0.02%)</title><rect x="3.2982%" y="325" width="0.0195%" height="15" fill="rgb(222,201,40)" fg:x="169" fg:w="1"/><text x="3.5482%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="3.2982%" y="309" width="0.0195%" height="15" fill="rgb(235,61,29)" fg:x="169" fg:w="1"/><text x="3.5482%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="3.2982%" y="293" width="0.0195%" height="15" fill="rgb(219,207,3)" fg:x="169" fg:w="1"/><text x="3.5482%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="3.2982%" y="277" width="0.0195%" height="15" fill="rgb(222,56,46)" fg:x="169" fg:w="1"/><text x="3.5482%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="3.2982%" y="261" width="0.0195%" height="15" fill="rgb(239,76,54)" fg:x="169" fg:w="1"/><text x="3.5482%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="3.2982%" y="245" width="0.0195%" height="15" fill="rgb(231,124,27)" fg:x="169" fg:w="1"/><text x="3.5482%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="3.2982%" y="229" width="0.0195%" height="15" fill="rgb(249,195,6)" fg:x="169" fg:w="1"/><text x="3.5482%" y="239.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="3.2982%" y="213" width="0.0195%" height="15" fill="rgb(237,174,47)" fg:x="169" fg:w="1"/><text x="3.5482%" y="223.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="3.2982%" y="197" width="0.0195%" height="15" fill="rgb(206,201,31)" fg:x="169" fg:w="1"/><text x="3.5482%" y="207.50"></text></g><g><title>&lt;rowan::cursor::SyntaxElementChildren as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="3.3177%" y="357" width="0.0195%" height="15" fill="rgb(231,57,52)" fg:x="170" fg:w="1"/><text x="3.5677%" y="367.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.02%)</title><rect x="3.3372%" y="357" width="0.0195%" height="15" fill="rgb(248,177,22)" fg:x="171" fg:w="1"/><text x="3.5872%" y="367.50"></text></g><g><title>&lt;snix_castore::blobservice::memory::MemoryBlobWriter as snix_castore::blobservice::BlobWriter&gt;::close::_{{closure}} (1 samples, 0.02%)</title><rect x="3.3568%" y="357" width="0.0195%" height="15" fill="rgb(215,211,37)" fg:x="172" fg:w="1"/><text x="3.6068%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="3.3568%" y="341" width="0.0195%" height="15" fill="rgb(241,128,51)" fg:x="172" fg:w="1"/><text x="3.6068%" y="351.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (7 samples, 0.14%)</title><rect x="3.3763%" y="357" width="0.1366%" height="15" fill="rgb(227,165,31)" fg:x="173" fg:w="7"/><text x="3.6263%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.4934%" y="341" width="0.0195%" height="15" fill="rgb(228,167,24)" fg:x="179" fg:w="1"/><text x="3.7434%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="3.4934%" y="325" width="0.0195%" height="15" fill="rgb(228,143,12)" fg:x="179" fg:w="1"/><text x="3.7434%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="3.4934%" y="309" width="0.0195%" height="15" fill="rgb(249,149,8)" fg:x="179" fg:w="1"/><text x="3.7434%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="3.4934%" y="293" width="0.0195%" height="15" fill="rgb(243,35,44)" fg:x="179" fg:w="1"/><text x="3.7434%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="3.4934%" y="277" width="0.0195%" height="15" fill="rgb(246,89,9)" fg:x="179" fg:w="1"/><text x="3.7434%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="3.4934%" y="261" width="0.0195%" height="15" fill="rgb(233,213,13)" fg:x="179" fg:w="1"/><text x="3.7434%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="3.4934%" y="245" width="0.0195%" height="15" fill="rgb(233,141,41)" fg:x="179" fg:w="1"/><text x="3.7434%" y="255.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.5129%" y="357" width="0.0195%" height="15" fill="rgb(239,167,4)" fg:x="180" fg:w="1"/><text x="3.7629%" y="367.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="3.5324%" y="357" width="0.0195%" height="15" fill="rgb(209,217,16)" fg:x="181" fg:w="1"/><text x="3.7824%" y="367.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (1 samples, 0.02%)</title><rect x="3.5324%" y="341" width="0.0195%" height="15" fill="rgb(219,88,35)" fg:x="181" fg:w="1"/><text x="3.7824%" y="351.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (1 samples, 0.02%)</title><rect x="3.5324%" y="325" width="0.0195%" height="15" fill="rgb(220,193,23)" fg:x="181" fg:w="1"/><text x="3.7824%" y="335.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (1 samples, 0.02%)</title><rect x="3.5324%" y="309" width="0.0195%" height="15" fill="rgb(230,90,52)" fg:x="181" fg:w="1"/><text x="3.7824%" y="319.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (1 samples, 0.02%)</title><rect x="3.5324%" y="293" width="0.0195%" height="15" fill="rgb(252,106,19)" fg:x="181" fg:w="1"/><text x="3.7824%" y="303.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (1 samples, 0.02%)</title><rect x="3.5324%" y="277" width="0.0195%" height="15" fill="rgb(206,74,20)" fg:x="181" fg:w="1"/><text x="3.7824%" y="287.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (1 samples, 0.02%)</title><rect x="3.5324%" y="261" width="0.0195%" height="15" fill="rgb(230,138,44)" fg:x="181" fg:w="1"/><text x="3.7824%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="3.5324%" y="245" width="0.0195%" height="15" fill="rgb(235,182,43)" fg:x="181" fg:w="1"/><text x="3.7824%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="3.5324%" y="229" width="0.0195%" height="15" fill="rgb(242,16,51)" fg:x="181" fg:w="1"/><text x="3.7824%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="3.5519%" y="341" width="0.0195%" height="15" fill="rgb(248,9,4)" fg:x="182" fg:w="1"/><text x="3.8019%" y="351.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="3.5519%" y="357" width="0.0585%" height="15" fill="rgb(210,31,22)" fg:x="182" fg:w="3"/><text x="3.8019%" y="367.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (2 samples, 0.04%)</title><rect x="3.5714%" y="341" width="0.0390%" height="15" fill="rgb(239,54,39)" fg:x="183" fg:w="2"/><text x="3.8214%" y="351.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (2 samples, 0.04%)</title><rect x="3.5714%" y="325" width="0.0390%" height="15" fill="rgb(230,99,41)" fg:x="183" fg:w="2"/><text x="3.8214%" y="335.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (2 samples, 0.04%)</title><rect x="3.5714%" y="309" width="0.0390%" height="15" fill="rgb(253,106,12)" fg:x="183" fg:w="2"/><text x="3.8214%" y="319.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (2 samples, 0.04%)</title><rect x="3.5714%" y="293" width="0.0390%" height="15" fill="rgb(213,46,41)" fg:x="183" fg:w="2"/><text x="3.8214%" y="303.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (2 samples, 0.04%)</title><rect x="3.5714%" y="277" width="0.0390%" height="15" fill="rgb(215,133,35)" fg:x="183" fg:w="2"/><text x="3.8214%" y="287.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (2 samples, 0.04%)</title><rect x="3.5714%" y="261" width="0.0390%" height="15" fill="rgb(213,28,5)" fg:x="183" fg:w="2"/><text x="3.8214%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="3.5714%" y="245" width="0.0390%" height="15" fill="rgb(215,77,49)" fg:x="183" fg:w="2"/><text x="3.8214%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect x="3.5714%" y="229" width="0.0390%" height="15" fill="rgb(248,100,22)" fg:x="183" fg:w="2"/><text x="3.8214%" y="239.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.6105%" y="357" width="0.0195%" height="15" fill="rgb(208,67,9)" fg:x="185" fg:w="1"/><text x="3.8605%" y="367.50"></text></g><g><title>&lt;snix_store::path_info::PathInfo as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6300%" y="357" width="0.0195%" height="15" fill="rgb(219,133,21)" fg:x="186" fg:w="1"/><text x="3.8800%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6300%" y="341" width="0.0195%" height="15" fill="rgb(246,46,29)" fg:x="186" fg:w="1"/><text x="3.8800%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="3.6300%" y="325" width="0.0195%" height="15" fill="rgb(246,185,52)" fg:x="186" fg:w="1"/><text x="3.8800%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="3.6300%" y="309" width="0.0195%" height="15" fill="rgb(252,136,11)" fg:x="186" fg:w="1"/><text x="3.8800%" y="319.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.02%)</title><rect x="3.6495%" y="357" width="0.0195%" height="15" fill="rgb(219,138,53)" fg:x="187" fg:w="1"/><text x="3.8995%" y="367.50"></text></g><g><title>&lt;tracing_indicatif::IndicatifLayer&lt;S,F&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.02%)</title><rect x="3.6690%" y="357" width="0.0195%" height="15" fill="rgb(211,51,23)" fg:x="188" fg:w="1"/><text x="3.9190%" y="367.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.02%)</title><rect x="3.6690%" y="341" width="0.0195%" height="15" fill="rgb(247,221,28)" fg:x="188" fg:w="1"/><text x="3.9190%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (3 samples, 0.06%)</title><rect x="3.6885%" y="357" width="0.0585%" height="15" fill="rgb(251,222,45)" fg:x="189" fg:w="3"/><text x="3.9385%" y="367.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="3.7471%" y="341" width="0.0195%" height="15" fill="rgb(217,162,53)" fg:x="192" fg:w="1"/><text x="3.9971%" y="351.50"></text></g><g><title>[snix] (2 samples, 0.04%)</title><rect x="3.7471%" y="357" width="0.0390%" height="15" fill="rgb(229,93,14)" fg:x="192" fg:w="2"/><text x="3.9971%" y="367.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token (1 samples, 0.02%)</title><rect x="3.7666%" y="341" width="0.0195%" height="15" fill="rgb(209,67,49)" fg:x="193" fg:w="1"/><text x="4.0166%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.7861%" y="357" width="0.0195%" height="15" fill="rgb(213,87,29)" fg:x="194" fg:w="1"/><text x="4.0361%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.02%)</title><rect x="3.7861%" y="341" width="0.0195%" height="15" fill="rgb(205,151,52)" fg:x="194" fg:w="1"/><text x="4.0361%" y="351.50"></text></g><g><title>_ZN55_$LT$F$u20$as$u20$indicatif..style..ProgressTracker$GT$5reset17hd596e35aefd4eb0dE.llvm.12675057248682727797 (1 samples, 0.02%)</title><rect x="3.8056%" y="357" width="0.0195%" height="15" fill="rgb(253,215,39)" fg:x="195" fg:w="1"/><text x="4.0556%" y="367.50"></text></g><g><title>_mi_heap_delayed_free_partial (1 samples, 0.02%)</title><rect x="3.8837%" y="325" width="0.0195%" height="15" fill="rgb(221,220,41)" fg:x="199" fg:w="1"/><text x="4.1337%" y="335.50"></text></g><g><title>mi_find_page (1 samples, 0.02%)</title><rect x="3.9032%" y="309" width="0.0195%" height="15" fill="rgb(218,133,21)" fg:x="200" fg:w="1"/><text x="4.1532%" y="319.50"></text></g><g><title>_mi_heap_collect_retired (2 samples, 0.04%)</title><rect x="3.9227%" y="293" width="0.0390%" height="15" fill="rgb(221,193,43)" fg:x="201" fg:w="2"/><text x="4.1727%" y="303.50"></text></g><g><title>_mi_heap_realloc_zero (7 samples, 0.14%)</title><rect x="3.8837%" y="341" width="0.1366%" height="15" fill="rgb(240,128,52)" fg:x="199" fg:w="7"/><text x="4.1337%" y="351.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.12%)</title><rect x="3.9032%" y="325" width="0.1171%" height="15" fill="rgb(253,114,12)" fg:x="200" fg:w="6"/><text x="4.1532%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (5 samples, 0.10%)</title><rect x="3.9227%" y="309" width="0.0976%" height="15" fill="rgb(215,223,47)" fg:x="201" fg:w="5"/><text x="4.1727%" y="319.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.06%)</title><rect x="3.9617%" y="293" width="0.0585%" height="15" fill="rgb(248,225,23)" fg:x="203" fg:w="3"/><text x="4.2117%" y="303.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (3 samples, 0.06%)</title><rect x="3.9617%" y="277" width="0.0585%" height="15" fill="rgb(250,108,0)" fg:x="203" fg:w="3"/><text x="4.2117%" y="287.50"></text></g><g><title>mi_segments_page_find_and_allocate (3 samples, 0.06%)</title><rect x="3.9617%" y="261" width="0.0585%" height="15" fill="rgb(228,208,7)" fg:x="203" fg:w="3"/><text x="4.2117%" y="271.50"></text></g><g><title>_mi_page_retire (2 samples, 0.04%)</title><rect x="4.0203%" y="341" width="0.0390%" height="15" fill="rgb(244,45,10)" fg:x="206" fg:w="2"/><text x="4.2703%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17ha1b12083e30814abE.llvm.16348842533310755137 (14 samples, 0.27%)</title><rect x="3.8251%" y="357" width="0.2732%" height="15" fill="rgb(207,125,25)" fg:x="196" fg:w="14"/><text x="4.0751%" y="367.50"></text></g><g><title>mi_free (2 samples, 0.04%)</title><rect x="4.0593%" y="341" width="0.0390%" height="15" fill="rgb(210,195,18)" fg:x="208" fg:w="2"/><text x="4.3093%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.10%)</title><rect x="4.1179%" y="341" width="0.0976%" height="15" fill="rgb(249,80,12)" fg:x="211" fg:w="5"/><text x="4.3679%" y="351.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (5 samples, 0.10%)</title><rect x="4.1179%" y="325" width="0.0976%" height="15" fill="rgb(221,65,9)" fg:x="211" fg:w="5"/><text x="4.3679%" y="335.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17h0bd66cd2865749cbE.llvm.12783554947409113215 (15 samples, 0.29%)</title><rect x="4.0984%" y="357" width="0.2927%" height="15" fill="rgb(235,49,36)" fg:x="210" fg:w="15"/><text x="4.3484%" y="367.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (9 samples, 0.18%)</title><rect x="4.2155%" y="341" width="0.1756%" height="15" fill="rgb(225,32,20)" fg:x="216" fg:w="9"/><text x="4.4655%" y="351.50"></text></g><g><title>syscall (2 samples, 0.04%)</title><rect x="4.3521%" y="325" width="0.0390%" height="15" fill="rgb(215,141,46)" fg:x="223" fg:w="2"/><text x="4.6021%" y="335.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="4.3911%" y="357" width="0.0390%" height="15" fill="rgb(250,160,47)" fg:x="225" fg:w="2"/><text x="4.6411%" y="367.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect x="4.3911%" y="341" width="0.0390%" height="15" fill="rgb(216,222,40)" fg:x="225" fg:w="2"/><text x="4.6411%" y="351.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="4.4301%" y="357" width="0.0195%" height="15" fill="rgb(234,217,39)" fg:x="227" fg:w="1"/><text x="4.6801%" y="367.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="4.4301%" y="341" width="0.0195%" height="15" fill="rgb(207,178,40)" fg:x="227" fg:w="1"/><text x="4.6801%" y="351.50"></text></g><g><title>_mi_heap_init (2 samples, 0.04%)</title><rect x="4.4496%" y="357" width="0.0390%" height="15" fill="rgb(221,136,13)" fg:x="228" fg:w="2"/><text x="4.6996%" y="367.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.04%)</title><rect x="4.4887%" y="357" width="0.0390%" height="15" fill="rgb(249,199,10)" fg:x="230" fg:w="2"/><text x="4.7387%" y="367.50"></text></g><g><title>alloc::raw_vec::layout_array (1 samples, 0.02%)</title><rect x="4.5277%" y="309" width="0.0195%" height="15" fill="rgb(249,222,13)" fg:x="232" fg:w="1"/><text x="4.7777%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="4.5277%" y="293" width="0.0195%" height="15" fill="rgb(244,185,38)" fg:x="232" fg:w="1"/><text x="4.7777%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.06%)</title><rect x="4.5277%" y="357" width="0.0585%" height="15" fill="rgb(236,202,9)" fg:x="232" fg:w="3"/><text x="4.7777%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3 samples, 0.06%)</title><rect x="4.5277%" y="341" width="0.0585%" height="15" fill="rgb(250,229,37)" fg:x="232" fg:w="3"/><text x="4.7777%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="4.5277%" y="325" width="0.0585%" height="15" fill="rgb(206,174,23)" fg:x="232" fg:w="3"/><text x="4.7777%" y="335.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::construct (2 samples, 0.04%)</title><rect x="4.5472%" y="309" width="0.0390%" height="15" fill="rgb(211,33,43)" fg:x="233" fg:w="2"/><text x="4.7972%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.04%)</title><rect x="4.5472%" y="293" width="0.0390%" height="15" fill="rgb(245,58,50)" fg:x="233" fg:w="2"/><text x="4.7972%" y="303.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="4.5863%" y="357" width="0.0195%" height="15" fill="rgb(244,68,36)" fg:x="235" fg:w="1"/><text x="4.8363%" y="367.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (5 samples, 0.10%)</title><rect x="4.6058%" y="357" width="0.0976%" height="15" fill="rgb(232,229,15)" fg:x="236" fg:w="5"/><text x="4.8558%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="4.6643%" y="341" width="0.0390%" height="15" fill="rgb(254,30,23)" fg:x="239" fg:w="2"/><text x="4.9143%" y="351.50"></text></g><g><title>blake3_hash_many_avx512 (1 samples, 0.02%)</title><rect x="4.7034%" y="357" width="0.0195%" height="15" fill="rgb(235,160,14)" fg:x="241" fg:w="1"/><text x="4.9534%" y="367.50"></text></g><g><title>bstr::ext_slice::Find::new (3 samples, 0.06%)</title><rect x="4.7229%" y="357" width="0.0585%" height="15" fill="rgb(212,155,44)" fg:x="242" fg:w="3"/><text x="4.9729%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="4.7424%" y="341" width="0.0390%" height="15" fill="rgb(226,2,50)" fg:x="243" fg:w="2"/><text x="4.9924%" y="351.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward_with_ranker (2 samples, 0.04%)</title><rect x="4.7424%" y="325" width="0.0390%" height="15" fill="rgb(234,177,6)" fg:x="243" fg:w="2"/><text x="4.9924%" y="335.50"></text></g><g><title>console::unix_term::terminal_size (1 samples, 0.02%)</title><rect x="4.7814%" y="357" width="0.0195%" height="15" fill="rgb(217,24,9)" fg:x="245" fg:w="1"/><text x="5.0314%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.06%)</title><rect x="4.8009%" y="357" width="0.0585%" height="15" fill="rgb(220,13,46)" fg:x="246" fg:w="3"/><text x="5.0509%" y="367.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h58cd14dedff6be09E.llvm.16348842533310755137 (2 samples, 0.04%)</title><rect x="4.8205%" y="341" width="0.0390%" height="15" fill="rgb(239,221,27)" fg:x="247" fg:w="2"/><text x="5.0705%" y="351.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.02%)</title><rect x="4.8985%" y="341" width="0.0195%" height="15" fill="rgb(222,198,25)" fg:x="251" fg:w="1"/><text x="5.1485%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.08%)</title><rect x="4.8595%" y="357" width="0.0781%" height="15" fill="rgb(211,99,13)" fg:x="249" fg:w="4"/><text x="5.1095%" y="367.50"></text></g><g><title>std::thread::current::set_current (1 samples, 0.02%)</title><rect x="4.9180%" y="341" width="0.0195%" height="15" fill="rgb(232,111,31)" fg:x="252" fg:w="1"/><text x="5.1680%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (6 samples, 0.12%)</title><rect x="4.9375%" y="357" width="0.1171%" height="15" fill="rgb(245,82,37)" fg:x="253" fg:w="6"/><text x="5.1875%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value::coerce_to_string_::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="5.0546%" y="357" width="0.0195%" height="15" fill="rgb(227,149,46)" fg:x="259" fg:w="1"/><text x="5.3046%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (2 samples, 0.04%)</title><rect x="5.0742%" y="357" width="0.0390%" height="15" fill="rgb(218,36,50)" fg:x="260" fg:w="2"/><text x="5.3242%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk&gt; (1 samples, 0.02%)</title><rect x="5.0937%" y="341" width="0.0195%" height="15" fill="rgb(226,80,48)" fg:x="261" fg:w="1"/><text x="5.3437%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="5.0937%" y="325" width="0.0195%" height="15" fill="rgb(238,224,15)" fg:x="261" fg:w="1"/><text x="5.3437%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.0937%" y="309" width="0.0195%" height="15" fill="rgb(241,136,10)" fg:x="261" fg:w="1"/><text x="5.3437%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::vm::generators::VMResponse&gt; (1 samples, 0.02%)</title><rect x="5.1132%" y="357" width="0.0195%" height="15" fill="rgb(208,32,45)" fg:x="262" fg:w="1"/><text x="5.3632%" y="367.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (1 samples, 0.02%)</title><rect x="5.1327%" y="357" width="0.0195%" height="15" fill="rgb(207,135,9)" fg:x="263" fg:w="1"/><text x="5.3827%" y="367.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (1 samples, 0.02%)</title><rect x="5.1327%" y="341" width="0.0195%" height="15" fill="rgb(206,86,44)" fg:x="263" fg:w="1"/><text x="5.3827%" y="351.50"></text></g><g><title>core::slice::sort::stable::quicksort::PartitionState&lt;T&gt;::partition_one (1 samples, 0.02%)</title><rect x="5.1327%" y="325" width="0.0195%" height="15" fill="rgb(245,177,15)" fg:x="263" fg:w="1"/><text x="5.3827%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="5.1327%" y="309" width="0.0195%" height="15" fill="rgb(206,64,50)" fg:x="263" fg:w="1"/><text x="5.3827%" y="319.50"></text></g><g><title>data_encoding::Encoding::specification (1 samples, 0.02%)</title><rect x="5.1522%" y="357" width="0.0195%" height="15" fill="rgb(234,36,40)" fg:x="264" fg:w="1"/><text x="5.4022%" y="367.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="5.1522%" y="341" width="0.0195%" height="15" fill="rgb(213,64,8)" fg:x="264" fg:w="1"/><text x="5.4022%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as core::default::Default&gt;::default (9 samples, 0.18%)</title><rect x="5.1717%" y="341" width="0.1756%" height="15" fill="rgb(210,75,36)" fg:x="265" fg:w="9"/><text x="5.4217%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.18%)</title><rect x="5.1717%" y="325" width="0.1756%" height="15" fill="rgb(229,88,21)" fg:x="265" fg:w="9"/><text x="5.4217%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.18%)</title><rect x="5.1717%" y="309" width="0.1756%" height="15" fill="rgb(252,204,47)" fg:x="265" fg:w="9"/><text x="5.4217%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="5.3084%" y="293" width="0.0390%" height="15" fill="rgb(208,77,27)" fg:x="272" fg:w="2"/><text x="5.5584%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="5.3084%" y="277" width="0.0390%" height="15" fill="rgb(221,76,26)" fg:x="272" fg:w="2"/><text x="5.5584%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="5.3084%" y="261" width="0.0390%" height="15" fill="rgb(225,139,18)" fg:x="272" fg:w="2"/><text x="5.5584%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="5.3084%" y="245" width="0.0390%" height="15" fill="rgb(230,137,11)" fg:x="272" fg:w="2"/><text x="5.5584%" y="255.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="5.3084%" y="229" width="0.0390%" height="15" fill="rgb(212,28,1)" fg:x="272" fg:w="2"/><text x="5.5584%" y="239.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect x="5.3084%" y="213" width="0.0390%" height="15" fill="rgb(248,164,17)" fg:x="272" fg:w="2"/><text x="5.5584%" y="223.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.04%)</title><rect x="5.3084%" y="197" width="0.0390%" height="15" fill="rgb(222,171,42)" fg:x="272" fg:w="2"/><text x="5.5584%" y="207.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="5.3279%" y="181" width="0.0195%" height="15" fill="rgb(243,84,45)" fg:x="273" fg:w="1"/><text x="5.5779%" y="191.50"></text></g><g><title>mi_find_page (1 samples, 0.02%)</title><rect x="5.3279%" y="165" width="0.0195%" height="15" fill="rgb(252,49,23)" fg:x="273" fg:w="1"/><text x="5.5779%" y="175.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.02%)</title><rect x="5.3279%" y="149" width="0.0195%" height="15" fill="rgb(215,19,7)" fg:x="273" fg:w="1"/><text x="5.5779%" y="159.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (10 samples, 0.20%)</title><rect x="5.1717%" y="357" width="0.1952%" height="15" fill="rgb(238,81,41)" fg:x="265" fg:w="10"/><text x="5.4217%" y="367.50"></text></g><g><title>snix_eval::vm::generators::_&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator::_{{closure}} (1 samples, 0.02%)</title><rect x="5.3474%" y="341" width="0.0195%" height="15" fill="rgb(210,199,37)" fg:x="274" fg:w="1"/><text x="5.5974%" y="351.50"></text></g><g><title>snix_eval::vm::generators::pin_generator (1 samples, 0.02%)</title><rect x="5.3474%" y="325" width="0.0195%" height="15" fill="rgb(244,192,49)" fg:x="274" fg:w="1"/><text x="5.5974%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="5.3474%" y="309" width="0.0195%" height="15" fill="rgb(226,211,11)" fg:x="274" fg:w="1"/><text x="5.5974%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="5.3474%" y="293" width="0.0195%" height="15" fill="rgb(236,162,54)" fg:x="274" fg:w="1"/><text x="5.5974%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="5.3474%" y="277" width="0.0195%" height="15" fill="rgb(220,229,9)" fg:x="274" fg:w="1"/><text x="5.5974%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="5.3474%" y="261" width="0.0195%" height="15" fill="rgb(250,87,22)" fg:x="274" fg:w="1"/><text x="5.5974%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="5.3474%" y="245" width="0.0195%" height="15" fill="rgb(239,43,17)" fg:x="274" fg:w="1"/><text x="5.5974%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="5.3474%" y="229" width="0.0195%" height="15" fill="rgb(231,177,25)" fg:x="274" fg:w="1"/><text x="5.5974%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="5.3474%" y="213" width="0.0195%" height="15" fill="rgb(219,179,1)" fg:x="274" fg:w="1"/><text x="5.5974%" y="223.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="5.3474%" y="197" width="0.0195%" height="15" fill="rgb(238,219,53)" fg:x="274" fg:w="1"/><text x="5.5974%" y="207.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="5.3474%" y="181" width="0.0195%" height="15" fill="rgb(232,167,36)" fg:x="274" fg:w="1"/><text x="5.5974%" y="191.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.02%)</title><rect x="5.3474%" y="165" width="0.0195%" height="15" fill="rgb(244,19,51)" fg:x="274" fg:w="1"/><text x="5.5974%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="5.3864%" y="245" width="0.0195%" height="15" fill="rgb(224,6,22)" fg:x="276" fg:w="1"/><text x="5.6364%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.02%)</title><rect x="5.4059%" y="245" width="0.0195%" height="15" fill="rgb(224,145,5)" fg:x="277" fg:w="1"/><text x="5.6559%" y="255.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.02%)</title><rect x="5.4059%" y="229" width="0.0195%" height="15" fill="rgb(234,130,49)" fg:x="277" fg:w="1"/><text x="5.6559%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="5.4059%" y="213" width="0.0195%" height="15" fill="rgb(254,6,2)" fg:x="277" fg:w="1"/><text x="5.6559%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.4059%" y="197" width="0.0195%" height="15" fill="rgb(208,96,46)" fg:x="277" fg:w="1"/><text x="5.6559%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="5.4059%" y="181" width="0.0195%" height="15" fill="rgb(239,3,39)" fg:x="277" fg:w="1"/><text x="5.6559%" y="191.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="5.4059%" y="165" width="0.0195%" height="15" fill="rgb(233,210,1)" fg:x="277" fg:w="1"/><text x="5.6559%" y="175.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::hash::Hash for bstr::bstr::BStr&gt;::hash (1 samples, 0.02%)</title><rect x="5.4059%" y="149" width="0.0195%" height="15" fill="rgb(244,137,37)" fg:x="277" fg:w="1"/><text x="5.6559%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="5.4059%" y="133" width="0.0195%" height="15" fill="rgb(240,136,2)" fg:x="277" fg:w="1"/><text x="5.6559%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.02%)</title><rect x="5.4059%" y="117" width="0.0195%" height="15" fill="rgb(239,18,37)" fg:x="277" fg:w="1"/><text x="5.6559%" y="127.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.4059%" y="101" width="0.0195%" height="15" fill="rgb(218,185,22)" fg:x="277" fg:w="1"/><text x="5.6559%" y="111.50"></text></g><g><title>rustc_hash::hash_bytes (1 samples, 0.02%)</title><rect x="5.4059%" y="85" width="0.0195%" height="15" fill="rgb(225,218,4)" fg:x="277" fg:w="1"/><text x="5.6559%" y="95.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.02%)</title><rect x="5.4059%" y="69" width="0.0195%" height="15" fill="rgb(230,182,32)" fg:x="277" fg:w="1"/><text x="5.6559%" y="79.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.02%)</title><rect x="5.4059%" y="53" width="0.0195%" height="15" fill="rgb(242,56,43)" fg:x="277" fg:w="1"/><text x="5.6559%" y="63.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1 samples, 0.02%)</title><rect x="5.4059%" y="37" width="0.0195%" height="15" fill="rgb(233,99,24)" fg:x="277" fg:w="1"/><text x="5.6559%" y="47.50"></text></g><g><title>core::intrinsics::unlikely (3 samples, 0.06%)</title><rect x="5.4254%" y="197" width="0.0585%" height="15" fill="rgb(234,209,42)" fg:x="278" fg:w="3"/><text x="5.6754%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.12%)</title><rect x="5.3864%" y="309" width="0.1171%" height="15" fill="rgb(227,7,12)" fg:x="276" fg:w="6"/><text x="5.6364%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.12%)</title><rect x="5.3864%" y="293" width="0.1171%" height="15" fill="rgb(245,203,43)" fg:x="276" fg:w="6"/><text x="5.6364%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (6 samples, 0.12%)</title><rect x="5.3864%" y="277" width="0.1171%" height="15" fill="rgb(238,205,33)" fg:x="276" fg:w="6"/><text x="5.6364%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (6 samples, 0.12%)</title><rect x="5.3864%" y="261" width="0.1171%" height="15" fill="rgb(231,56,7)" fg:x="276" fg:w="6"/><text x="5.6364%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (4 samples, 0.08%)</title><rect x="5.4254%" y="245" width="0.0781%" height="15" fill="rgb(244,186,29)" fg:x="278" fg:w="4"/><text x="5.6754%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (4 samples, 0.08%)</title><rect x="5.4254%" y="229" width="0.0781%" height="15" fill="rgb(234,111,31)" fg:x="278" fg:w="4"/><text x="5.6754%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (4 samples, 0.08%)</title><rect x="5.4254%" y="213" width="0.0781%" height="15" fill="rgb(241,149,10)" fg:x="278" fg:w="4"/><text x="5.6754%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.02%)</title><rect x="5.4840%" y="197" width="0.0195%" height="15" fill="rgb(249,206,44)" fg:x="281" fg:w="1"/><text x="5.7340%" y="207.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (1 samples, 0.02%)</title><rect x="5.4840%" y="181" width="0.0195%" height="15" fill="rgb(251,153,30)" fg:x="281" fg:w="1"/><text x="5.7340%" y="191.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="5.5035%" y="293" width="0.0390%" height="15" fill="rgb(239,152,38)" fg:x="282" fg:w="2"/><text x="5.7535%" y="303.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.04%)</title><rect x="5.5035%" y="277" width="0.0390%" height="15" fill="rgb(249,139,47)" fg:x="282" fg:w="2"/><text x="5.7535%" y="287.50"></text></g><g><title>core::intrinsics::likely (2 samples, 0.04%)</title><rect x="5.5425%" y="293" width="0.0390%" height="15" fill="rgb(244,64,35)" fg:x="284" fg:w="2"/><text x="5.7925%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (11 samples, 0.21%)</title><rect x="5.3864%" y="341" width="0.2147%" height="15" fill="rgb(216,46,15)" fg:x="276" fg:w="11"/><text x="5.6364%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11 samples, 0.21%)</title><rect x="5.3864%" y="325" width="0.2147%" height="15" fill="rgb(250,74,19)" fg:x="276" fg:w="11"/><text x="5.6364%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.10%)</title><rect x="5.5035%" y="309" width="0.0976%" height="15" fill="rgb(249,42,33)" fg:x="282" fg:w="5"/><text x="5.7535%" y="319.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1 samples, 0.02%)</title><rect x="5.5816%" y="293" width="0.0195%" height="15" fill="rgb(242,149,17)" fg:x="286" fg:w="1"/><text x="5.8316%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="5.5816%" y="277" width="0.0195%" height="15" fill="rgb(244,29,21)" fg:x="286" fg:w="1"/><text x="5.8316%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="5.6011%" y="341" width="0.0195%" height="15" fill="rgb(220,130,37)" fg:x="287" fg:w="1"/><text x="5.8511%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.6011%" y="325" width="0.0195%" height="15" fill="rgb(211,67,2)" fg:x="287" fg:w="1"/><text x="5.8511%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="5.6011%" y="309" width="0.0195%" height="15" fill="rgb(235,68,52)" fg:x="287" fg:w="1"/><text x="5.8511%" y="319.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="5.6011%" y="293" width="0.0195%" height="15" fill="rgb(246,142,3)" fg:x="287" fg:w="1"/><text x="5.8511%" y="303.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::hash::Hash for bstr::bstr::BStr&gt;::hash (1 samples, 0.02%)</title><rect x="5.6011%" y="277" width="0.0195%" height="15" fill="rgb(241,25,7)" fg:x="287" fg:w="1"/><text x="5.8511%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="5.6011%" y="261" width="0.0195%" height="15" fill="rgb(242,119,39)" fg:x="287" fg:w="1"/><text x="5.8511%" y="271.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.02%)</title><rect x="5.6011%" y="245" width="0.0195%" height="15" fill="rgb(241,98,45)" fg:x="287" fg:w="1"/><text x="5.8511%" y="255.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.02%)</title><rect x="5.6011%" y="229" width="0.0195%" height="15" fill="rgb(254,28,30)" fg:x="287" fg:w="1"/><text x="5.8511%" y="239.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.02%)</title><rect x="5.6011%" y="213" width="0.0195%" height="15" fill="rgb(241,142,54)" fg:x="287" fg:w="1"/><text x="5.8511%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="5.6011%" y="197" width="0.0195%" height="15" fill="rgb(222,85,15)" fg:x="287" fg:w="1"/><text x="5.8511%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.27%)</title><rect x="5.3669%" y="357" width="0.2732%" height="15" fill="rgb(210,85,47)" fg:x="275" fg:w="14"/><text x="5.6169%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (1 samples, 0.02%)</title><rect x="5.6206%" y="341" width="0.0195%" height="15" fill="rgb(224,206,25)" fg:x="288" fg:w="1"/><text x="5.8706%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="5.6206%" y="325" width="0.0195%" height="15" fill="rgb(243,201,19)" fg:x="288" fg:w="1"/><text x="5.8706%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="5.6206%" y="309" width="0.0195%" height="15" fill="rgb(236,59,4)" fg:x="288" fg:w="1"/><text x="5.8706%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="5.6206%" y="293" width="0.0195%" height="15" fill="rgb(254,179,45)" fg:x="288" fg:w="1"/><text x="5.8706%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="5.6401%" y="357" width="0.0195%" height="15" fill="rgb(226,14,10)" fg:x="289" fg:w="1"/><text x="5.8901%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.6401%" y="341" width="0.0195%" height="15" fill="rgb(244,27,41)" fg:x="289" fg:w="1"/><text x="5.8901%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.6401%" y="325" width="0.0195%" height="15" fill="rgb(235,35,32)" fg:x="289" fg:w="1"/><text x="5.8901%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="5.6401%" y="309" width="0.0195%" height="15" fill="rgb(218,68,31)" fg:x="289" fg:w="1"/><text x="5.8901%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="5.6401%" y="293" width="0.0195%" height="15" fill="rgb(207,120,37)" fg:x="289" fg:w="1"/><text x="5.8901%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.02%)</title><rect x="5.6401%" y="277" width="0.0195%" height="15" fill="rgb(227,98,0)" fg:x="289" fg:w="1"/><text x="5.8901%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.02%)</title><rect x="5.6401%" y="261" width="0.0195%" height="15" fill="rgb(207,7,3)" fg:x="289" fg:w="1"/><text x="5.8901%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.02%)</title><rect x="5.6401%" y="245" width="0.0195%" height="15" fill="rgb(206,98,19)" fg:x="289" fg:w="1"/><text x="5.8901%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.02%)</title><rect x="5.6401%" y="229" width="0.0195%" height="15" fill="rgb(217,5,26)" fg:x="289" fg:w="1"/><text x="5.8901%" y="239.50"></text></g><g><title>core::intrinsics::unlikely (1 samples, 0.02%)</title><rect x="5.6401%" y="213" width="0.0195%" height="15" fill="rgb(235,190,38)" fg:x="289" fg:w="1"/><text x="5.8901%" y="223.50"></text></g><g><title>indicatif::draw_target::Drawable::draw (1 samples, 0.02%)</title><rect x="5.6596%" y="357" width="0.0195%" height="15" fill="rgb(247,86,24)" fg:x="290" fg:w="1"/><text x="5.9096%" y="367.50"></text></g><g><title>indicatif::multi::MultiProgress::internalize (2 samples, 0.04%)</title><rect x="5.6792%" y="357" width="0.0390%" height="15" fill="rgb(205,101,16)" fg:x="291" fg:w="2"/><text x="5.9292%" y="367.50"></text></g><g><title>indicatif::multi::MultiState::draw (1 samples, 0.02%)</title><rect x="5.7182%" y="357" width="0.0195%" height="15" fill="rgb(246,168,33)" fg:x="293" fg:w="1"/><text x="5.9682%" y="367.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::with_draw_target (2 samples, 0.04%)</title><rect x="5.7377%" y="357" width="0.0390%" height="15" fill="rgb(231,114,1)" fg:x="294" fg:w="2"/><text x="5.9877%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.04%)</title><rect x="5.7377%" y="341" width="0.0390%" height="15" fill="rgb(207,184,53)" fg:x="294" fg:w="2"/><text x="5.9877%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.04%)</title><rect x="5.7377%" y="325" width="0.0390%" height="15" fill="rgb(224,95,51)" fg:x="294" fg:w="2"/><text x="5.9877%" y="335.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="5.7377%" y="309" width="0.0390%" height="15" fill="rgb(212,188,45)" fg:x="294" fg:w="2"/><text x="5.9877%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.7572%" y="293" width="0.0195%" height="15" fill="rgb(223,154,38)" fg:x="295" fg:w="1"/><text x="6.0072%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.1475%" y="341" width="0.0195%" height="15" fill="rgb(251,22,52)" fg:x="315" fg:w="1"/><text x="6.3975%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.1475%" y="325" width="0.0195%" height="15" fill="rgb(229,209,22)" fg:x="315" fg:w="1"/><text x="6.3975%" y="335.50"></text></g><g><title>indicatif::progress_bar::TickerControl::run (29 samples, 0.57%)</title><rect x="5.7767%" y="357" width="0.5660%" height="15" fill="rgb(234,138,34)" fg:x="296" fg:w="29"/><text x="6.0267%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.18%)</title><rect x="6.1671%" y="341" width="0.1756%" height="15" fill="rgb(212,95,11)" fg:x="316" fg:w="9"/><text x="6.4171%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (8 samples, 0.16%)</title><rect x="6.1866%" y="325" width="0.1561%" height="15" fill="rgb(240,179,47)" fg:x="317" fg:w="8"/><text x="6.4366%" y="335.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.08%)</title><rect x="6.2646%" y="309" width="0.0781%" height="15" fill="rgb(240,163,11)" fg:x="321" fg:w="4"/><text x="6.5146%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="293" width="0.0195%" height="15" fill="rgb(236,37,12)" fg:x="324" fg:w="1"/><text x="6.5732%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="277" width="0.0195%" height="15" fill="rgb(232,164,16)" fg:x="324" fg:w="1"/><text x="6.5732%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="261" width="0.0195%" height="15" fill="rgb(244,205,15)" fg:x="324" fg:w="1"/><text x="6.5732%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="245" width="0.0195%" height="15" fill="rgb(223,117,47)" fg:x="324" fg:w="1"/><text x="6.5732%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="229" width="0.0195%" height="15" fill="rgb(244,107,35)" fg:x="324" fg:w="1"/><text x="6.5732%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3232%" y="213" width="0.0195%" height="15" fill="rgb(205,140,8)" fg:x="324" fg:w="1"/><text x="6.5732%" y="223.50"></text></g><g><title>indicatif::state::BarState::draw (9 samples, 0.18%)</title><rect x="6.3427%" y="357" width="0.1756%" height="15" fill="rgb(228,84,46)" fg:x="325" fg:w="9"/><text x="6.5927%" y="367.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (5 samples, 0.10%)</title><rect x="6.4208%" y="341" width="0.0976%" height="15" fill="rgb(254,188,9)" fg:x="329" fg:w="5"/><text x="6.6708%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.04%)</title><rect x="6.4793%" y="325" width="0.0390%" height="15" fill="rgb(206,112,54)" fg:x="332" fg:w="2"/><text x="6.7293%" y="335.50"></text></g><g><title>console::ansi::strip_ansi_codes (1 samples, 0.02%)</title><rect x="6.4988%" y="309" width="0.0195%" height="15" fill="rgb(216,84,49)" fg:x="333" fg:w="1"/><text x="6.7488%" y="319.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (1 samples, 0.02%)</title><rect x="6.5183%" y="357" width="0.0195%" height="15" fill="rgb(214,194,35)" fg:x="334" fg:w="1"/><text x="6.7683%" y="367.50"></text></g><g><title>indicatif::state::ProgressState::per_sec (3 samples, 0.06%)</title><rect x="6.5379%" y="357" width="0.0585%" height="15" fill="rgb(249,28,3)" fg:x="335" fg:w="3"/><text x="6.7879%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.02%)</title><rect x="6.5769%" y="341" width="0.0195%" height="15" fill="rgb(222,56,52)" fg:x="337" fg:w="1"/><text x="6.8269%" y="351.50"></text></g><g><title>mi_free (7 samples, 0.14%)</title><rect x="6.5964%" y="357" width="0.1366%" height="15" fill="rgb(245,217,50)" fg:x="338" fg:w="7"/><text x="6.8464%" y="367.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (1 samples, 0.02%)</title><rect x="6.7330%" y="357" width="0.0195%" height="15" fill="rgb(213,201,24)" fg:x="345" fg:w="1"/><text x="6.9830%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.7330%" y="341" width="0.0195%" height="15" fill="rgb(248,116,28)" fg:x="345" fg:w="1"/><text x="6.9830%" y="351.50"></text></g><g><title>mi_segment_span_remove_from_queue (1 samples, 0.02%)</title><rect x="6.7525%" y="357" width="0.0195%" height="15" fill="rgb(219,72,43)" fg:x="346" fg:w="1"/><text x="7.0025%" y="367.50"></text></g><g><title>_mi_heap_init (11 samples, 0.21%)</title><rect x="6.7721%" y="341" width="0.2147%" height="15" fill="rgb(209,138,14)" fg:x="347" fg:w="11"/><text x="7.0221%" y="351.50"></text></g><g><title>mi_random_init_ex (2 samples, 0.04%)</title><rect x="6.9477%" y="325" width="0.0390%" height="15" fill="rgb(222,18,33)" fg:x="356" fg:w="2"/><text x="7.1977%" y="335.50"></text></g><g><title>_mi_prim_random_buf (1 samples, 0.02%)</title><rect x="6.9672%" y="309" width="0.0195%" height="15" fill="rgb(213,199,7)" fg:x="357" fg:w="1"/><text x="7.2172%" y="319.50"></text></g><g><title>mi_thread_init (12 samples, 0.23%)</title><rect x="6.7721%" y="357" width="0.2342%" height="15" fill="rgb(250,110,10)" fg:x="347" fg:w="12"/><text x="7.0221%" y="367.50"></text></g><g><title>_mi_random_init (1 samples, 0.02%)</title><rect x="6.9867%" y="341" width="0.0195%" height="15" fill="rgb(248,123,6)" fg:x="358" fg:w="1"/><text x="7.2367%" y="351.50"></text></g><g><title>rnix::ast::str_util::&lt;impl rnix::ast::nodes::Str&gt;::normalized_parts (1 samples, 0.02%)</title><rect x="7.0062%" y="357" width="0.0195%" height="15" fill="rgb(206,91,31)" fg:x="359" fg:w="1"/><text x="7.2562%" y="367.50"></text></g><g><title>rnix::ast::support::children_tokens_u (1 samples, 0.02%)</title><rect x="7.0062%" y="341" width="0.0195%" height="15" fill="rgb(211,154,13)" fg:x="359" fg:w="1"/><text x="7.2562%" y="351.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children_with_tokens (1 samples, 0.02%)</title><rect x="7.0062%" y="325" width="0.0195%" height="15" fill="rgb(225,148,7)" fg:x="359" fg:w="1"/><text x="7.2562%" y="335.50"></text></g><g><title>rowan::cursor::SyntaxNode::children_with_tokens (1 samples, 0.02%)</title><rect x="7.0062%" y="309" width="0.0195%" height="15" fill="rgb(220,160,43)" fg:x="359" fg:w="1"/><text x="7.2562%" y="319.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child_or_token (1 samples, 0.02%)</title><rect x="7.0062%" y="293" width="0.0195%" height="15" fill="rgb(213,52,39)" fg:x="359" fg:w="1"/><text x="7.2562%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.0062%" y="277" width="0.0195%" height="15" fill="rgb(243,137,7)" fg:x="359" fg:w="1"/><text x="7.2562%" y="287.50"></text></g><g><title>rnix::ast::support::nth (1 samples, 0.02%)</title><rect x="7.0258%" y="357" width="0.0195%" height="15" fill="rgb(230,79,13)" fg:x="360" fg:w="1"/><text x="7.2758%" y="367.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children (1 samples, 0.02%)</title><rect x="7.0258%" y="341" width="0.0195%" height="15" fill="rgb(247,105,23)" fg:x="360" fg:w="1"/><text x="7.2758%" y="351.50"></text></g><g><title>rowan::cursor::SyntaxNode::children (1 samples, 0.02%)</title><rect x="7.0258%" y="325" width="0.0195%" height="15" fill="rgb(223,179,41)" fg:x="360" fg:w="1"/><text x="7.2758%" y="335.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child (1 samples, 0.02%)</title><rect x="7.0258%" y="309" width="0.0195%" height="15" fill="rgb(218,9,34)" fg:x="360" fg:w="1"/><text x="7.2758%" y="319.50"></text></g><g><title>rowan::cursor::SyntaxNode::green_ref (1 samples, 0.02%)</title><rect x="7.0258%" y="293" width="0.0195%" height="15" fill="rgb(222,106,8)" fg:x="360" fg:w="1"/><text x="7.2758%" y="303.50"></text></g><g><title>rowan::cursor::NodeData::green (1 samples, 0.02%)</title><rect x="7.0258%" y="277" width="0.0195%" height="15" fill="rgb(211,220,0)" fg:x="360" fg:w="1"/><text x="7.2758%" y="287.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::drain_trivia_buffer (1 samples, 0.02%)</title><rect x="7.0453%" y="357" width="0.0195%" height="15" fill="rgb(229,52,16)" fg:x="361" fg:w="1"/><text x="7.2953%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.02%)</title><rect x="7.0453%" y="341" width="0.0195%" height="15" fill="rgb(212,155,18)" fg:x="361" fg:w="1"/><text x="7.2953%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="7.0453%" y="325" width="0.0195%" height="15" fill="rgb(242,21,14)" fg:x="361" fg:w="1"/><text x="7.2953%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="7.0453%" y="309" width="0.0195%" height="15" fill="rgb(222,19,48)" fg:x="361" fg:w="1"/><text x="7.2953%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="7.0453%" y="293" width="0.0195%" height="15" fill="rgb(232,45,27)" fg:x="361" fg:w="1"/><text x="7.2953%" y="303.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::expect_peek_any (1 samples, 0.02%)</title><rect x="7.0648%" y="357" width="0.0195%" height="15" fill="rgb(249,103,42)" fg:x="362" fg:w="1"/><text x="7.3148%" y="367.50"></text></g><g><title>rnix::token_set::TokenSet::from_slice (1 samples, 0.02%)</title><rect x="7.0648%" y="341" width="0.0195%" height="15" fill="rgb(246,81,33)" fg:x="362" fg:w="1"/><text x="7.3148%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="7.1038%" y="309" width="0.0195%" height="15" fill="rgb(252,33,42)" fg:x="364" fg:w="1"/><text x="7.3538%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="7.1038%" y="293" width="0.0195%" height="15" fill="rgb(209,212,41)" fg:x="364" fg:w="1"/><text x="7.3538%" y="303.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (3 samples, 0.06%)</title><rect x="7.0843%" y="357" width="0.0585%" height="15" fill="rgb(207,154,6)" fg:x="363" fg:w="3"/><text x="7.3343%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_raw (2 samples, 0.04%)</title><rect x="7.1038%" y="341" width="0.0390%" height="15" fill="rgb(223,64,47)" fg:x="364" fg:w="2"/><text x="7.3538%" y="351.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="7.1038%" y="325" width="0.0390%" height="15" fill="rgb(211,161,38)" fg:x="364" fg:w="2"/><text x="7.3538%" y="335.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (1 samples, 0.02%)</title><rect x="7.1233%" y="309" width="0.0195%" height="15" fill="rgb(219,138,40)" fg:x="365" fg:w="1"/><text x="7.3733%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.02%)</title><rect x="7.1233%" y="293" width="0.0195%" height="15" fill="rgb(241,228,46)" fg:x="365" fg:w="1"/><text x="7.3733%" y="303.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.02%)</title><rect x="7.1233%" y="277" width="0.0195%" height="15" fill="rgb(223,209,38)" fg:x="365" fg:w="1"/><text x="7.3733%" y="287.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.02%)</title><rect x="7.1233%" y="261" width="0.0195%" height="15" fill="rgb(236,164,45)" fg:x="365" fg:w="1"/><text x="7.3733%" y="271.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume (2 samples, 0.04%)</title><rect x="7.1429%" y="357" width="0.0390%" height="15" fill="rgb(231,15,5)" fg:x="366" fg:w="2"/><text x="7.3929%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.04%)</title><rect x="7.1429%" y="341" width="0.0390%" height="15" fill="rgb(252,35,15)" fg:x="366" fg:w="2"/><text x="7.3929%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.04%)</title><rect x="7.1429%" y="325" width="0.0390%" height="15" fill="rgb(248,181,18)" fg:x="366" fg:w="2"/><text x="7.3929%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="7.1429%" y="309" width="0.0390%" height="15" fill="rgb(233,39,42)" fg:x="366" fg:w="2"/><text x="7.3929%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="7.1429%" y="293" width="0.0390%" height="15" fill="rgb(238,110,33)" fg:x="366" fg:w="2"/><text x="7.3929%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.04%)</title><rect x="7.1429%" y="277" width="0.0390%" height="15" fill="rgb(233,195,10)" fg:x="366" fg:w="2"/><text x="7.3929%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="7.1429%" y="261" width="0.0390%" height="15" fill="rgb(254,105,3)" fg:x="366" fg:w="2"/><text x="7.3929%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (2 samples, 0.04%)</title><rect x="7.1429%" y="245" width="0.0390%" height="15" fill="rgb(221,225,9)" fg:x="366" fg:w="2"/><text x="7.3929%" y="255.50"></text></g><g><title>rnix::tokenizer::Tokenizer::consume::_{{closure}} (2 samples, 0.04%)</title><rect x="7.1429%" y="229" width="0.0390%" height="15" fill="rgb(224,227,45)" fg:x="366" fg:w="2"/><text x="7.3929%" y="239.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner::_{{closure}} (2 samples, 0.04%)</title><rect x="7.1429%" y="213" width="0.0390%" height="15" fill="rgb(229,198,43)" fg:x="366" fg:w="2"/><text x="7.3929%" y="223.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (3 samples, 0.06%)</title><rect x="7.1819%" y="357" width="0.0585%" height="15" fill="rgb(206,209,35)" fg:x="368" fg:w="3"/><text x="7.4319%" y="367.50"></text></g><g><title>&lt;rowan::green::node::GreenNode as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="7.2014%" y="341" width="0.0390%" height="15" fill="rgb(245,195,53)" fg:x="369" fg:w="2"/><text x="7.4514%" y="351.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="7.2014%" y="325" width="0.0390%" height="15" fill="rgb(240,92,26)" fg:x="369" fg:w="2"/><text x="7.4514%" y="335.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::with_arc (2 samples, 0.04%)</title><rect x="7.2014%" y="309" width="0.0390%" height="15" fill="rgb(207,40,23)" fg:x="369" fg:w="2"/><text x="7.4514%" y="319.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone::_{{closure}} (2 samples, 0.04%)</title><rect x="7.2014%" y="293" width="0.0390%" height="15" fill="rgb(223,111,35)" fg:x="369" fg:w="2"/><text x="7.4514%" y="303.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="7.2014%" y="277" width="0.0390%" height="15" fill="rgb(229,147,28)" fg:x="369" fg:w="2"/><text x="7.4514%" y="287.50"></text></g><g><title>rowan::green::node_cache::node_hash (1 samples, 0.02%)</title><rect x="7.2404%" y="357" width="0.0195%" height="15" fill="rgb(211,29,28)" fg:x="371" fg:w="1"/><text x="7.4904%" y="367.50"></text></g><g><title>rowan::green::node::GreenNodeData::children (1 samples, 0.02%)</title><rect x="7.2404%" y="341" width="0.0195%" height="15" fill="rgb(228,72,33)" fg:x="371" fg:w="1"/><text x="7.4904%" y="351.50"></text></g><g><title>rowan::green::node::GreenNodeData::slice (1 samples, 0.02%)</title><rect x="7.2404%" y="325" width="0.0195%" height="15" fill="rgb(205,214,31)" fg:x="371" fg:w="1"/><text x="7.4904%" y="335.50"></text></g><g><title>&lt;rowan::arc::HeaderSlice&lt;H,[T: 0]&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="7.2404%" y="309" width="0.0195%" height="15" fill="rgb(224,111,15)" fg:x="371" fg:w="1"/><text x="7.4904%" y="319.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (2 samples, 0.04%)</title><rect x="7.2600%" y="357" width="0.0390%" height="15" fill="rgb(253,21,26)" fg:x="372" fg:w="2"/><text x="7.5100%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (1 samples, 0.02%)</title><rect x="7.2990%" y="357" width="0.0195%" height="15" fill="rgb(245,139,43)" fg:x="374" fg:w="1"/><text x="7.5490%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (1 samples, 0.02%)</title><rect x="7.2990%" y="341" width="0.0195%" height="15" fill="rgb(252,170,7)" fg:x="374" fg:w="1"/><text x="7.5490%" y="351.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (1 samples, 0.02%)</title><rect x="7.2990%" y="325" width="0.0195%" height="15" fill="rgb(231,118,14)" fg:x="374" fg:w="1"/><text x="7.5490%" y="335.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_binop (1 samples, 0.02%)</title><rect x="7.2990%" y="309" width="0.0195%" height="15" fill="rgb(238,83,0)" fg:x="374" fg:w="1"/><text x="7.5490%" y="319.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="7.2990%" y="293" width="0.0195%" height="15" fill="rgb(221,39,39)" fg:x="374" fg:w="1"/><text x="7.5490%" y="303.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (1 samples, 0.02%)</title><rect x="7.2990%" y="277" width="0.0195%" height="15" fill="rgb(222,119,46)" fg:x="374" fg:w="1"/><text x="7.5490%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (1 samples, 0.02%)</title><rect x="7.2990%" y="261" width="0.0195%" height="15" fill="rgb(222,165,49)" fg:x="374" fg:w="1"/><text x="7.5490%" y="271.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (1 samples, 0.02%)</title><rect x="7.2990%" y="245" width="0.0195%" height="15" fill="rgb(219,113,52)" fg:x="374" fg:w="1"/><text x="7.5490%" y="255.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (1 samples, 0.02%)</title><rect x="7.2990%" y="229" width="0.0195%" height="15" fill="rgb(214,7,15)" fg:x="374" fg:w="1"/><text x="7.5490%" y="239.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_list (1 samples, 0.02%)</title><rect x="7.2990%" y="213" width="0.0195%" height="15" fill="rgb(235,32,4)" fg:x="374" fg:w="1"/><text x="7.5490%" y="223.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::bind_values (1 samples, 0.02%)</title><rect x="7.3185%" y="357" width="0.0195%" height="15" fill="rgb(238,90,54)" fg:x="375" fg:w="1"/><text x="7.5685%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_constant (1 samples, 0.02%)</title><rect x="7.3185%" y="341" width="0.0195%" height="15" fill="rgb(213,208,19)" fg:x="375" fg:w="1"/><text x="7.5685%" y="351.50"></text></g><g><title>snix_eval::compiler::Compiler::push_op (1 samples, 0.02%)</title><rect x="7.3185%" y="325" width="0.0195%" height="15" fill="rgb(233,156,4)" fg:x="375" fg:w="1"/><text x="7.5685%" y="335.50"></text></g><g><title>snix_eval::chunk::Chunk::push_op (1 samples, 0.02%)</title><rect x="7.3185%" y="309" width="0.0195%" height="15" fill="rgb(207,194,5)" fg:x="375" fg:w="1"/><text x="7.5685%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="7.3185%" y="293" width="0.0195%" height="15" fill="rgb(206,111,30)" fg:x="375" fg:w="1"/><text x="7.5685%" y="303.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_exit_generator (1 samples, 0.02%)</title><rect x="7.3380%" y="357" width="0.0195%" height="15" fill="rgb(243,70,54)" fg:x="376" fg:w="1"/><text x="7.5880%" y="367.50"></text></g><g><title>snix_eval::value::Value::as_bool (1 samples, 0.02%)</title><rect x="7.3575%" y="357" width="0.0195%" height="15" fill="rgb(242,28,8)" fg:x="377" fg:w="1"/><text x="7.6075%" y="367.50"></text></g><g><title>snix_eval::value::Value::force::_{{closure}} (2 samples, 0.04%)</title><rect x="7.3770%" y="357" width="0.0390%" height="15" fill="rgb(219,106,18)" fg:x="378" fg:w="2"/><text x="7.6270%" y="367.50"></text></g><g><title>snix_eval::value::Value::force_owned_genco::_{{closure}} (4 samples, 0.08%)</title><rect x="7.4161%" y="357" width="0.0781%" height="15" fill="rgb(244,222,10)" fg:x="380" fg:w="4"/><text x="7.6661%" y="367.50"></text></g><g><title>snix_eval::vm::generators::request_call::_{{closure}} (2 samples, 0.04%)</title><rect x="7.4551%" y="341" width="0.0390%" height="15" fill="rgb(236,179,52)" fg:x="382" fg:w="2"/><text x="7.7051%" y="351.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="7.4746%" y="325" width="0.0195%" height="15" fill="rgb(213,23,39)" fg:x="383" fg:w="1"/><text x="7.7246%" y="335.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.4941%" y="245" width="0.0195%" height="15" fill="rgb(238,48,10)" fg:x="384" fg:w="1"/><text x="7.7441%" y="255.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="7.4941%" y="229" width="0.0195%" height="15" fill="rgb(251,196,23)" fg:x="384" fg:w="1"/><text x="7.7441%" y="239.50"></text></g><g><title>snix_eval::value::attrs::AttrsRep::select (2 samples, 0.04%)</title><rect x="7.4941%" y="357" width="0.0390%" height="15" fill="rgb(250,152,24)" fg:x="384" fg:w="2"/><text x="7.7441%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.04%)</title><rect x="7.4941%" y="341" width="0.0390%" height="15" fill="rgb(209,150,17)" fg:x="384" fg:w="2"/><text x="7.7441%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.04%)</title><rect x="7.4941%" y="325" width="0.0390%" height="15" fill="rgb(234,202,34)" fg:x="384" fg:w="2"/><text x="7.7441%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.04%)</title><rect x="7.4941%" y="309" width="0.0390%" height="15" fill="rgb(253,148,53)" fg:x="384" fg:w="2"/><text x="7.7441%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.04%)</title><rect x="7.4941%" y="293" width="0.0390%" height="15" fill="rgb(218,129,16)" fg:x="384" fg:w="2"/><text x="7.7441%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="7.4941%" y="277" width="0.0390%" height="15" fill="rgb(216,85,19)" fg:x="384" fg:w="2"/><text x="7.7441%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.04%)</title><rect x="7.4941%" y="261" width="0.0390%" height="15" fill="rgb(235,228,7)" fg:x="384" fg:w="2"/><text x="7.7441%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="7.5137%" y="245" width="0.0195%" height="15" fill="rgb(245,175,0)" fg:x="385" fg:w="1"/><text x="7.7637%" y="255.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.02%)</title><rect x="7.5137%" y="229" width="0.0195%" height="15" fill="rgb(208,168,36)" fg:x="385" fg:w="1"/><text x="7.7637%" y="239.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.02%)</title><rect x="7.5137%" y="213" width="0.0195%" height="15" fill="rgb(246,171,24)" fg:x="385" fg:w="1"/><text x="7.7637%" y="223.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::borrow::Borrow&lt;bstr::bstr::BStr&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="7.5137%" y="197" width="0.0195%" height="15" fill="rgb(215,142,24)" fg:x="385" fg:w="1"/><text x="7.7637%" y="207.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (1 samples, 0.02%)</title><rect x="7.5137%" y="181" width="0.0195%" height="15" fill="rgb(250,187,7)" fg:x="385" fg:w="1"/><text x="7.7637%" y="191.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (1 samples, 0.02%)</title><rect x="7.5137%" y="165" width="0.0195%" height="15" fill="rgb(228,66,33)" fg:x="385" fg:w="1"/><text x="7.7637%" y="175.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (1 samples, 0.02%)</title><rect x="7.5137%" y="149" width="0.0195%" height="15" fill="rgb(234,215,21)" fg:x="385" fg:w="1"/><text x="7.7637%" y="159.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (1 samples, 0.02%)</title><rect x="7.5137%" y="133" width="0.0195%" height="15" fill="rgb(222,191,20)" fg:x="385" fg:w="1"/><text x="7.7637%" y="143.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (1 samples, 0.02%)</title><rect x="7.5137%" y="117" width="0.0195%" height="15" fill="rgb(245,79,54)" fg:x="385" fg:w="1"/><text x="7.7637%" y="127.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (1 samples, 0.02%)</title><rect x="7.5137%" y="101" width="0.0195%" height="15" fill="rgb(240,10,37)" fg:x="385" fg:w="1"/><text x="7.7637%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="7.5137%" y="85" width="0.0195%" height="15" fill="rgb(214,192,32)" fg:x="385" fg:w="1"/><text x="7.7637%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="7.5137%" y="69" width="0.0195%" height="15" fill="rgb(209,36,54)" fg:x="385" fg:w="1"/><text x="7.7637%" y="79.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::construct (1 samples, 0.02%)</title><rect x="7.5332%" y="357" width="0.0195%" height="15" fill="rgb(220,10,11)" fg:x="386" fg:w="1"/><text x="7.7832%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="7.5332%" y="341" width="0.0195%" height="15" fill="rgb(221,106,17)" fg:x="386" fg:w="1"/><text x="7.7832%" y="351.50"></text></g><g><title>snix_eval::value::path::canon_path (1 samples, 0.02%)</title><rect x="7.5527%" y="357" width="0.0195%" height="15" fill="rgb(251,142,44)" fg:x="387" fg:w="1"/><text x="7.8027%" y="367.50"></text></g><g><title>snix_eval::value::string::NixString::new (1 samples, 0.02%)</title><rect x="7.5722%" y="357" width="0.0195%" height="15" fill="rgb(238,13,15)" fg:x="388" fg:w="1"/><text x="7.8222%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="7.5722%" y="341" width="0.0195%" height="15" fill="rgb(208,107,27)" fg:x="388" fg:w="1"/><text x="7.8222%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="7.5722%" y="325" width="0.0195%" height="15" fill="rgb(205,136,37)" fg:x="388" fg:w="1"/><text x="7.8222%" y="335.50"></text></g><g><title>snix_eval::value::string::NixString::new::_{{closure}} (1 samples, 0.02%)</title><rect x="7.5722%" y="309" width="0.0195%" height="15" fill="rgb(250,205,27)" fg:x="388" fg:w="1"/><text x="7.8222%" y="319.50"></text></g><g><title>snix_eval::value::string::Interner::intern (1 samples, 0.02%)</title><rect x="7.5722%" y="293" width="0.0195%" height="15" fill="rgb(210,80,43)" fg:x="388" fg:w="1"/><text x="7.8222%" y="303.50"></text></g><g><title>snix_eval::value::string::InternerInner::intern (1 samples, 0.02%)</title><rect x="7.5722%" y="277" width="0.0195%" height="15" fill="rgb(247,160,36)" fg:x="388" fg:w="1"/><text x="7.8222%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="7.5722%" y="261" width="0.0195%" height="15" fill="rgb(234,13,49)" fg:x="388" fg:w="1"/><text x="7.8222%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="7.5722%" y="245" width="0.0195%" height="15" fill="rgb(234,122,0)" fg:x="388" fg:w="1"/><text x="7.8222%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="7.5722%" y="229" width="0.0195%" height="15" fill="rgb(207,146,38)" fg:x="388" fg:w="1"/><text x="7.8222%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="7.5722%" y="213" width="0.0195%" height="15" fill="rgb(207,177,25)" fg:x="388" fg:w="1"/><text x="7.8222%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="7.5722%" y="197" width="0.0195%" height="15" fill="rgb(211,178,42)" fg:x="388" fg:w="1"/><text x="7.8222%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="7.5722%" y="181" width="0.0195%" height="15" fill="rgb(230,69,54)" fg:x="388" fg:w="1"/><text x="7.8222%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (1 samples, 0.02%)</title><rect x="7.5722%" y="165" width="0.0195%" height="15" fill="rgb(214,135,41)" fg:x="388" fg:w="1"/><text x="7.8222%" y="175.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force::_{{closure}} (7 samples, 0.14%)</title><rect x="7.5917%" y="357" width="0.1366%" height="15" fill="rgb(237,67,25)" fg:x="389" fg:w="7"/><text x="7.8417%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force_::_{{closure}} (3 samples, 0.06%)</title><rect x="7.7283%" y="357" width="0.0585%" height="15" fill="rgb(222,189,50)" fg:x="396" fg:w="3"/><text x="7.9783%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended (6 samples, 0.12%)</title><rect x="7.7869%" y="357" width="0.1171%" height="15" fill="rgb(245,148,34)" fg:x="399" fg:w="6"/><text x="8.0369%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (5 samples, 0.10%)</title><rect x="7.8064%" y="341" width="0.0976%" height="15" fill="rgb(222,29,6)" fg:x="400" fg:w="5"/><text x="8.0564%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.10%)</title><rect x="7.8064%" y="325" width="0.0976%" height="15" fill="rgb(221,189,43)" fg:x="400" fg:w="5"/><text x="8.0564%" y="335.50"></text></g><g><title>&lt;snix_eval::value::function::Lambda as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="7.9040%" y="341" width="0.0195%" height="15" fill="rgb(207,36,27)" fg:x="405" fg:w="1"/><text x="8.1540%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.16%)</title><rect x="7.9235%" y="341" width="0.1561%" height="15" fill="rgb(217,90,24)" fg:x="406" fg:w="8"/><text x="8.1735%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.16%)</title><rect x="7.9235%" y="325" width="0.1561%" height="15" fill="rgb(224,66,35)" fg:x="406" fg:w="8"/><text x="8.1735%" y="335.50"></text></g><g><title>snix_eval::chunk::Chunk::push_constant (3 samples, 0.06%)</title><rect x="8.0796%" y="341" width="0.0585%" height="15" fill="rgb(221,13,50)" fg:x="414" fg:w="3"/><text x="8.3296%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="8.0796%" y="325" width="0.0585%" height="15" fill="rgb(236,68,49)" fg:x="414" fg:w="3"/><text x="8.3296%" y="335.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="8.0991%" y="309" width="0.0390%" height="15" fill="rgb(229,146,28)" fg:x="415" fg:w="2"/><text x="8.3491%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.04%)</title><rect x="8.1577%" y="309" width="0.0390%" height="15" fill="rgb(225,31,38)" fg:x="418" fg:w="2"/><text x="8.4077%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (2 samples, 0.04%)</title><rect x="8.1577%" y="293" width="0.0390%" height="15" fill="rgb(250,208,3)" fg:x="418" fg:w="2"/><text x="8.4077%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="8.1382%" y="325" width="0.0781%" height="15" fill="rgb(246,54,23)" fg:x="417" fg:w="4"/><text x="8.3882%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="8.1967%" y="309" width="0.0195%" height="15" fill="rgb(243,76,11)" fg:x="420" fg:w="1"/><text x="8.4467%" y="319.50"></text></g><g><title>&lt;codemap::Span as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="8.2358%" y="309" width="0.0195%" height="15" fill="rgb(245,21,50)" fg:x="422" fg:w="1"/><text x="8.4858%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="8.2553%" y="309" width="0.0195%" height="15" fill="rgb(228,9,43)" fg:x="423" fg:w="1"/><text x="8.5053%" y="319.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended_call (20 samples, 0.39%)</title><rect x="7.9040%" y="357" width="0.3903%" height="15" fill="rgb(208,100,47)" fg:x="405" fg:w="20"/><text x="8.1540%" y="367.50"></text></g><g><title>snix_eval::chunk::Chunk::push_op (8 samples, 0.16%)</title><rect x="8.1382%" y="341" width="0.1561%" height="15" fill="rgb(232,26,8)" fg:x="417" fg:w="8"/><text x="8.3882%" y="351.50"></text></g><g><title>snix_eval::chunk::Chunk::push_span (4 samples, 0.08%)</title><rect x="8.2162%" y="325" width="0.0781%" height="15" fill="rgb(216,166,38)" fg:x="421" fg:w="4"/><text x="8.4662%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last_mut (1 samples, 0.02%)</title><rect x="8.2748%" y="309" width="0.0195%" height="15" fill="rgb(251,202,51)" fg:x="424" fg:w="1"/><text x="8.5248%" y="319.50"></text></g><g><title>snix_eval::value::thunk::Thunk::upvalues_mut (1 samples, 0.02%)</title><rect x="8.2943%" y="357" width="0.0195%" height="15" fill="rgb(254,216,34)" fg:x="425" fg:w="1"/><text x="8.5443%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="8.2943%" y="341" width="0.0195%" height="15" fill="rgb(251,32,27)" fg:x="425" fg:w="1"/><text x="8.5443%" y="351.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="8.2943%" y="325" width="0.0195%" height="15" fill="rgb(208,127,28)" fg:x="425" fg:w="1"/><text x="8.5443%" y="335.50"></text></g><g><title>snix_eval::vm::CallFrame::inc_ip (4 samples, 0.08%)</title><rect x="8.3138%" y="357" width="0.0781%" height="15" fill="rgb(224,137,22)" fg:x="426" fg:w="4"/><text x="8.5638%" y="367.50"></text></g><g><title>snix_eval::vm::CallFrame::chunk (3 samples, 0.06%)</title><rect x="8.3333%" y="341" width="0.0585%" height="15" fill="rgb(254,70,32)" fg:x="427" fg:w="3"/><text x="8.5833%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="8.3333%" y="325" width="0.0585%" height="15" fill="rgb(229,75,37)" fg:x="427" fg:w="3"/><text x="8.5833%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="8.3333%" y="309" width="0.0585%" height="15" fill="rgb(252,64,23)" fg:x="427" fg:w="3"/><text x="8.5833%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="8.3333%" y="293" width="0.0585%" height="15" fill="rgb(232,162,48)" fg:x="427" fg:w="3"/><text x="8.5833%" y="303.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (1 samples, 0.02%)</title><rect x="8.3919%" y="357" width="0.0195%" height="15" fill="rgb(246,160,12)" fg:x="430" fg:w="1"/><text x="8.6419%" y="367.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="8.4504%" y="341" width="0.0195%" height="15" fill="rgb(247,166,0)" fg:x="433" fg:w="1"/><text x="8.7004%" y="351.50"></text></g><g><title>snix_eval::vm::generators::request_force::_{{closure}} (4 samples, 0.08%)</title><rect x="8.4114%" y="357" width="0.0781%" height="15" fill="rgb(249,219,21)" fg:x="431" fg:w="4"/><text x="8.6614%" y="367.50"></text></g><g><title>genawaiter::core::Co&lt;A&gt;::yield_ (1 samples, 0.02%)</title><rect x="8.4699%" y="341" width="0.0195%" height="15" fill="rgb(205,209,3)" fg:x="434" fg:w="1"/><text x="8.7199%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.02%)</title><rect x="8.4699%" y="325" width="0.0195%" height="15" fill="rgb(243,44,1)" fg:x="434" fg:w="1"/><text x="8.7199%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="8.4699%" y="309" width="0.0195%" height="15" fill="rgb(206,159,16)" fg:x="434" fg:w="1"/><text x="8.7199%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="8.4699%" y="293" width="0.0195%" height="15" fill="rgb(244,77,30)" fg:x="434" fg:w="1"/><text x="8.7199%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="8.4699%" y="277" width="0.0195%" height="15" fill="rgb(218,69,12)" fg:x="434" fg:w="1"/><text x="8.7199%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="9.3091%" y="325" width="0.0390%" height="15" fill="rgb(212,87,7)" fg:x="477" fg:w="2"/><text x="9.5591%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2 samples, 0.04%)</title><rect x="9.3091%" y="309" width="0.0390%" height="15" fill="rgb(245,114,25)" fg:x="477" fg:w="2"/><text x="9.5591%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (7 samples, 0.14%)</title><rect x="9.3482%" y="325" width="0.1366%" height="15" fill="rgb(210,61,42)" fg:x="479" fg:w="7"/><text x="9.5982%" y="335.50"></text></g><g><title>core::ptr::read (7 samples, 0.14%)</title><rect x="9.3482%" y="309" width="0.1366%" height="15" fill="rgb(211,52,33)" fg:x="479" fg:w="7"/><text x="9.5982%" y="319.50"></text></g><g><title>snix_eval::vm::Frame::span (3 samples, 0.06%)</title><rect x="9.4848%" y="325" width="0.0585%" height="15" fill="rgb(234,58,33)" fg:x="486" fg:w="3"/><text x="9.7348%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="9.8165%" y="309" width="0.0390%" height="15" fill="rgb(220,115,36)" fg:x="503" fg:w="2"/><text x="10.0665%" y="319.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.04%)</title><rect x="9.8165%" y="293" width="0.0390%" height="15" fill="rgb(243,153,54)" fg:x="503" fg:w="2"/><text x="10.0665%" y="303.50"></text></g><g><title>core::intrinsics::unlikely (2 samples, 0.04%)</title><rect x="9.8165%" y="277" width="0.0390%" height="15" fill="rgb(251,47,18)" fg:x="503" fg:w="2"/><text x="10.0665%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="9.8556%" y="309" width="0.0195%" height="15" fill="rgb(242,102,42)" fg:x="505" fg:w="1"/><text x="10.1056%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="9.8556%" y="293" width="0.0195%" height="15" fill="rgb(234,31,38)" fg:x="505" fg:w="1"/><text x="10.1056%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="9.8556%" y="277" width="0.0195%" height="15" fill="rgb(221,117,51)" fg:x="505" fg:w="1"/><text x="10.1056%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.8556%" y="261" width="0.0195%" height="15" fill="rgb(212,20,18)" fg:x="505" fg:w="1"/><text x="10.1056%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;snix_eval::value::Value,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="9.8556%" y="245" width="0.0195%" height="15" fill="rgb(245,133,36)" fg:x="505" fg:w="1"/><text x="10.1056%" y="255.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.8556%" y="229" width="0.0195%" height="15" fill="rgb(212,6,19)" fg:x="505" fg:w="1"/><text x="10.1056%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="9.8556%" y="213" width="0.0195%" height="15" fill="rgb(218,1,36)" fg:x="505" fg:w="1"/><text x="10.1056%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.8556%" y="197" width="0.0195%" height="15" fill="rgb(246,84,54)" fg:x="505" fg:w="1"/><text x="10.1056%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.02%)</title><rect x="9.8556%" y="181" width="0.0195%" height="15" fill="rgb(242,110,6)" fg:x="505" fg:w="1"/><text x="10.1056%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="9.8556%" y="165" width="0.0195%" height="15" fill="rgb(214,47,5)" fg:x="505" fg:w="1"/><text x="10.1056%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="9.8556%" y="149" width="0.0195%" height="15" fill="rgb(218,159,25)" fg:x="505" fg:w="1"/><text x="10.1056%" y="159.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="9.8556%" y="133" width="0.0195%" height="15" fill="rgb(215,211,28)" fg:x="505" fg:w="1"/><text x="10.1056%" y="143.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="9.8556%" y="117" width="0.0195%" height="15" fill="rgb(238,59,32)" fg:x="505" fg:w="1"/><text x="10.1056%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="9.8751%" y="309" width="0.0195%" height="15" fill="rgb(226,82,3)" fg:x="506" fg:w="1"/><text x="10.1251%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="9.8751%" y="293" width="0.0195%" height="15" fill="rgb(240,164,32)" fg:x="506" fg:w="1"/><text x="10.1251%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="9.8751%" y="277" width="0.0195%" height="15" fill="rgb(232,46,7)" fg:x="506" fg:w="1"/><text x="10.1251%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="9.8946%" y="309" width="0.0195%" height="15" fill="rgb(229,129,53)" fg:x="507" fg:w="1"/><text x="10.1446%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="9.8946%" y="293" width="0.0195%" height="15" fill="rgb(234,188,29)" fg:x="507" fg:w="1"/><text x="10.1446%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="9.8946%" y="277" width="0.0195%" height="15" fill="rgb(246,141,4)" fg:x="507" fg:w="1"/><text x="10.1446%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="9.8946%" y="261" width="0.0195%" height="15" fill="rgb(229,23,39)" fg:x="507" fg:w="1"/><text x="10.1446%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="9.8946%" y="245" width="0.0195%" height="15" fill="rgb(206,12,3)" fg:x="507" fg:w="1"/><text x="10.1446%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="9.8946%" y="229" width="0.0195%" height="15" fill="rgb(252,226,20)" fg:x="507" fg:w="1"/><text x="10.1446%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="9.8946%" y="213" width="0.0195%" height="15" fill="rgb(216,123,35)" fg:x="507" fg:w="1"/><text x="10.1446%" y="223.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="9.8946%" y="197" width="0.0195%" height="15" fill="rgb(212,68,40)" fg:x="507" fg:w="1"/><text x="10.1446%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.23%)</title><rect x="9.9141%" y="309" width="0.2342%" height="15" fill="rgb(254,125,32)" fg:x="508" fg:w="12"/><text x="10.1641%" y="319.50"></text></g><g><title>core::ptr::write (10 samples, 0.20%)</title><rect x="9.9532%" y="293" width="0.1952%" height="15" fill="rgb(253,97,22)" fg:x="510" fg:w="10"/><text x="10.2032%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="10.1483%" y="309" width="0.0195%" height="15" fill="rgb(241,101,14)" fg:x="520" fg:w="1"/><text x="10.3983%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="10.1483%" y="293" width="0.0195%" height="15" fill="rgb(238,103,29)" fg:x="520" fg:w="1"/><text x="10.3983%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="10.1483%" y="277" width="0.0195%" height="15" fill="rgb(233,195,47)" fg:x="520" fg:w="1"/><text x="10.3983%" y="287.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::populate_upvalues (7 samples, 0.14%)</title><rect x="10.1678%" y="309" width="0.1366%" height="15" fill="rgb(246,218,30)" fg:x="521" fg:w="7"/><text x="10.4178%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.08%)</title><rect x="10.2264%" y="293" width="0.0781%" height="15" fill="rgb(219,145,47)" fg:x="524" fg:w="4"/><text x="10.4764%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.08%)</title><rect x="10.2264%" y="277" width="0.0781%" height="15" fill="rgb(243,12,26)" fg:x="524" fg:w="4"/><text x="10.4764%" y="287.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::push_call_frame (3 samples, 0.06%)</title><rect x="10.3044%" y="309" width="0.0585%" height="15" fill="rgb(214,87,16)" fg:x="528" fg:w="3"/><text x="10.5544%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="10.3044%" y="293" width="0.0585%" height="15" fill="rgb(208,99,42)" fg:x="528" fg:w="3"/><text x="10.5544%" y="303.50"></text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="10.3044%" y="277" width="0.0585%" height="15" fill="rgb(253,99,2)" fg:x="528" fg:w="3"/><text x="10.5544%" y="287.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (51 samples, 1.00%)</title><rect x="9.5433%" y="325" width="0.9953%" height="15" fill="rgb(220,168,23)" fg:x="489" fg:w="51"/><text x="9.7933%" y="335.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator (9 samples, 0.18%)</title><rect x="10.3630%" y="309" width="0.1756%" height="15" fill="rgb(242,38,24)" fg:x="531" fg:w="9"/><text x="10.6130%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.18%)</title><rect x="10.3630%" y="293" width="0.1756%" height="15" fill="rgb(225,182,9)" fg:x="531" fg:w="9"/><text x="10.6130%" y="303.50"></text></g><g><title>core::ptr::write (9 samples, 0.18%)</title><rect x="10.3630%" y="277" width="0.1756%" height="15" fill="rgb(243,178,37)" fg:x="531" fg:w="9"/><text x="10.6130%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="10.5386%" y="309" width="0.0195%" height="15" fill="rgb(232,139,19)" fg:x="540" fg:w="1"/><text x="10.7886%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="10.5386%" y="293" width="0.0195%" height="15" fill="rgb(225,201,24)" fg:x="540" fg:w="1"/><text x="10.7886%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="10.5582%" y="309" width="0.0195%" height="15" fill="rgb(221,47,46)" fg:x="541" fg:w="1"/><text x="10.8082%" y="319.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::resume_with (8 samples, 0.16%)</title><rect x="10.5777%" y="309" width="0.1561%" height="15" fill="rgb(249,23,13)" fg:x="542" fg:w="8"/><text x="10.8277%" y="319.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (6 samples, 0.12%)</title><rect x="10.6167%" y="293" width="0.1171%" height="15" fill="rgb(219,9,5)" fg:x="544" fg:w="6"/><text x="10.8667%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.12%)</title><rect x="10.6167%" y="277" width="0.1171%" height="15" fill="rgb(254,171,16)" fg:x="544" fg:w="6"/><text x="10.8667%" y="287.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="10.6167%" y="261" width="0.1171%" height="15" fill="rgb(230,171,20)" fg:x="544" fg:w="6"/><text x="10.8667%" y="271.50"></text></g><g><title>core::ptr::write (6 samples, 0.12%)</title><rect x="10.6167%" y="245" width="0.1171%" height="15" fill="rgb(210,71,41)" fg:x="544" fg:w="6"/><text x="10.8667%" y="255.50"></text></g><g><title>snix_eval::vm::run_lambda (116 samples, 2.26%)</title><rect x="8.4895%" y="357" width="2.2639%" height="15" fill="rgb(206,173,20)" fg:x="435" fg:w="116"/><text x="8.7395%" y="367.50">s..</text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (116 samples, 2.26%)</title><rect x="8.4895%" y="341" width="2.2639%" height="15" fill="rgb(233,88,34)" fg:x="435" fg:w="116"/><text x="8.7395%" y="351.50">s..</text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (11 samples, 0.21%)</title><rect x="10.5386%" y="325" width="0.2147%" height="15" fill="rgb(223,209,46)" fg:x="540" fg:w="11"/><text x="10.7886%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::stack_pop (1 samples, 0.02%)</title><rect x="10.7338%" y="309" width="0.0195%" height="15" fill="rgb(250,43,18)" fg:x="550" fg:w="1"/><text x="10.9838%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="10.7338%" y="293" width="0.0195%" height="15" fill="rgb(208,13,10)" fg:x="550" fg:w="1"/><text x="10.9838%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="11.1046%" y="341" width="0.0390%" height="15" fill="rgb(212,200,36)" fg:x="569" fg:w="2"/><text x="11.3546%" y="351.50"></text></g><g><title>mi_free_block_mt (4 samples, 0.08%)</title><rect x="11.1436%" y="341" width="0.0781%" height="15" fill="rgb(225,90,30)" fg:x="571" fg:w="4"/><text x="11.3936%" y="351.50"></text></g><g><title>mi_option_is_enabled (4 samples, 0.08%)</title><rect x="11.1436%" y="325" width="0.0781%" height="15" fill="rgb(236,182,39)" fg:x="571" fg:w="4"/><text x="11.3936%" y="335.50"></text></g><g><title>__expf128_table (4 samples, 0.08%)</title><rect x="11.1436%" y="309" width="0.0781%" height="15" fill="rgb(212,144,35)" fg:x="571" fg:w="4"/><text x="11.3936%" y="319.50"></text></g><g><title>mi_option_get (4 samples, 0.08%)</title><rect x="11.1436%" y="293" width="0.0781%" height="15" fill="rgb(228,63,44)" fg:x="571" fg:w="4"/><text x="11.3936%" y="303.50"></text></g><g><title>mi_free_generic_mt (2 samples, 0.04%)</title><rect x="11.2217%" y="341" width="0.0390%" height="15" fill="rgb(228,109,6)" fg:x="575" fg:w="2"/><text x="11.4717%" y="351.50"></text></g><g><title>_mi_page_ptr_unalign (2 samples, 0.04%)</title><rect x="11.2217%" y="325" width="0.0390%" height="15" fill="rgb(238,117,24)" fg:x="575" fg:w="2"/><text x="11.4717%" y="335.50"></text></g><g><title>&lt;std::thread::spawnhook::SpawnHooks as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="11.2802%" y="325" width="0.0390%" height="15" fill="rgb(242,26,26)" fg:x="578" fg:w="2"/><text x="11.5302%" y="335.50"></text></g><g><title>_ZN4core3ptr164drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$$LP$$RP$$u2b$core..marker..Send$GT$$u5d$$GT$17h07c8b6ba8701aba3E.llvm.7523108178467149159 (1 samples, 0.02%)</title><rect x="11.3193%" y="325" width="0.0195%" height="15" fill="rgb(221,92,48)" fg:x="580" fg:w="1"/><text x="11.5693%" y="335.50"></text></g><g><title>__libc_calloc (6 samples, 0.12%)</title><rect x="11.4169%" y="309" width="0.1171%" height="15" fill="rgb(209,209,32)" fg:x="585" fg:w="6"/><text x="11.6669%" y="319.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="11.4754%" y="293" width="0.0585%" height="15" fill="rgb(221,70,22)" fg:x="588" fg:w="3"/><text x="11.7254%" y="303.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (43 samples, 0.84%)</title><rect x="10.7533%" y="357" width="0.8392%" height="15" fill="rgb(248,145,5)" fg:x="551" fg:w="43"/><text x="11.0033%" y="367.50"></text></g><g><title>std::thread::spawnhook::ChildSpawnHooks::run (17 samples, 0.33%)</title><rect x="11.2607%" y="341" width="0.3318%" height="15" fill="rgb(226,116,26)" fg:x="577" fg:w="17"/><text x="11.5107%" y="351.50"></text></g><g><title>__cxa_thread_atexit_impl (13 samples, 0.25%)</title><rect x="11.3388%" y="325" width="0.2537%" height="15" fill="rgb(244,5,17)" fg:x="581" fg:w="13"/><text x="11.5888%" y="335.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (3 samples, 0.06%)</title><rect x="11.5340%" y="309" width="0.0585%" height="15" fill="rgb(252,159,33)" fg:x="591" fg:w="3"/><text x="11.7840%" y="319.50"></text></g><g><title>__GI___sigaltstack (5 samples, 0.10%)</title><rect x="11.5925%" y="341" width="0.0976%" height="15" fill="rgb(206,71,0)" fg:x="594" fg:w="5"/><text x="11.8425%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="11.6511%" y="325" width="0.0390%" height="15" fill="rgb(233,118,54)" fg:x="597" fg:w="2"/><text x="11.9011%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="11.6511%" y="309" width="0.0390%" height="15" fill="rgb(234,83,48)" fg:x="597" fg:w="2"/><text x="11.9011%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.6706%" y="293" width="0.0195%" height="15" fill="rgb(228,3,54)" fg:x="598" fg:w="1"/><text x="11.9206%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.6706%" y="277" width="0.0195%" height="15" fill="rgb(226,155,13)" fg:x="598" fg:w="1"/><text x="11.9206%" y="287.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (7 samples, 0.14%)</title><rect x="11.5925%" y="357" width="0.1366%" height="15" fill="rgb(241,28,37)" fg:x="594" fg:w="7"/><text x="11.8425%" y="367.50"></text></g><g><title>__mprotect (2 samples, 0.04%)</title><rect x="11.6901%" y="341" width="0.0390%" height="15" fill="rgb(233,93,10)" fg:x="599" fg:w="2"/><text x="11.9401%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="11.6901%" y="325" width="0.0390%" height="15" fill="rgb(225,113,19)" fg:x="599" fg:w="2"/><text x="11.9401%" y="335.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (3 samples, 0.06%)</title><rect x="11.7291%" y="357" width="0.0585%" height="15" fill="rgb(241,2,18)" fg:x="601" fg:w="3"/><text x="11.9791%" y="367.50"></text></g><g><title>__GI___nptl_deallocate_stack (1 samples, 0.02%)</title><rect x="11.7877%" y="309" width="0.0195%" height="15" fill="rgb(228,207,21)" fg:x="604" fg:w="1"/><text x="12.0377%" y="319.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 0.12%)</title><rect x="11.7877%" y="357" width="0.1171%" height="15" fill="rgb(213,211,35)" fg:x="604" fg:w="6"/><text x="12.0377%" y="367.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (6 samples, 0.12%)</title><rect x="11.7877%" y="341" width="0.1171%" height="15" fill="rgb(209,83,10)" fg:x="604" fg:w="6"/><text x="12.0377%" y="351.50"></text></g><g><title>__pthread_clockjoin_ex (6 samples, 0.12%)</title><rect x="11.7877%" y="325" width="0.1171%" height="15" fill="rgb(209,164,1)" fg:x="604" fg:w="6"/><text x="12.0377%" y="335.50"></text></g><g><title>__futex_abstimed_wait_common (5 samples, 0.10%)</title><rect x="11.8072%" y="309" width="0.0976%" height="15" fill="rgb(213,184,43)" fg:x="605" fg:w="5"/><text x="12.0572%" y="319.50"></text></g><g><title>__GI___pthread_disable_asynccancel (4 samples, 0.08%)</title><rect x="11.8267%" y="293" width="0.0781%" height="15" fill="rgb(231,61,34)" fg:x="606" fg:w="4"/><text x="12.0767%" y="303.50"></text></g><g><title>std::thread::current::set_current (2 samples, 0.04%)</title><rect x="11.9048%" y="357" width="0.0390%" height="15" fill="rgb(235,75,3)" fg:x="610" fg:w="2"/><text x="12.1548%" y="367.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.02%)</title><rect x="11.9438%" y="309" width="0.0195%" height="15" fill="rgb(220,106,47)" fg:x="612" fg:w="1"/><text x="12.1938%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="11.9438%" y="293" width="0.0195%" height="15" fill="rgb(210,196,33)" fg:x="612" fg:w="1"/><text x="12.1938%" y="303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="11.9438%" y="277" width="0.0195%" height="15" fill="rgb(229,154,42)" fg:x="612" fg:w="1"/><text x="12.1938%" y="287.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.02%)</title><rect x="11.9438%" y="261" width="0.0195%" height="15" fill="rgb(228,114,26)" fg:x="612" fg:w="1"/><text x="12.1938%" y="271.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="11.9438%" y="245" width="0.0195%" height="15" fill="rgb(208,144,1)" fg:x="612" fg:w="1"/><text x="12.1938%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="11.9438%" y="229" width="0.0195%" height="15" fill="rgb(239,112,37)" fg:x="612" fg:w="1"/><text x="12.1938%" y="239.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.04%)</title><rect x="11.9438%" y="357" width="0.0390%" height="15" fill="rgb(210,96,50)" fg:x="612" fg:w="2"/><text x="12.1938%" y="367.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.04%)</title><rect x="11.9438%" y="341" width="0.0390%" height="15" fill="rgb(222,178,2)" fg:x="612" fg:w="2"/><text x="12.1938%" y="351.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.04%)</title><rect x="11.9438%" y="325" width="0.0390%" height="15" fill="rgb(226,74,18)" fg:x="612" fg:w="2"/><text x="12.1938%" y="335.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (1 samples, 0.02%)</title><rect x="11.9633%" y="309" width="0.0195%" height="15" fill="rgb(225,67,54)" fg:x="613" fg:w="1"/><text x="12.2133%" y="319.50"></text></g><g><title>snix_store::import::import_path_as_nar_ca::_{{closure}} (1 samples, 0.02%)</title><rect x="11.9633%" y="293" width="0.0195%" height="15" fill="rgb(251,92,32)" fg:x="613" fg:w="1"/><text x="12.2133%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.02%)</title><rect x="11.9828%" y="357" width="0.0195%" height="15" fill="rgb(228,149,22)" fg:x="614" fg:w="1"/><text x="12.2328%" y="367.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="11.9828%" y="341" width="0.0195%" height="15" fill="rgb(243,54,13)" fg:x="614" fg:w="1"/><text x="12.2328%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="325" width="0.0195%" height="15" fill="rgb(243,180,28)" fg:x="614" fg:w="1"/><text x="12.2328%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="309" width="0.0195%" height="15" fill="rgb(208,167,24)" fg:x="614" fg:w="1"/><text x="12.2328%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="293" width="0.0195%" height="15" fill="rgb(245,73,45)" fg:x="614" fg:w="1"/><text x="12.2328%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="277" width="0.0195%" height="15" fill="rgb(237,203,48)" fg:x="614" fg:w="1"/><text x="12.2328%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="261" width="0.0195%" height="15" fill="rgb(211,197,16)" fg:x="614" fg:w="1"/><text x="12.2328%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="245" width="0.0195%" height="15" fill="rgb(243,99,51)" fg:x="614" fg:w="1"/><text x="12.2328%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::metadata::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.9828%" y="229" width="0.0195%" height="15" fill="rgb(215,123,29)" fg:x="614" fg:w="1"/><text x="12.2328%" y="239.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.02%)</title><rect x="12.0023%" y="357" width="0.0195%" height="15" fill="rgb(239,186,37)" fg:x="615" fg:w="1"/><text x="12.2523%" y="367.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.02%)</title><rect x="12.0219%" y="357" width="0.0195%" height="15" fill="rgb(252,136,39)" fg:x="616" fg:w="1"/><text x="12.2719%" y="367.50"></text></g><g><title>[unknown] (486 samples, 9.48%)</title><rect x="2.5761%" y="373" width="9.4848%" height="15" fill="rgb(223,213,32)" fg:x="132" fg:w="486"/><text x="2.8261%" y="383.50">[unknown]</text></g><g><title>unicode_width::tables::lookup_width (1 samples, 0.02%)</title><rect x="12.0414%" y="357" width="0.0195%" height="15" fill="rgb(233,115,5)" fg:x="617" fg:w="1"/><text x="12.2914%" y="367.50"></text></g><g><title>_ZN14regex_automata6hybrid3dfa4Lazy10init_cache17h7fcd332de17deaceE.llvm.9501803594880313171 (1 samples, 0.02%)</title><rect x="12.0609%" y="373" width="0.0195%" height="15" fill="rgb(207,226,44)" fg:x="618" fg:w="1"/><text x="12.3109%" y="383.50"></text></g><g><title>_ZN3std3sys12thread_local6native5eager7destroy17h25bdcf9c32cd02e4E.llvm.6788498657682749250 (1 samples, 0.02%)</title><rect x="12.0804%" y="373" width="0.0195%" height="15" fill="rgb(208,126,0)" fg:x="619" fg:w="1"/><text x="12.3304%" y="383.50"></text></g><g><title>_ZN4core3ptr44drop_in_place$LT$snix_eval..value..Value$GT$17hd11c15786f587e8cE.llvm.15992137550008285649 (1 samples, 0.02%)</title><rect x="12.0999%" y="373" width="0.0195%" height="15" fill="rgb(244,66,21)" fg:x="620" fg:w="1"/><text x="12.3499%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17ha1b12083e30814abE.llvm.16348842533310755137 (1 samples, 0.02%)</title><rect x="12.1194%" y="373" width="0.0195%" height="15" fill="rgb(222,97,12)" fg:x="621" fg:w="1"/><text x="12.3694%" y="383.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="12.1194%" y="357" width="0.0195%" height="15" fill="rgb(219,213,19)" fg:x="621" fg:w="1"/><text x="12.3694%" y="367.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="12.1194%" y="341" width="0.0195%" height="15" fill="rgb(252,169,30)" fg:x="621" fg:w="1"/><text x="12.3694%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.02%)</title><rect x="12.1194%" y="325" width="0.0195%" height="15" fill="rgb(206,32,51)" fg:x="621" fg:w="1"/><text x="12.3694%" y="335.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.02%)</title><rect x="12.1194%" y="309" width="0.0195%" height="15" fill="rgb(250,172,42)" fg:x="621" fg:w="1"/><text x="12.3694%" y="319.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.02%)</title><rect x="12.1194%" y="293" width="0.0195%" height="15" fill="rgb(209,34,43)" fg:x="621" fg:w="1"/><text x="12.3694%" y="303.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.02%)</title><rect x="12.1194%" y="277" width="0.0195%" height="15" fill="rgb(223,11,35)" fg:x="621" fg:w="1"/><text x="12.3694%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17he645c99a6f3542f2E.llvm.6282308518855217640 (1 samples, 0.02%)</title><rect x="12.1390%" y="373" width="0.0195%" height="15" fill="rgb(251,219,26)" fg:x="622" fg:w="1"/><text x="12.3890%" y="383.50"></text></g><g><title>_ZN5rowan6cursor8NodeData3new17hfefea863736b5aaeE.llvm.2114494239436949699 (2 samples, 0.04%)</title><rect x="12.1585%" y="373" width="0.0390%" height="15" fill="rgb(231,119,3)" fg:x="623" fg:w="2"/><text x="12.4085%" y="383.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="12.1780%" y="357" width="0.0195%" height="15" fill="rgb(216,97,11)" fg:x="624" fg:w="1"/><text x="12.4280%" y="367.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="12.1780%" y="341" width="0.0195%" height="15" fill="rgb(223,59,9)" fg:x="624" fg:w="1"/><text x="12.4280%" y="351.50"></text></g><g><title>mi_find_page (1 samples, 0.02%)</title><rect x="12.1780%" y="325" width="0.0195%" height="15" fill="rgb(233,93,31)" fg:x="624" fg:w="1"/><text x="12.4280%" y="335.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17h0bd66cd2865749cbE.llvm.12783554947409113215 (2 samples, 0.04%)</title><rect x="12.1975%" y="373" width="0.0390%" height="15" fill="rgb(239,81,33)" fg:x="625" fg:w="2"/><text x="12.4475%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2170%" y="357" width="0.0195%" height="15" fill="rgb(213,120,34)" fg:x="626" fg:w="1"/><text x="12.4670%" y="367.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h58cd14dedff6be09E.llvm.16348842533310755137 (1 samples, 0.02%)</title><rect x="12.2365%" y="373" width="0.0195%" height="15" fill="rgb(243,49,53)" fg:x="627" fg:w="1"/><text x="12.4865%" y="383.50"></text></g><g><title>_ZN7console4ansi24find_ansi_code_exclusive17hd6f99b82adc60620E.llvm.5070163526265238981 (6 samples, 0.12%)</title><rect x="12.2560%" y="373" width="0.1171%" height="15" fill="rgb(247,216,33)" fg:x="628" fg:w="6"/><text x="12.5060%" y="383.50"></text></g><g><title>[unknown] (38 samples, 0.74%)</title><rect x="24.5511%" y="357" width="0.7416%" height="15" fill="rgb(226,26,14)" fg:x="1258" fg:w="38"/><text x="24.8011%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.08%)</title><rect x="25.2147%" y="341" width="0.0781%" height="15" fill="rgb(215,49,53)" fg:x="1292" fg:w="4"/><text x="25.4647%" y="351.50"></text></g><g><title>[unknown] (72 samples, 1.41%)</title><rect x="41.5301%" y="341" width="1.4052%" height="15" fill="rgb(245,162,40)" fg:x="2128" fg:w="72"/><text x="41.7801%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.29%)</title><rect x="42.6425%" y="325" width="0.2927%" height="15" fill="rgb(229,68,17)" fg:x="2185" fg:w="15"/><text x="42.8925%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.10%)</title><rect x="42.8376%" y="309" width="0.0976%" height="15" fill="rgb(213,182,10)" fg:x="2195" fg:w="5"/><text x="43.0876%" y="319.50"></text></g><g><title>_mi_stat_decrease (2 samples, 0.04%)</title><rect x="42.9938%" y="325" width="0.0390%" height="15" fill="rgb(245,125,30)" fg:x="2203" fg:w="2"/><text x="43.2438%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.12%)</title><rect x="43.0523%" y="309" width="0.1171%" height="15" fill="rgb(232,202,2)" fg:x="2206" fg:w="6"/><text x="43.3023%" y="319.50"></text></g><g><title>mi_heap_collect_ex (6 samples, 0.12%)</title><rect x="43.0523%" y="293" width="0.1171%" height="15" fill="rgb(237,140,51)" fg:x="2206" fg:w="6"/><text x="43.3023%" y="303.50"></text></g><g><title>_mi_arena_segment_clear_abandoned_next (1 samples, 0.02%)</title><rect x="43.1499%" y="277" width="0.0195%" height="15" fill="rgb(236,157,25)" fg:x="2211" fg:w="1"/><text x="43.3999%" y="287.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.02%)</title><rect x="43.1694%" y="309" width="0.0195%" height="15" fill="rgb(219,209,0)" fg:x="2212" fg:w="1"/><text x="43.4194%" y="319.50"></text></g><g><title>mi_arenas_try_purge.part.0 (1 samples, 0.02%)</title><rect x="43.1889%" y="309" width="0.0195%" height="15" fill="rgb(240,116,54)" fg:x="2213" fg:w="1"/><text x="43.4389%" y="319.50"></text></g><g><title>_mi_prim_clock_now (1 samples, 0.02%)</title><rect x="43.1889%" y="293" width="0.0195%" height="15" fill="rgb(216,10,36)" fg:x="2213" fg:w="1"/><text x="43.4389%" y="303.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.02%)</title><rect x="43.1889%" y="277" width="0.0195%" height="15" fill="rgb(222,72,44)" fg:x="2213" fg:w="1"/><text x="43.4389%" y="287.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="43.1889%" y="261" width="0.0195%" height="15" fill="rgb(232,159,9)" fg:x="2213" fg:w="1"/><text x="43.4389%" y="271.50"></text></g><g><title>_mi_clock_now (1 samples, 0.02%)</title><rect x="43.2670%" y="277" width="0.0195%" height="15" fill="rgb(210,39,32)" fg:x="2217" fg:w="1"/><text x="43.5170%" y="287.50"></text></g><g><title>_mi_commit_mask_committed_size (1 samples, 0.02%)</title><rect x="43.2865%" y="277" width="0.0195%" height="15" fill="rgb(216,194,45)" fg:x="2218" fg:w="1"/><text x="43.5365%" y="287.50"></text></g><g><title>_mi_page_free (4 samples, 0.08%)</title><rect x="43.3060%" y="277" width="0.0781%" height="15" fill="rgb(218,18,35)" fg:x="2219" fg:w="4"/><text x="43.5560%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="43.5207%" y="229" width="0.0195%" height="15" fill="rgb(207,83,51)" fg:x="2230" fg:w="1"/><text x="43.7707%" y="239.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.08%)</title><rect x="43.5402%" y="229" width="0.0781%" height="15" fill="rgb(225,63,43)" fg:x="2231" fg:w="4"/><text x="43.7902%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="43.5988%" y="213" width="0.0195%" height="15" fill="rgb(207,57,36)" fg:x="2234" fg:w="1"/><text x="43.8488%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="43.5988%" y="197" width="0.0195%" height="15" fill="rgb(216,99,33)" fg:x="2234" fg:w="1"/><text x="43.8488%" y="207.50"></text></g><g><title>_mi_prim_clock_now (12 samples, 0.23%)</title><rect x="43.4231%" y="261" width="0.2342%" height="15" fill="rgb(225,42,16)" fg:x="2225" fg:w="12"/><text x="43.6731%" y="271.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (10 samples, 0.20%)</title><rect x="43.4621%" y="245" width="0.1952%" height="15" fill="rgb(220,201,45)" fg:x="2227" fg:w="10"/><text x="43.7121%" y="255.50"></text></g><g><title>mi_segment_span_free_coalesce (2 samples, 0.04%)</title><rect x="43.6183%" y="229" width="0.0390%" height="15" fill="rgb(225,33,4)" fg:x="2235" fg:w="2"/><text x="43.8683%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="43.6183%" y="213" width="0.0390%" height="15" fill="rgb(224,33,50)" fg:x="2235" fg:w="2"/><text x="43.8683%" y="223.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="43.6183%" y="197" width="0.0390%" height="15" fill="rgb(246,198,51)" fg:x="2235" fg:w="2"/><text x="43.8683%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="43.6183%" y="181" width="0.0390%" height="15" fill="rgb(205,22,4)" fg:x="2235" fg:w="2"/><text x="43.8683%" y="191.50"></text></g><g><title>_mi_prim_clock_now (12 samples, 0.23%)</title><rect x="43.8134%" y="229" width="0.2342%" height="15" fill="rgb(206,3,8)" fg:x="2245" fg:w="12"/><text x="44.0634%" y="239.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (10 samples, 0.20%)</title><rect x="43.8525%" y="213" width="0.1952%" height="15" fill="rgb(251,23,15)" fg:x="2247" fg:w="10"/><text x="44.1025%" y="223.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.12%)</title><rect x="43.9305%" y="197" width="0.1171%" height="15" fill="rgb(252,88,28)" fg:x="2251" fg:w="6"/><text x="44.1805%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect x="43.9891%" y="181" width="0.0585%" height="15" fill="rgb(212,127,14)" fg:x="2254" fg:w="3"/><text x="44.2391%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect x="43.9891%" y="165" width="0.0585%" height="15" fill="rgb(247,145,37)" fg:x="2254" fg:w="3"/><text x="44.2391%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="44.0086%" y="149" width="0.0390%" height="15" fill="rgb(209,117,53)" fg:x="2255" fg:w="2"/><text x="44.2586%" y="159.50"></text></g><g><title>_mi_segment_page_free (36 samples, 0.70%)</title><rect x="43.3841%" y="277" width="0.7026%" height="15" fill="rgb(212,90,42)" fg:x="2223" fg:w="36"/><text x="43.6341%" y="287.50"></text></g><g><title>mi_segment_page_clear (22 samples, 0.43%)</title><rect x="43.6573%" y="261" width="0.4294%" height="15" fill="rgb(218,164,37)" fg:x="2237" fg:w="22"/><text x="43.9073%" y="271.50"></text></g><g><title>mi_segment_span_free_coalesce (21 samples, 0.41%)</title><rect x="43.6768%" y="245" width="0.4098%" height="15" fill="rgb(246,65,34)" fg:x="2238" fg:w="21"/><text x="43.9268%" y="255.50"></text></g><g><title>mi_segment_commit_mask.part.0 (2 samples, 0.04%)</title><rect x="44.0476%" y="229" width="0.0390%" height="15" fill="rgb(231,100,33)" fg:x="2257" fg:w="2"/><text x="44.2976%" y="239.50"></text></g><g><title>_mi_arena_free (3 samples, 0.06%)</title><rect x="44.0867%" y="261" width="0.0585%" height="15" fill="rgb(228,126,14)" fg:x="2259" fg:w="3"/><text x="44.3367%" y="271.50"></text></g><g><title>_mi_bitmap_unclaim_across (1 samples, 0.02%)</title><rect x="44.1257%" y="245" width="0.0195%" height="15" fill="rgb(215,173,21)" fg:x="2261" fg:w="1"/><text x="44.3757%" y="255.50"></text></g><g><title>_mi_preloading (1 samples, 0.02%)</title><rect x="44.1452%" y="261" width="0.0195%" height="15" fill="rgb(210,6,40)" fg:x="2262" fg:w="1"/><text x="44.3952%" y="271.50"></text></g><g><title>_mi_heap_collect_retired (51 samples, 1.00%)</title><rect x="43.2475%" y="293" width="0.9953%" height="15" fill="rgb(212,48,18)" fg:x="2216" fg:w="51"/><text x="43.4975%" y="303.50"></text></g><g><title>mi_segment_free.isra.0 (8 samples, 0.16%)</title><rect x="44.0867%" y="277" width="0.1561%" height="15" fill="rgb(230,214,11)" fg:x="2259" fg:w="8"/><text x="44.3367%" y="287.50"></text></g><g><title>mi_arenas_try_purge.part.0 (4 samples, 0.08%)</title><rect x="44.1647%" y="261" width="0.0781%" height="15" fill="rgb(254,105,39)" fg:x="2263" fg:w="4"/><text x="44.4147%" y="271.50"></text></g><g><title>_mi_prim_clock_now (3 samples, 0.06%)</title><rect x="44.1842%" y="245" width="0.0585%" height="15" fill="rgb(245,158,5)" fg:x="2264" fg:w="3"/><text x="44.4342%" y="255.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.04%)</title><rect x="44.2037%" y="229" width="0.0390%" height="15" fill="rgb(249,208,11)" fg:x="2265" fg:w="2"/><text x="44.4537%" y="239.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="44.2233%" y="213" width="0.0195%" height="15" fill="rgb(210,39,28)" fg:x="2266" fg:w="1"/><text x="44.4733%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2233%" y="197" width="0.0195%" height="15" fill="rgb(211,56,53)" fg:x="2266" fg:w="1"/><text x="44.4733%" y="207.50"></text></g><g><title>_mi_free_delayed_block (2 samples, 0.04%)</title><rect x="44.2623%" y="261" width="0.0390%" height="15" fill="rgb(226,201,30)" fg:x="2268" fg:w="2"/><text x="44.5123%" y="271.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.02%)</title><rect x="44.2818%" y="245" width="0.0195%" height="15" fill="rgb(239,101,34)" fg:x="2269" fg:w="1"/><text x="44.5318%" y="255.50"></text></g><g><title>_mi_heap_delayed_free_all (4 samples, 0.08%)</title><rect x="44.2428%" y="293" width="0.0781%" height="15" fill="rgb(226,209,5)" fg:x="2267" fg:w="4"/><text x="44.4928%" y="303.50"></text></g><g><title>_mi_heap_delayed_free_partial (4 samples, 0.08%)</title><rect x="44.2428%" y="277" width="0.0781%" height="15" fill="rgb(250,105,47)" fg:x="2267" fg:w="4"/><text x="44.4928%" y="287.50"></text></g><g><title>_mi_page_retire (1 samples, 0.02%)</title><rect x="44.3013%" y="261" width="0.0195%" height="15" fill="rgb(230,72,3)" fg:x="2270" fg:w="1"/><text x="44.5513%" y="271.50"></text></g><g><title>_mi_is_main_thread (1 samples, 0.02%)</title><rect x="44.3208%" y="293" width="0.0195%" height="15" fill="rgb(232,218,39)" fg:x="2271" fg:w="1"/><text x="44.5708%" y="303.50"></text></g><g><title>mi_heap_collect_ex (59 samples, 1.15%)</title><rect x="43.2084%" y="309" width="1.1514%" height="15" fill="rgb(248,166,6)" fg:x="2214" fg:w="59"/><text x="43.4584%" y="319.50"></text></g><g><title>_mi_page_try_use_delayed_free (1 samples, 0.02%)</title><rect x="44.3404%" y="293" width="0.0195%" height="15" fill="rgb(247,89,20)" fg:x="2272" fg:w="1"/><text x="44.5904%" y="303.50"></text></g><g><title>mi_stats_merge_from.part.0 (1 samples, 0.02%)</title><rect x="44.3599%" y="309" width="0.0195%" height="15" fill="rgb(248,130,54)" fg:x="2273" fg:w="1"/><text x="44.6099%" y="319.50"></text></g><g><title>__GI___nptl_deallocate_tsd (75 samples, 1.46%)</title><rect x="42.9352%" y="341" width="1.4637%" height="15" fill="rgb(234,196,4)" fg:x="2200" fg:w="75"/><text x="43.1852%" y="351.50"></text></g><g><title>_mi_thread_done (70 samples, 1.37%)</title><rect x="43.0328%" y="325" width="1.3661%" height="15" fill="rgb(250,143,31)" fg:x="2205" fg:w="70"/><text x="43.2828%" y="335.50"></text></g><g><title>pthread_setspecific@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="44.3794%" y="309" width="0.0195%" height="15" fill="rgb(211,110,34)" fg:x="2274" fg:w="1"/><text x="44.6294%" y="319.50"></text></g><g><title>&lt;std::thread::spawnhook::SpawnHooks as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="44.5941%" y="325" width="0.0390%" height="15" fill="rgb(215,124,48)" fg:x="2285" fg:w="2"/><text x="44.8441%" y="335.50"></text></g><g><title>__call_tls_dtors (15 samples, 0.29%)</title><rect x="44.3989%" y="341" width="0.2927%" height="15" fill="rgb(216,46,13)" fg:x="2275" fg:w="15"/><text x="44.6489%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.06%)</title><rect x="44.6331%" y="325" width="0.0585%" height="15" fill="rgb(205,184,25)" fg:x="2287" fg:w="3"/><text x="44.8831%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="44.6721%" y="309" width="0.0195%" height="15" fill="rgb(228,1,10)" fg:x="2289" fg:w="1"/><text x="44.9221%" y="319.50"></text></g><g><title>__ctype_init (493 samples, 9.62%)</title><rect x="44.6916%" y="341" width="9.6214%" height="15" fill="rgb(213,116,27)" fg:x="2290" fg:w="493"/><text x="44.9416%" y="351.50">__ctype_init</text></g><g><title>[unknown] (25 samples, 0.49%)</title><rect x="53.8251%" y="325" width="0.4879%" height="15" fill="rgb(241,95,50)" fg:x="2758" fg:w="25"/><text x="54.0751%" y="335.50"></text></g><g><title>__glibc_tls_internal_free (1 samples, 0.02%)</title><rect x="54.3326%" y="325" width="0.0195%" height="15" fill="rgb(238,48,32)" fg:x="2784" fg:w="1"/><text x="54.5826%" y="335.50"></text></g><g><title>__libc_dlerror_result_free (1 samples, 0.02%)</title><rect x="54.3521%" y="325" width="0.0195%" height="15" fill="rgb(235,113,49)" fg:x="2785" fg:w="1"/><text x="54.6021%" y="335.50"></text></g><g><title>__res_thread_freeres (3 samples, 0.06%)</title><rect x="54.3716%" y="325" width="0.0585%" height="15" fill="rgb(205,127,43)" fg:x="2786" fg:w="3"/><text x="54.6216%" y="335.50"></text></g><g><title>__resolv_context_freeres (2 samples, 0.04%)</title><rect x="54.3911%" y="309" width="0.0390%" height="15" fill="rgb(250,162,2)" fg:x="2787" fg:w="2"/><text x="54.6411%" y="319.50"></text></g><g><title>__libc_thread_freeres (7 samples, 0.14%)</title><rect x="54.3130%" y="341" width="0.1366%" height="15" fill="rgb(220,13,41)" fg:x="2783" fg:w="7"/><text x="54.5630%" y="351.50"></text></g><g><title>__rpc_thread_destroy (1 samples, 0.02%)</title><rect x="54.4301%" y="325" width="0.0195%" height="15" fill="rgb(249,221,25)" fg:x="2789" fg:w="1"/><text x="54.6801%" y="335.50"></text></g><g><title>__madvise (1 samples, 0.02%)</title><rect x="54.4496%" y="341" width="0.0195%" height="15" fill="rgb(215,208,19)" fg:x="2790" fg:w="1"/><text x="54.6996%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.4496%" y="325" width="0.0195%" height="15" fill="rgb(236,175,2)" fg:x="2790" fg:w="1"/><text x="54.6996%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.4496%" y="309" width="0.0195%" height="15" fill="rgb(241,52,2)" fg:x="2790" fg:w="1"/><text x="54.6996%" y="319.50"></text></g><g><title>__malloc_arena_thread_freeres (5 samples, 0.10%)</title><rect x="54.4692%" y="341" width="0.0976%" height="15" fill="rgb(248,140,14)" fg:x="2791" fg:w="5"/><text x="54.7192%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4 samples, 0.08%)</title><rect x="54.4887%" y="325" width="0.0781%" height="15" fill="rgb(253,22,42)" fg:x="2792" fg:w="4"/><text x="54.7387%" y="335.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="54.5082%" y="309" width="0.0585%" height="15" fill="rgb(234,61,47)" fg:x="2793" fg:w="3"/><text x="54.7582%" y="319.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.02%)</title><rect x="54.5472%" y="293" width="0.0195%" height="15" fill="rgb(208,226,15)" fg:x="2795" fg:w="1"/><text x="54.7972%" y="303.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.02%)</title><rect x="54.5472%" y="277" width="0.0195%" height="15" fill="rgb(217,221,4)" fg:x="2795" fg:w="1"/><text x="54.7972%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="55.0156%" y="325" width="0.0390%" height="15" fill="rgb(212,174,34)" fg:x="2819" fg:w="2"/><text x="55.2656%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="55.5035%" y="309" width="0.0390%" height="15" fill="rgb(253,83,4)" fg:x="2844" fg:w="2"/><text x="55.7535%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.10%)</title><rect x="56.7721%" y="293" width="0.0976%" height="15" fill="rgb(250,195,49)" fg:x="2909" fg:w="5"/><text x="57.0221%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="56.8501%" y="277" width="0.0195%" height="15" fill="rgb(241,192,25)" fg:x="2913" fg:w="1"/><text x="57.1001%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.27%)</title><rect x="64.3833%" y="277" width="0.2732%" height="15" fill="rgb(208,124,10)" fg:x="3299" fg:w="14"/><text x="64.6333%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect x="64.5980%" y="261" width="0.0585%" height="15" fill="rgb(222,33,0)" fg:x="3310" fg:w="3"/><text x="64.8480%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="64.6370%" y="245" width="0.0195%" height="15" fill="rgb(234,209,28)" fg:x="3312" fg:w="1"/><text x="64.8870%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="64.6370%" y="229" width="0.0195%" height="15" fill="rgb(224,11,23)" fg:x="3312" fg:w="1"/><text x="64.8870%" y="239.50"></text></g><g><title>__memmove_avx512_unaligned_erms (121 samples, 2.36%)</title><rect x="66.0812%" y="261" width="2.3614%" height="15" fill="rgb(232,99,1)" fg:x="3386" fg:w="121"/><text x="66.3312%" y="271.50">__..</text></g><g><title>[unknown] (7 samples, 0.14%)</title><rect x="68.3060%" y="245" width="0.1366%" height="15" fill="rgb(237,95,45)" fg:x="3500" fg:w="7"/><text x="68.5560%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="68.4231%" y="229" width="0.0195%" height="15" fill="rgb(208,109,11)" fg:x="3506" fg:w="1"/><text x="68.6731%" y="239.50"></text></g><g><title>__printf_buffer_write (200 samples, 3.90%)</title><rect x="64.6565%" y="277" width="3.9032%" height="15" fill="rgb(216,190,48)" fg:x="3313" fg:w="200"/><text x="64.9065%" y="287.50">__pr..</text></g><g><title>memcpy@@GLIBC_2.14@plt (6 samples, 0.12%)</title><rect x="68.4426%" y="261" width="0.1171%" height="15" fill="rgb(251,171,36)" fg:x="3507" fg:w="6"/><text x="68.6926%" y="271.50"></text></g><g><title>__strchrnul_evex (197 samples, 3.84%)</title><rect x="68.5597%" y="277" width="3.8447%" height="15" fill="rgb(230,62,22)" fg:x="3513" fg:w="197"/><text x="68.8097%" y="287.50">__st..</text></g><g><title>[unknown] (10 samples, 0.20%)</title><rect x="72.2092%" y="261" width="0.1952%" height="15" fill="rgb(225,114,35)" fg:x="3700" fg:w="10"/><text x="72.4592%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="72.3653%" y="245" width="0.0390%" height="15" fill="rgb(215,118,42)" fg:x="3708" fg:w="2"/><text x="72.6153%" y="255.50"></text></g><g><title>__strchrnul_ifunc@plt (20 samples, 0.39%)</title><rect x="72.4044%" y="277" width="0.3903%" height="15" fill="rgb(243,119,21)" fg:x="3710" fg:w="20"/><text x="72.6544%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="72.7752%" y="261" width="0.0195%" height="15" fill="rgb(252,177,53)" fg:x="3729" fg:w="1"/><text x="73.0252%" y="271.50"></text></g><g><title>__printf_buffer (867 samples, 16.92%)</title><rect x="56.8696%" y="293" width="16.9204%" height="15" fill="rgb(237,209,29)" fg:x="2914" fg:w="867"/><text x="57.1196%" y="303.50">__printf_buffer</text></g><g><title>_itoa_word (51 samples, 1.00%)</title><rect x="72.7947%" y="277" width="0.9953%" height="15" fill="rgb(212,65,23)" fg:x="3730" fg:w="51"/><text x="73.0447%" y="287.50"></text></g><g><title>__GI___snprintf (982 samples, 19.16%)</title><rect x="55.0546%" y="325" width="19.1647%" height="15" fill="rgb(230,222,46)" fg:x="2821" fg:w="982"/><text x="55.3046%" y="335.50">__GI___snprintf</text></g><g><title>__vsnprintf_internal (957 samples, 18.68%)</title><rect x="55.5425%" y="309" width="18.6768%" height="15" fill="rgb(215,135,32)" fg:x="2846" fg:w="957"/><text x="55.7925%" y="319.50">__vsnprintf_internal</text></g><g><title>__printf_buffer_done (22 samples, 0.43%)</title><rect x="73.7900%" y="293" width="0.4294%" height="15" fill="rgb(246,101,22)" fg:x="3781" fg:w="22"/><text x="74.0400%" y="303.50"></text></g><g><title>name_stack_maps (1,026 samples, 20.02%)</title><rect x="54.5667%" y="341" width="20.0234%" height="15" fill="rgb(206,107,13)" fg:x="2796" fg:w="1026"/><text x="54.8167%" y="351.50">name_stack_maps</text></g><g><title>__set_vma_name (19 samples, 0.37%)</title><rect x="74.2194%" y="325" width="0.3708%" height="15" fill="rgb(250,100,44)" fg:x="3803" fg:w="19"/><text x="74.4694%" y="335.50"></text></g><g><title>__tunable_get_val (1 samples, 0.02%)</title><rect x="74.5706%" y="309" width="0.0195%" height="15" fill="rgb(231,147,38)" fg:x="3821" fg:w="1"/><text x="74.8206%" y="319.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.02%)</title><rect x="74.5902%" y="341" width="0.0195%" height="15" fill="rgb(229,8,40)" fg:x="3822" fg:w="1"/><text x="74.8402%" y="351.50"></text></g><g><title>__GI___sigaltstack (2 samples, 0.04%)</title><rect x="74.9219%" y="325" width="0.0390%" height="15" fill="rgb(221,135,30)" fg:x="3839" fg:w="2"/><text x="75.1719%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="74.9219%" y="309" width="0.0390%" height="15" fill="rgb(249,193,18)" fg:x="3839" fg:w="2"/><text x="75.1719%" y="319.50"></text></g><g><title>__getauxval (4 samples, 0.08%)</title><rect x="74.9610%" y="325" width="0.0781%" height="15" fill="rgb(209,133,39)" fg:x="3841" fg:w="4"/><text x="75.2110%" y="335.50"></text></g><g><title>__munmap (2 samples, 0.04%)</title><rect x="75.0390%" y="325" width="0.0390%" height="15" fill="rgb(232,100,14)" fg:x="3845" fg:w="2"/><text x="75.2890%" y="335.50"></text></g><g><title>mi_free_generic_mt (1 samples, 0.02%)</title><rect x="75.0781%" y="325" width="0.0195%" height="15" fill="rgb(224,185,1)" fg:x="3847" fg:w="1"/><text x="75.3281%" y="335.50"></text></g><g><title>_mi_page_ptr_unalign (1 samples, 0.02%)</title><rect x="75.0781%" y="309" width="0.0195%" height="15" fill="rgb(223,139,8)" fg:x="3847" fg:w="1"/><text x="75.3281%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.6440%" y="309" width="0.0195%" height="15" fill="rgb(232,213,38)" fg:x="3876" fg:w="1"/><text x="75.8940%" y="319.50"></text></g><g><title>__GI___pthread_attr_destroy (8 samples, 0.16%)</title><rect x="75.6635%" y="309" width="0.1561%" height="15" fill="rgb(207,94,22)" fg:x="3877" fg:w="8"/><text x="75.9135%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (7 samples, 0.14%)</title><rect x="75.6831%" y="293" width="0.1366%" height="15" fill="rgb(219,183,54)" fg:x="3878" fg:w="7"/><text x="75.9331%" y="303.50"></text></g><g><title>_int_free (5 samples, 0.10%)</title><rect x="75.7221%" y="277" width="0.0976%" height="15" fill="rgb(216,185,54)" fg:x="3880" fg:w="5"/><text x="75.9721%" y="287.50"></text></g><g><title>__GI___pthread_self (2 samples, 0.04%)</title><rect x="75.8197%" y="309" width="0.0390%" height="15" fill="rgb(254,217,39)" fg:x="3885" fg:w="2"/><text x="76.0697%" y="319.50"></text></g><g><title>__GI___sigaltstack (2 samples, 0.04%)</title><rect x="75.8587%" y="309" width="0.0390%" height="15" fill="rgb(240,178,23)" fg:x="3887" fg:w="2"/><text x="76.1087%" y="319.50"></text></g><g><title>__getauxval (10 samples, 0.20%)</title><rect x="75.8977%" y="309" width="0.1952%" height="15" fill="rgb(218,11,47)" fg:x="3889" fg:w="10"/><text x="76.1477%" y="319.50"></text></g><g><title>__mmap (8 samples, 0.16%)</title><rect x="76.0929%" y="309" width="0.1561%" height="15" fill="rgb(218,51,51)" fg:x="3899" fg:w="8"/><text x="76.3429%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="76.2100%" y="293" width="0.0390%" height="15" fill="rgb(238,126,27)" fg:x="3905" fg:w="2"/><text x="76.4600%" y="303.50"></text></g><g><title>__mprotect (6 samples, 0.12%)</title><rect x="76.2490%" y="309" width="0.1171%" height="15" fill="rgb(249,202,22)" fg:x="3907" fg:w="6"/><text x="76.4990%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="76.3271%" y="293" width="0.0390%" height="15" fill="rgb(254,195,49)" fg:x="3911" fg:w="2"/><text x="76.5771%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="76.3466%" y="277" width="0.0195%" height="15" fill="rgb(208,123,14)" fg:x="3912" fg:w="1"/><text x="76.5966%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="76.3466%" y="261" width="0.0195%" height="15" fill="rgb(224,200,8)" fg:x="3912" fg:w="1"/><text x="76.5966%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="76.3466%" y="245" width="0.0195%" height="15" fill="rgb(217,61,36)" fg:x="3912" fg:w="1"/><text x="76.5966%" y="255.50"></text></g><g><title>pthread_attr_getguardsize@@GLIBC_2.34 (1 samples, 0.02%)</title><rect x="76.3661%" y="309" width="0.0195%" height="15" fill="rgb(206,35,45)" fg:x="3913" fg:w="1"/><text x="76.6161%" y="319.50"></text></g><g><title>pthread_attr_getstack@@GLIBC_2.34 (3 samples, 0.06%)</title><rect x="76.3856%" y="309" width="0.0585%" height="15" fill="rgb(217,65,33)" fg:x="3914" fg:w="3"/><text x="76.6356%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10 samples, 0.20%)</title><rect x="76.6589%" y="293" width="0.1952%" height="15" fill="rgb(222,158,48)" fg:x="3928" fg:w="10"/><text x="76.9089%" y="303.50"></text></g><g><title>_int_free (6 samples, 0.12%)</title><rect x="76.7369%" y="277" width="0.1171%" height="15" fill="rgb(254,2,54)" fg:x="3932" fg:w="6"/><text x="76.9869%" y="287.50"></text></g><g><title>_int_malloc (7 samples, 0.14%)</title><rect x="77.0297%" y="277" width="0.1366%" height="15" fill="rgb(250,143,38)" fg:x="3947" fg:w="7"/><text x="77.2797%" y="287.50"></text></g><g><title>_int_malloc (9 samples, 0.18%)</title><rect x="77.2834%" y="261" width="0.1756%" height="15" fill="rgb(248,25,0)" fg:x="3960" fg:w="9"/><text x="77.5334%" y="271.50"></text></g><g><title>malloc (57 samples, 1.11%)</title><rect x="76.8540%" y="293" width="1.1124%" height="15" fill="rgb(206,152,27)" fg:x="3938" fg:w="57"/><text x="77.1040%" y="303.50"></text></g><g><title>tcache_init.part.0 (41 samples, 0.80%)</title><rect x="77.1663%" y="277" width="0.8002%" height="15" fill="rgb(240,77,30)" fg:x="3954" fg:w="41"/><text x="77.4163%" y="287.50"></text></g><g><title>arena_get2 (26 samples, 0.51%)</title><rect x="77.4590%" y="261" width="0.5074%" height="15" fill="rgb(231,5,3)" fg:x="3969" fg:w="26"/><text x="77.7090%" y="271.50"></text></g><g><title>alloc_new_heap (3 samples, 0.06%)</title><rect x="77.9079%" y="245" width="0.0585%" height="15" fill="rgb(207,226,32)" fg:x="3992" fg:w="3"/><text x="78.1579%" y="255.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (27 samples, 0.53%)</title><rect x="77.9664%" y="293" width="0.5269%" height="15" fill="rgb(222,207,47)" fg:x="3995" fg:w="27"/><text x="78.2164%" y="303.50"></text></g><g><title>__getpagesize (15 samples, 0.29%)</title><rect x="78.2006%" y="277" width="0.2927%" height="15" fill="rgb(229,115,45)" fg:x="4007" fg:w="15"/><text x="78.4506%" y="287.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="78.4934%" y="277" width="0.0195%" height="15" fill="rgb(224,191,6)" fg:x="4022" fg:w="1"/><text x="78.7434%" y="287.50"></text></g><g><title>__libc_calloc (5 samples, 0.10%)</title><rect x="78.5324%" y="261" width="0.0976%" height="15" fill="rgb(230,227,24)" fg:x="4024" fg:w="5"/><text x="78.7824%" y="271.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="78.5909%" y="245" width="0.0390%" height="15" fill="rgb(228,80,19)" fg:x="4027" fg:w="2"/><text x="78.8409%" y="255.50"></text></g><g><title>__memset_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="78.6300%" y="261" width="0.0195%" height="15" fill="rgb(247,229,0)" fg:x="4029" fg:w="1"/><text x="78.8800%" y="271.50"></text></g><g><title>__pthread_attr_extension (8 samples, 0.16%)</title><rect x="78.5129%" y="277" width="0.1561%" height="15" fill="rgb(237,194,15)" fg:x="4023" fg:w="8"/><text x="78.7629%" y="287.50"></text></g><g><title>calloc@plt (1 samples, 0.02%)</title><rect x="78.6495%" y="261" width="0.0195%" height="15" fill="rgb(219,203,20)" fg:x="4030" fg:w="1"/><text x="78.8995%" y="271.50"></text></g><g><title>pthread_attr_setaffinity_np@@GLIBC_2.32 (12 samples, 0.23%)</title><rect x="78.4934%" y="293" width="0.2342%" height="15" fill="rgb(234,128,8)" fg:x="4022" fg:w="12"/><text x="78.7434%" y="303.50"></text></g><g><title>realloc (3 samples, 0.06%)</title><rect x="78.6690%" y="277" width="0.0585%" height="15" fill="rgb(248,202,8)" fg:x="4031" fg:w="3"/><text x="78.9190%" y="287.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (5 samples, 0.10%)</title><rect x="78.7276%" y="293" width="0.0976%" height="15" fill="rgb(206,104,37)" fg:x="4034" fg:w="5"/><text x="78.9776%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.10%)</title><rect x="78.7276%" y="277" width="0.0976%" height="15" fill="rgb(223,8,27)" fg:x="4034" fg:w="5"/><text x="78.9776%" y="287.50"></text></g><g><title>__GI___clone3 (3,438 samples, 67.10%)</title><rect x="12.3731%" y="373" width="67.0960%" height="15" fill="rgb(216,217,28)" fg:x="634" fg:w="3438"/><text x="12.6231%" y="383.50">__GI___clone3</text></g><g><title>start_thread (2,776 samples, 54.18%)</title><rect x="25.2927%" y="357" width="54.1764%" height="15" fill="rgb(249,199,1)" fg:x="1296" fg:w="2776"/><text x="25.5427%" y="367.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (249 samples, 4.86%)</title><rect x="74.6097%" y="341" width="4.8595%" height="15" fill="rgb(240,85,17)" fg:x="3823" fg:w="249"/><text x="74.8597%" y="351.50">std::s..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (224 samples, 4.37%)</title><rect x="75.0976%" y="325" width="4.3716%" height="15" fill="rgb(206,108,45)" fg:x="3848" fg:w="224"/><text x="75.3476%" y="335.50">std::..</text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (155 samples, 3.02%)</title><rect x="76.4442%" y="309" width="3.0250%" height="15" fill="rgb(245,210,41)" fg:x="3917" fg:w="155"/><text x="76.6942%" y="319.50">pth..</text></g><g><title>realloc (33 samples, 0.64%)</title><rect x="78.8251%" y="293" width="0.6440%" height="15" fill="rgb(206,13,37)" fg:x="4039" fg:w="33"/><text x="79.0751%" y="303.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="79.4692%" y="373" width="0.0195%" height="15" fill="rgb(250,61,18)" fg:x="4072" fg:w="1"/><text x="79.7192%" y="383.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="79.4692%" y="357" width="0.0195%" height="15" fill="rgb(235,172,48)" fg:x="4072" fg:w="1"/><text x="79.7192%" y="367.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.06%)</title><rect x="79.4887%" y="373" width="0.0585%" height="15" fill="rgb(249,201,17)" fg:x="4073" fg:w="3"/><text x="79.7387%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect x="79.4887%" y="357" width="0.0585%" height="15" fill="rgb(219,208,6)" fg:x="4073" fg:w="3"/><text x="79.7387%" y="367.50"></text></g><g><title>_blake3_compress_in_place_avx512 (1 samples, 0.02%)</title><rect x="79.5472%" y="373" width="0.0195%" height="15" fill="rgb(248,31,23)" fg:x="4076" fg:w="1"/><text x="79.7972%" y="383.50"></text></g><g><title>_mi_arena_memid_is_suitable (1 samples, 0.02%)</title><rect x="79.5667%" y="373" width="0.0195%" height="15" fill="rgb(245,15,42)" fg:x="4077" fg:w="1"/><text x="79.8167%" y="383.50"></text></g><g><title>_mi_bitmap_try_find_from_claim (2 samples, 0.04%)</title><rect x="79.5863%" y="373" width="0.0390%" height="15" fill="rgb(222,217,39)" fg:x="4078" fg:w="2"/><text x="79.8363%" y="383.50"></text></g><g><title>_mi_bitmap_try_find_from_claim_across (1 samples, 0.02%)</title><rect x="79.6253%" y="373" width="0.0195%" height="15" fill="rgb(210,219,27)" fg:x="4080" fg:w="1"/><text x="79.8753%" y="383.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.02%)</title><rect x="79.6448%" y="373" width="0.0195%" height="15" fill="rgb(252,166,36)" fg:x="4081" fg:w="1"/><text x="79.8948%" y="383.50"></text></g><g><title>_mi_heap_main (1 samples, 0.02%)</title><rect x="79.6643%" y="373" width="0.0195%" height="15" fill="rgb(245,132,34)" fg:x="4082" fg:w="1"/><text x="79.9143%" y="383.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (1 samples, 0.02%)</title><rect x="79.6643%" y="357" width="0.0195%" height="15" fill="rgb(236,54,3)" fg:x="4082" fg:w="1"/><text x="79.9143%" y="367.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (1 samples, 0.02%)</title><rect x="79.6643%" y="341" width="0.0195%" height="15" fill="rgb(241,173,43)" fg:x="4082" fg:w="1"/><text x="79.9143%" y="351.50"></text></g><g><title>_mi_page_malloc (16 samples, 0.31%)</title><rect x="79.6838%" y="373" width="0.3123%" height="15" fill="rgb(215,190,9)" fg:x="4083" fg:w="16"/><text x="79.9338%" y="383.50"></text></g><g><title>_mi_prim_random_buf (1 samples, 0.02%)</title><rect x="79.9961%" y="373" width="0.0195%" height="15" fill="rgb(242,101,16)" fg:x="4099" fg:w="1"/><text x="80.2461%" y="383.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="79.9961%" y="357" width="0.0195%" height="15" fill="rgb(223,190,21)" fg:x="4099" fg:w="1"/><text x="80.2461%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.9961%" y="341" width="0.0195%" height="15" fill="rgb(215,228,25)" fg:x="4099" fg:w="1"/><text x="80.2461%" y="351.50"></text></g><g><title>_mi_random_next (6 samples, 0.12%)</title><rect x="80.0156%" y="373" width="0.1171%" height="15" fill="rgb(225,36,22)" fg:x="4100" fg:w="6"/><text x="80.2656%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.12%)</title><rect x="80.0156%" y="357" width="0.1171%" height="15" fill="rgb(251,106,46)" fg:x="4100" fg:w="6"/><text x="80.2656%" y="367.50"></text></g><g><title>chacha_block (6 samples, 0.12%)</title><rect x="80.0156%" y="341" width="0.1171%" height="15" fill="rgb(208,90,1)" fg:x="4100" fg:w="6"/><text x="80.2656%" y="351.50"></text></g><g><title>_mi_thread_done (1 samples, 0.02%)</title><rect x="80.1327%" y="373" width="0.0195%" height="15" fill="rgb(243,10,4)" fg:x="4106" fg:w="1"/><text x="80.3827%" y="383.50"></text></g><g><title>pthread_setspecific@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="80.1327%" y="357" width="0.0195%" height="15" fill="rgb(212,137,27)" fg:x="4106" fg:w="1"/><text x="80.3827%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.1717%" y="357" width="0.0195%" height="15" fill="rgb(231,220,49)" fg:x="4108" fg:w="1"/><text x="80.4217%" y="367.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="80.2693%" y="309" width="0.0195%" height="15" fill="rgb(237,96,20)" fg:x="4113" fg:w="1"/><text x="80.5193%" y="319.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="80.2693%" y="293" width="0.0195%" height="15" fill="rgb(239,229,30)" fg:x="4113" fg:w="1"/><text x="80.5193%" y="303.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="80.2693%" y="277" width="0.0195%" height="15" fill="rgb(219,65,33)" fg:x="4113" fg:w="1"/><text x="80.5193%" y="287.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="80.2693%" y="261" width="0.0195%" height="15" fill="rgb(243,134,7)" fg:x="4113" fg:w="1"/><text x="80.5193%" y="271.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="80.2693%" y="245" width="0.0195%" height="15" fill="rgb(216,177,54)" fg:x="4113" fg:w="1"/><text x="80.5193%" y="255.50"></text></g><g><title>_start (9 samples, 0.18%)</title><rect x="80.1522%" y="373" width="0.1756%" height="15" fill="rgb(211,160,20)" fg:x="4107" fg:w="9"/><text x="80.4022%" y="383.50"></text></g><g><title>_dl_start (7 samples, 0.14%)</title><rect x="80.1913%" y="357" width="0.1366%" height="15" fill="rgb(239,85,39)" fg:x="4109" fg:w="7"/><text x="80.4413%" y="367.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.06%)</title><rect x="80.2693%" y="341" width="0.0585%" height="15" fill="rgb(232,125,22)" fg:x="4113" fg:w="3"/><text x="80.5193%" y="351.50"></text></g><g><title>dl_main (3 samples, 0.06%)</title><rect x="80.2693%" y="325" width="0.0585%" height="15" fill="rgb(244,57,34)" fg:x="4113" fg:w="3"/><text x="80.5193%" y="335.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.04%)</title><rect x="80.2888%" y="309" width="0.0390%" height="15" fill="rgb(214,203,32)" fg:x="4114" fg:w="2"/><text x="80.5388%" y="319.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="80.3084%" y="293" width="0.0195%" height="15" fill="rgb(207,58,43)" fg:x="4115" fg:w="1"/><text x="80.5584%" y="303.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="80.3084%" y="277" width="0.0195%" height="15" fill="rgb(215,193,15)" fg:x="4115" fg:w="1"/><text x="80.5584%" y="287.50"></text></g><g><title>check_match (1 samples, 0.02%)</title><rect x="80.3084%" y="261" width="0.0195%" height="15" fill="rgb(232,15,44)" fg:x="4115" fg:w="1"/><text x="80.5584%" y="271.50"></text></g><g><title>strcmp (1 samples, 0.02%)</title><rect x="80.3084%" y="245" width="0.0195%" height="15" fill="rgb(212,3,48)" fg:x="4115" fg:w="1"/><text x="80.5584%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="80.3279%" y="373" width="0.0195%" height="15" fill="rgb(218,128,7)" fg:x="4116" fg:w="1"/><text x="80.5779%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="80.3279%" y="357" width="0.0195%" height="15" fill="rgb(226,216,39)" fg:x="4116" fg:w="1"/><text x="80.5779%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1 samples, 0.02%)</title><rect x="80.3279%" y="341" width="0.0195%" height="15" fill="rgb(243,47,51)" fg:x="4116" fg:w="1"/><text x="80.5779%" y="351.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::reborrow (1 samples, 0.02%)</title><rect x="80.3279%" y="325" width="0.0195%" height="15" fill="rgb(241,183,40)" fg:x="4116" fg:w="1"/><text x="80.5779%" y="335.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.04%)</title><rect x="80.3474%" y="309" width="0.0390%" height="15" fill="rgb(231,217,32)" fg:x="4117" fg:w="2"/><text x="80.5974%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="80.3474%" y="293" width="0.0390%" height="15" fill="rgb(229,61,38)" fg:x="4117" fg:w="2"/><text x="80.5974%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.06%)</title><rect x="80.3474%" y="373" width="0.0585%" height="15" fill="rgb(225,210,5)" fg:x="4117" fg:w="3"/><text x="80.5974%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.06%)</title><rect x="80.3474%" y="357" width="0.0585%" height="15" fill="rgb(231,79,45)" fg:x="4117" fg:w="3"/><text x="80.5974%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (3 samples, 0.06%)</title><rect x="80.3474%" y="341" width="0.0585%" height="15" fill="rgb(224,100,7)" fg:x="4117" fg:w="3"/><text x="80.5974%" y="351.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (3 samples, 0.06%)</title><rect x="80.3474%" y="325" width="0.0585%" height="15" fill="rgb(241,198,18)" fg:x="4117" fg:w="3"/><text x="80.5974%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="80.3864%" y="309" width="0.0195%" height="15" fill="rgb(252,97,53)" fg:x="4119" fg:w="1"/><text x="80.6364%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="80.4840%" y="325" width="0.0195%" height="15" fill="rgb(220,88,7)" fg:x="4124" fg:w="1"/><text x="80.7340%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.02%)</title><rect x="80.5035%" y="325" width="0.0195%" height="15" fill="rgb(213,176,14)" fg:x="4125" fg:w="1"/><text x="80.7535%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="80.5035%" y="309" width="0.0195%" height="15" fill="rgb(246,73,7)" fg:x="4125" fg:w="1"/><text x="80.7535%" y="319.50"></text></g><g><title>alloc::raw_vec::layout_array (1 samples, 0.02%)</title><rect x="80.5230%" y="325" width="0.0195%" height="15" fill="rgb(245,64,36)" fg:x="4126" fg:w="1"/><text x="80.7730%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="80.5230%" y="309" width="0.0195%" height="15" fill="rgb(245,80,10)" fg:x="4126" fg:w="1"/><text x="80.7730%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.16%)</title><rect x="80.4059%" y="373" width="0.1561%" height="15" fill="rgb(232,107,50)" fg:x="4120" fg:w="8"/><text x="80.6559%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (4 samples, 0.08%)</title><rect x="80.4840%" y="357" width="0.0781%" height="15" fill="rgb(253,3,0)" fg:x="4124" fg:w="4"/><text x="80.7340%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="80.4840%" y="341" width="0.0781%" height="15" fill="rgb(212,99,53)" fg:x="4124" fg:w="4"/><text x="80.7340%" y="351.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="80.5425%" y="325" width="0.0195%" height="15" fill="rgb(249,111,54)" fg:x="4127" fg:w="1"/><text x="80.7925%" y="335.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="80.5425%" y="309" width="0.0195%" height="15" fill="rgb(249,55,30)" fg:x="4127" fg:w="1"/><text x="80.7925%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="80.5621%" y="373" width="0.0195%" height="15" fill="rgb(237,47,42)" fg:x="4128" fg:w="1"/><text x="80.8121%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="80.5621%" y="357" width="0.0195%" height="15" fill="rgb(211,20,18)" fg:x="4128" fg:w="1"/><text x="80.8121%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="80.5621%" y="341" width="0.0195%" height="15" fill="rgb(231,203,46)" fg:x="4128" fg:w="1"/><text x="80.8121%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="80.5816%" y="373" width="0.0390%" height="15" fill="rgb(237,142,3)" fg:x="4129" fg:w="2"/><text x="80.8316%" y="383.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.04%)</title><rect x="80.5816%" y="357" width="0.0390%" height="15" fill="rgb(241,107,1)" fg:x="4129" fg:w="2"/><text x="80.8316%" y="367.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="80.6011%" y="341" width="0.0195%" height="15" fill="rgb(229,83,13)" fg:x="4130" fg:w="1"/><text x="80.8511%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Cell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="80.6206%" y="357" width="0.0390%" height="15" fill="rgb(241,91,40)" fg:x="4131" fg:w="2"/><text x="80.8706%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="80.6206%" y="341" width="0.0390%" height="15" fill="rgb(225,3,45)" fg:x="4131" fg:w="2"/><text x="80.8706%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (2 samples, 0.04%)</title><rect x="80.6206%" y="325" width="0.0390%" height="15" fill="rgb(244,223,14)" fg:x="4131" fg:w="2"/><text x="80.8706%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (3 samples, 0.06%)</title><rect x="80.6206%" y="373" width="0.0585%" height="15" fill="rgb(224,124,37)" fg:x="4131" fg:w="3"/><text x="80.8706%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt; (1 samples, 0.02%)</title><rect x="80.6596%" y="357" width="0.0195%" height="15" fill="rgb(251,171,30)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt; (1 samples, 0.02%)</title><rect x="80.6596%" y="341" width="0.0195%" height="15" fill="rgb(236,46,54)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::ThunkRepr&gt; (1 samples, 0.02%)</title><rect x="80.6596%" y="325" width="0.0195%" height="15" fill="rgb(245,213,5)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;snix_eval::upvalues::Upvalues&gt;&gt; (1 samples, 0.02%)</title><rect x="80.6596%" y="309" width="0.0195%" height="15" fill="rgb(230,144,27)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="80.6596%" y="293" width="0.0195%" height="15" fill="rgb(220,86,6)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (1 samples, 0.02%)</title><rect x="80.6596%" y="277" width="0.0195%" height="15" fill="rgb(240,20,13)" fg:x="4133" fg:w="1"/><text x="80.9096%" y="287.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.02%)</title><rect x="80.6987%" y="341" width="0.0195%" height="15" fill="rgb(217,89,34)" fg:x="4135" fg:w="1"/><text x="80.9487%" y="351.50"></text></g><g><title>_mi_heap_delayed_free_partial (1 samples, 0.02%)</title><rect x="80.7182%" y="341" width="0.0195%" height="15" fill="rgb(229,13,5)" fg:x="4136" fg:w="1"/><text x="80.9682%" y="351.50"></text></g><g><title>_mi_heap_delayed_free_partial (2 samples, 0.04%)</title><rect x="80.7377%" y="325" width="0.0390%" height="15" fill="rgb(244,67,35)" fg:x="4137" fg:w="2"/><text x="80.9877%" y="335.50"></text></g><g><title>_mi_stat_increase (1 samples, 0.02%)</title><rect x="80.7767%" y="309" width="0.0195%" height="15" fill="rgb(221,40,2)" fg:x="4139" fg:w="1"/><text x="81.0267%" y="319.50"></text></g><g><title>_mi_tld_init (5 samples, 0.10%)</title><rect x="80.8743%" y="293" width="0.0976%" height="15" fill="rgb(237,157,21)" fg:x="4144" fg:w="5"/><text x="81.1243%" y="303.50"></text></g><g><title>mi_heap_get_default (11 samples, 0.21%)</title><rect x="80.7767%" y="325" width="0.2147%" height="15" fill="rgb(222,94,11)" fg:x="4139" fg:w="11"/><text x="81.0267%" y="335.50"></text></g><g><title>mi_thread_init (10 samples, 0.20%)</title><rect x="80.7963%" y="309" width="0.1952%" height="15" fill="rgb(249,113,6)" fg:x="4140" fg:w="10"/><text x="81.0463%" y="319.50"></text></g><g><title>mi_process_init (1 samples, 0.02%)</title><rect x="80.9719%" y="293" width="0.0195%" height="15" fill="rgb(238,137,36)" fg:x="4149" fg:w="1"/><text x="81.2219%" y="303.50"></text></g><g><title>_mi_heap_collect_retired (2 samples, 0.04%)</title><rect x="81.0109%" y="309" width="0.0390%" height="15" fill="rgb(210,102,26)" fg:x="4151" fg:w="2"/><text x="81.2609%" y="319.50"></text></g><g><title>__memset_avx512_unaligned_erms (18 samples, 0.35%)</title><rect x="81.1085%" y="261" width="0.3513%" height="15" fill="rgb(218,30,30)" fg:x="4156" fg:w="18"/><text x="81.3585%" y="271.50"></text></g><g><title>mi_arena_try_alloc.isra.0 (3 samples, 0.06%)</title><rect x="81.4793%" y="245" width="0.0585%" height="15" fill="rgb(214,67,26)" fg:x="4175" fg:w="3"/><text x="81.7293%" y="255.50"></text></g><g><title>mi_arena_try_alloc_at.isra.0 (3 samples, 0.06%)</title><rect x="81.4793%" y="229" width="0.0585%" height="15" fill="rgb(251,9,53)" fg:x="4175" fg:w="3"/><text x="81.7293%" y="239.50"></text></g><g><title>_mi_bitmap_unclaim_across (1 samples, 0.02%)</title><rect x="81.5183%" y="213" width="0.0195%" height="15" fill="rgb(228,204,25)" fg:x="4177" fg:w="1"/><text x="81.7683%" y="223.50"></text></g><g><title>_mi_arena_alloc_aligned (5 samples, 0.10%)</title><rect x="81.4598%" y="261" width="0.0976%" height="15" fill="rgb(207,153,8)" fg:x="4174" fg:w="5"/><text x="81.7098%" y="271.50"></text></g><g><title>mi_option_is_enabled (1 samples, 0.02%)</title><rect x="81.5379%" y="245" width="0.0195%" height="15" fill="rgb(242,9,16)" fg:x="4178" fg:w="1"/><text x="81.7879%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="81.5379%" y="229" width="0.0195%" height="15" fill="rgb(217,211,10)" fg:x="4178" fg:w="1"/><text x="81.7879%" y="239.50"></text></g><g><title>mi_option_get (1 samples, 0.02%)</title><rect x="81.5379%" y="213" width="0.0195%" height="15" fill="rgb(219,228,52)" fg:x="4178" fg:w="1"/><text x="81.7879%" y="223.50"></text></g><g><title>mi_segment_alloc (25 samples, 0.49%)</title><rect x="81.0890%" y="277" width="0.4879%" height="15" fill="rgb(231,92,29)" fg:x="4155" fg:w="25"/><text x="81.3390%" y="287.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (1 samples, 0.02%)</title><rect x="81.5574%" y="261" width="0.0195%" height="15" fill="rgb(232,8,23)" fg:x="4179" fg:w="1"/><text x="81.8074%" y="271.50"></text></g><g><title>mi_segment_try_reclaim (3 samples, 0.06%)</title><rect x="81.5769%" y="277" width="0.0585%" height="15" fill="rgb(216,211,34)" fg:x="4180" fg:w="3"/><text x="81.8269%" y="287.50"></text></g><g><title>_mi_arena_segment_abandoned_count (2 samples, 0.04%)</title><rect x="81.5964%" y="261" width="0.0390%" height="15" fill="rgb(236,151,0)" fg:x="4181" fg:w="2"/><text x="81.8464%" y="271.50"></text></g><g><title>mi_page_fresh_alloc (34 samples, 0.66%)</title><rect x="81.0500%" y="309" width="0.6635%" height="15" fill="rgb(209,168,3)" fg:x="4153" fg:w="34"/><text x="81.3000%" y="319.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (33 samples, 0.64%)</title><rect x="81.0695%" y="293" width="0.6440%" height="15" fill="rgb(208,129,28)" fg:x="4154" fg:w="33"/><text x="81.3195%" y="303.50"></text></g><g><title>mi_segments_page_find_and_allocate (4 samples, 0.08%)</title><rect x="81.6354%" y="277" width="0.0781%" height="15" fill="rgb(229,78,22)" fg:x="4183" fg:w="4"/><text x="81.8854%" y="287.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (1 samples, 0.02%)</title><rect x="81.6940%" y="261" width="0.0195%" height="15" fill="rgb(228,187,13)" fg:x="4186" fg:w="1"/><text x="81.9440%" y="271.50"></text></g><g><title>_mi_malloc_generic (51 samples, 1.00%)</title><rect x="80.7377%" y="341" width="0.9953%" height="15" fill="rgb(240,119,24)" fg:x="4137" fg:w="51"/><text x="80.9877%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (38 samples, 0.74%)</title><rect x="80.9914%" y="325" width="0.7416%" height="15" fill="rgb(209,194,42)" fg:x="4150" fg:w="38"/><text x="81.2414%" y="335.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.02%)</title><rect x="81.7135%" y="309" width="0.0195%" height="15" fill="rgb(247,200,46)" fg:x="4187" fg:w="1"/><text x="81.9635%" y="319.50"></text></g><g><title>mi_heap_get_default (2 samples, 0.04%)</title><rect x="81.7330%" y="341" width="0.0390%" height="15" fill="rgb(218,76,16)" fg:x="4188" fg:w="2"/><text x="81.9830%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::repeat (57 samples, 1.11%)</title><rect x="80.6792%" y="373" width="1.1124%" height="15" fill="rgb(225,21,48)" fg:x="4134" fg:w="57"/><text x="80.9292%" y="383.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (57 samples, 1.11%)</title><rect x="80.6792%" y="357" width="1.1124%" height="15" fill="rgb(239,223,50)" fg:x="4134" fg:w="57"/><text x="80.9292%" y="367.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.02%)</title><rect x="81.7721%" y="341" width="0.0195%" height="15" fill="rgb(244,45,21)" fg:x="4190" fg:w="1"/><text x="82.0221%" y="351.50"></text></g><g><title>anon.0bd010686a23e1f7ea920548ec57013a.19.llvm.13710328289287238087 (1 samples, 0.02%)</title><rect x="81.7916%" y="373" width="0.0195%" height="15" fill="rgb(232,33,43)" fg:x="4191" fg:w="1"/><text x="82.0416%" y="383.50"></text></g><g><title>tracing::span::Span::current (1 samples, 0.02%)</title><rect x="81.7916%" y="357" width="0.0195%" height="15" fill="rgb(209,8,3)" fg:x="4191" fg:w="1"/><text x="82.0416%" y="367.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.02%)</title><rect x="81.7916%" y="341" width="0.0195%" height="15" fill="rgb(214,25,53)" fg:x="4191" fg:w="1"/><text x="82.0416%" y="351.50"></text></g><g><title>blake3::Hasher::update (1 samples, 0.02%)</title><rect x="81.8111%" y="373" width="0.0195%" height="15" fill="rgb(254,186,54)" fg:x="4192" fg:w="1"/><text x="82.0611%" y="383.50"></text></g><g><title>bstr::ext_slice::ByteSlice::replace (1 samples, 0.02%)</title><rect x="81.8306%" y="373" width="0.0195%" height="15" fill="rgb(208,174,49)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="81.8306%" y="357" width="0.0195%" height="15" fill="rgb(233,191,51)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="81.8306%" y="341" width="0.0195%" height="15" fill="rgb(222,134,10)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="81.8306%" y="325" width="0.0195%" height="15" fill="rgb(230,226,20)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="81.8306%" y="309" width="0.0195%" height="15" fill="rgb(251,111,25)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="81.8306%" y="293" width="0.0195%" height="15" fill="rgb(224,40,46)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="81.8306%" y="277" width="0.0195%" height="15" fill="rgb(236,108,47)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="81.8306%" y="261" width="0.0195%" height="15" fill="rgb(234,93,0)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="81.8306%" y="245" width="0.0195%" height="15" fill="rgb(224,213,32)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="255.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="81.8306%" y="229" width="0.0195%" height="15" fill="rgb(251,11,48)" fg:x="4193" fg:w="1"/><text x="82.0806%" y="239.50"></text></g><g><title>bstr::ext_slice::Find::new (1 samples, 0.02%)</title><rect x="81.8501%" y="373" width="0.0195%" height="15" fill="rgb(236,173,5)" fg:x="4194" fg:w="1"/><text x="82.1001%" y="383.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward_with_ranker (1 samples, 0.02%)</title><rect x="81.8501%" y="357" width="0.0195%" height="15" fill="rgb(230,95,12)" fg:x="4194" fg:w="1"/><text x="82.1001%" y="367.50"></text></g><g><title>chacha_block (7 samples, 0.14%)</title><rect x="81.8696%" y="373" width="0.1366%" height="15" fill="rgb(232,209,1)" fg:x="4195" fg:w="7"/><text x="82.1196%" y="383.50"></text></g><g><title>clock_getcpuclockid@@GLIBC_2.17 (1 samples, 0.02%)</title><rect x="82.0062%" y="373" width="0.0195%" height="15" fill="rgb(232,6,1)" fg:x="4202" fg:w="1"/><text x="82.2562%" y="383.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (1 samples, 0.02%)</title><rect x="82.0062%" y="357" width="0.0195%" height="15" fill="rgb(210,224,50)" fg:x="4202" fg:w="1"/><text x="82.2562%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.04%)</title><rect x="82.0258%" y="373" width="0.0390%" height="15" fill="rgb(228,127,35)" fg:x="4203" fg:w="2"/><text x="82.2758%" y="383.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (2 samples, 0.04%)</title><rect x="82.0258%" y="357" width="0.0390%" height="15" fill="rgb(245,102,45)" fg:x="4203" fg:w="2"/><text x="82.2758%" y="367.50"></text></g><g><title>console::ansi::strip_ansi_codes (3 samples, 0.06%)</title><rect x="82.0648%" y="373" width="0.0585%" height="15" fill="rgb(214,1,49)" fg:x="4205" fg:w="3"/><text x="82.3148%" y="383.50"></text></g><g><title>__GI___ioctl (2 samples, 0.04%)</title><rect x="82.1233%" y="357" width="0.0390%" height="15" fill="rgb(226,163,40)" fg:x="4208" fg:w="2"/><text x="82.3733%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="82.1233%" y="341" width="0.0390%" height="15" fill="rgb(239,212,28)" fg:x="4208" fg:w="2"/><text x="82.3733%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="82.1233%" y="325" width="0.0390%" height="15" fill="rgb(220,20,13)" fg:x="4208" fg:w="2"/><text x="82.3733%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1429%" y="309" width="0.0195%" height="15" fill="rgb(210,164,35)" fg:x="4209" fg:w="1"/><text x="82.3929%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1429%" y="293" width="0.0195%" height="15" fill="rgb(248,109,41)" fg:x="4209" fg:w="1"/><text x="82.3929%" y="303.50"></text></g><g><title>console::unix_term::terminal_size (3 samples, 0.06%)</title><rect x="82.1233%" y="373" width="0.0585%" height="15" fill="rgb(238,23,50)" fg:x="4208" fg:w="3"/><text x="82.3733%" y="383.50"></text></g><g><title>__isatty (1 samples, 0.02%)</title><rect x="82.1624%" y="357" width="0.0195%" height="15" fill="rgb(211,48,49)" fg:x="4210" fg:w="1"/><text x="82.4124%" y="367.50"></text></g><g><title>__GI___tcgetattr (1 samples, 0.02%)</title><rect x="82.1624%" y="341" width="0.0195%" height="15" fill="rgb(223,36,21)" fg:x="4210" fg:w="1"/><text x="82.4124%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1624%" y="325" width="0.0195%" height="15" fill="rgb(207,123,46)" fg:x="4210" fg:w="1"/><text x="82.4124%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1624%" y="309" width="0.0195%" height="15" fill="rgb(240,218,32)" fg:x="4210" fg:w="1"/><text x="82.4124%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1624%" y="293" width="0.0195%" height="15" fill="rgb(252,5,43)" fg:x="4210" fg:w="1"/><text x="82.4124%" y="303.50"></text></g><g><title>console::utils::str_width (7 samples, 0.14%)</title><rect x="82.1819%" y="373" width="0.1366%" height="15" fill="rgb(252,84,19)" fg:x="4211" fg:w="7"/><text x="82.4319%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.04%)</title><rect x="82.3185%" y="373" width="0.0390%" height="15" fill="rgb(243,152,39)" fg:x="4218" fg:w="2"/><text x="82.5685%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="82.3575%" y="373" width="0.0390%" height="15" fill="rgb(234,160,15)" fg:x="4220" fg:w="2"/><text x="82.6075%" y="383.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h58cd14dedff6be09E.llvm.16348842533310755137 (2 samples, 0.04%)</title><rect x="82.3575%" y="357" width="0.0390%" height="15" fill="rgb(237,34,20)" fg:x="4220" fg:w="2"/><text x="82.6075%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.02%)</title><rect x="82.3966%" y="373" width="0.0195%" height="15" fill="rgb(229,97,13)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (1 samples, 0.02%)</title><rect x="82.3966%" y="357" width="0.0195%" height="15" fill="rgb(234,71,50)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="82.3966%" y="341" width="0.0195%" height="15" fill="rgb(253,155,4)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="82.3966%" y="325" width="0.0195%" height="15" fill="rgb(222,185,37)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="82.3966%" y="309" width="0.0195%" height="15" fill="rgb(251,177,13)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="319.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="82.3966%" y="293" width="0.0195%" height="15" fill="rgb(250,179,40)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="82.3966%" y="277" width="0.0195%" height="15" fill="rgb(242,44,2)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="82.3966%" y="261" width="0.0195%" height="15" fill="rgb(216,177,13)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="82.3966%" y="245" width="0.0195%" height="15" fill="rgb(216,106,43)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="82.3966%" y="229" width="0.0195%" height="15" fill="rgb(216,183,2)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;,snix_eval::builtins::pure_builtins::builtin_remove_attrs::{{closure}}::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,snix_eval::errors::ErrorKind&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.3966%" y="213" width="0.0195%" height="15" fill="rgb(249,75,3)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;,snix_eval::builtins::pure_builtins::builtin_remove_attrs::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="82.3966%" y="197" width="0.0195%" height="15" fill="rgb(219,67,39)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="82.3966%" y="181" width="0.0195%" height="15" fill="rgb(253,228,2)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="82.3966%" y="165" width="0.0195%" height="15" fill="rgb(235,138,27)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="82.3966%" y="149" width="0.0195%" height="15" fill="rgb(236,97,51)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="82.3966%" y="133" width="0.0195%" height="15" fill="rgb(240,80,30)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="143.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="82.3966%" y="117" width="0.0195%" height="15" fill="rgb(230,178,19)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="127.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_remove_attrs::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="82.3966%" y="101" width="0.0195%" height="15" fill="rgb(210,190,27)" fg:x="4222" fg:w="1"/><text x="82.6466%" y="111.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.14%)</title><rect x="82.4161%" y="373" width="0.1366%" height="15" fill="rgb(222,107,31)" fg:x="4223" fg:w="7"/><text x="82.6661%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;snix_castore::import::fs::dir_entries_to_ingestion_stream&lt;&amp;alloc::sync::Arc&lt;dyn snix_castore::blobservice::BlobService&gt;,walkdir::IntoIter,&amp;[u8]&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.5527%" y="373" width="0.0195%" height="15" fill="rgb(216,127,34)" fg:x="4230" fg:w="1"/><text x="82.8027%" y="383.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.5527%" y="357" width="0.0195%" height="15" fill="rgb(234,116,52)" fg:x="4230" fg:w="1"/><text x="82.8027%" y="367.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (1 samples, 0.02%)</title><rect x="82.5527%" y="341" width="0.0195%" height="15" fill="rgb(222,124,15)" fg:x="4230" fg:w="1"/><text x="82.8027%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::core::Next&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse&gt;&gt; (6 samples, 0.12%)</title><rect x="82.5722%" y="373" width="0.1171%" height="15" fill="rgb(231,179,28)" fg:x="4231" fg:w="6"/><text x="82.8222%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::vm::generators::VMResponse&gt; (3 samples, 0.06%)</title><rect x="82.6308%" y="357" width="0.0585%" height="15" fill="rgb(226,93,45)" fg:x="4234" fg:w="3"/><text x="82.8808%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;genawaiter::rc::generator::Gen&lt;snix_eval::vm::generators::VMRequest,snix_eval::vm::generators::VMResponse,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="82.6893%" y="373" width="0.0390%" height="15" fill="rgb(215,8,51)" fg:x="4237" fg:w="2"/><text x="82.9393%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7088%" y="357" width="0.0195%" height="15" fill="rgb(223,106,5)" fg:x="4238" fg:w="1"/><text x="82.9588%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7088%" y="341" width="0.0195%" height="15" fill="rgb(250,191,5)" fg:x="4238" fg:w="1"/><text x="82.9588%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7088%" y="325" width="0.0195%" height="15" fill="rgb(242,132,44)" fg:x="4238" fg:w="1"/><text x="82.9588%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;snix_eval::value::Value,snix_eval::errors::ErrorKind&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7088%" y="309" width="0.0195%" height="15" fill="rgb(251,152,29)" fg:x="4238" fg:w="1"/><text x="82.9588%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.7088%" y="293" width="0.0195%" height="15" fill="rgb(218,179,5)" fg:x="4238" fg:w="1"/><text x="82.9588%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::builder::GreenNodeBuilder&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="373" width="0.0195%" height="15" fill="rgb(227,67,19)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::cow_mut::CowMut&lt;rowan::green::node_cache::NodeCache&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="357" width="0.0195%" height="15" fill="rgb(233,119,31)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node_cache::NodeCache&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="341" width="0.0195%" height="15" fill="rgb(241,120,22)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;rowan::green::node_cache::NoHash&lt;rowan::green::token::GreenToken&gt;,(),core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="325" width="0.0195%" height="15" fill="rgb(224,102,30)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(rowan::green::node_cache::NoHash&lt;rowan::green::token::GreenToken&gt;,())&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="309" width="0.0195%" height="15" fill="rgb(210,164,37)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.7283%" y="293" width="0.0195%" height="15" fill="rgb(226,191,16)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.02%)</title><rect x="82.7283%" y="277" width="0.0195%" height="15" fill="rgb(214,40,45)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.02%)</title><rect x="82.7283%" y="261" width="0.0195%" height="15" fill="rgb(244,29,26)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.02%)</title><rect x="82.7283%" y="245" width="0.0195%" height="15" fill="rgb(216,16,5)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="82.7283%" y="229" width="0.0195%" height="15" fill="rgb(249,76,35)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(rowan::green::node_cache::NoHash&lt;rowan::green::token::GreenToken&gt;,())&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="213" width="0.0195%" height="15" fill="rgb(207,11,44)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node_cache::NoHash&lt;rowan::green::token::GreenToken&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="197" width="0.0195%" height="15" fill="rgb(228,190,49)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="181" width="0.0195%" height="15" fill="rgb(214,173,12)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="165" width="0.0195%" height="15" fill="rgb(218,26,35)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="175.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.7283%" y="149" width="0.0195%" height="15" fill="rgb(220,200,19)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.7283%" y="133" width="0.0195%" height="15" fill="rgb(239,95,49)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="143.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.7283%" y="117" width="0.0195%" height="15" fill="rgb(235,85,53)" fg:x="4239" fg:w="1"/><text x="82.9783%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::Value&gt; (3 samples, 0.06%)</title><rect x="82.7479%" y="373" width="0.0585%" height="15" fill="rgb(233,133,31)" fg:x="4240" fg:w="3"/><text x="82.9979%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::value::thunk::Thunk&gt; (2 samples, 0.04%)</title><rect x="82.7674%" y="357" width="0.0390%" height="15" fill="rgb(218,25,20)" fg:x="4241" fg:w="2"/><text x="83.0174%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="82.7674%" y="341" width="0.0390%" height="15" fill="rgb(252,210,38)" fg:x="4241" fg:w="2"/><text x="83.0174%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="82.7674%" y="325" width="0.0390%" height="15" fill="rgb(242,134,21)" fg:x="4241" fg:w="2"/><text x="83.0174%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;snix_eval::vm::generators::request_call_with&lt;[snix_eval::value::Value: 1]&gt;::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="82.8064%" y="373" width="0.0195%" height="15" fill="rgb(213,28,48)" fg:x="4243" fg:w="1"/><text x="83.0564%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::runtime::EnterRuntimeGuard&gt; (2 samples, 0.04%)</title><rect x="82.8259%" y="373" width="0.0390%" height="15" fill="rgb(250,196,2)" fg:x="4244" fg:w="2"/><text x="83.0759%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::current::SetCurrentGuard&gt; (1 samples, 0.02%)</title><rect x="82.8454%" y="357" width="0.0195%" height="15" fill="rgb(227,5,17)" fg:x="4245" fg:w="1"/><text x="83.0954%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="82.8454%" y="341" width="0.0195%" height="15" fill="rgb(221,226,24)" fg:x="4245" fg:w="1"/><text x="83.0954%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="82.8649%" y="357" width="0.0195%" height="15" fill="rgb(211,5,48)" fg:x="4246" fg:w="1"/><text x="83.1149%" y="367.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="82.8649%" y="341" width="0.0195%" height="15" fill="rgb(219,150,6)" fg:x="4246" fg:w="1"/><text x="83.1149%" y="351.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.02%)</title><rect x="82.8649%" y="325" width="0.0195%" height="15" fill="rgb(251,46,16)" fg:x="4246" fg:w="1"/><text x="83.1149%" y="335.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.02%)</title><rect x="82.8649%" y="309" width="0.0195%" height="15" fill="rgb(220,204,40)" fg:x="4246" fg:w="1"/><text x="83.1149%" y="319.50"></text></g><g><title>core::ops::index_range::IndexRange::len (1 samples, 0.02%)</title><rect x="82.8649%" y="293" width="0.0195%" height="15" fill="rgb(211,85,2)" fg:x="4246" fg:w="1"/><text x="83.1149%" y="303.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (1 samples, 0.02%)</title><rect x="82.8845%" y="341" width="0.0195%" height="15" fill="rgb(229,17,7)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="351.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::into_iter_sorted::_{{closure}} (1 samples, 0.02%)</title><rect x="82.8845%" y="325" width="0.0195%" height="15" fill="rgb(239,72,28)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="335.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="82.8845%" y="309" width="0.0195%" height="15" fill="rgb(230,47,54)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="319.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::Ord for bstr::bstr::BStr&gt;::cmp (1 samples, 0.02%)</title><rect x="82.8845%" y="293" width="0.0195%" height="15" fill="rgb(214,50,8)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="303.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::PartialOrd for bstr::bstr::BStr&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="82.8845%" y="277" width="0.0195%" height="15" fill="rgb(216,198,43)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="82.8845%" y="261" width="0.0195%" height="15" fill="rgb(234,20,35)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="271.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (1 samples, 0.02%)</title><rect x="82.8845%" y="245" width="0.0195%" height="15" fill="rgb(254,45,19)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="255.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.02%)</title><rect x="82.8845%" y="229" width="0.0195%" height="15" fill="rgb(219,14,44)" fg:x="4247" fg:w="1"/><text x="83.1345%" y="239.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (3 samples, 0.06%)</title><rect x="82.8649%" y="373" width="0.0585%" height="15" fill="rgb(217,220,26)" fg:x="4246" fg:w="3"/><text x="83.1149%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.04%)</title><rect x="82.8845%" y="357" width="0.0390%" height="15" fill="rgb(213,158,28)" fg:x="4247" fg:w="2"/><text x="83.1345%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="82.9040%" y="341" width="0.0195%" height="15" fill="rgb(252,51,52)" fg:x="4248" fg:w="1"/><text x="83.1540%" y="351.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (1 samples, 0.02%)</title><rect x="82.9235%" y="341" width="0.0195%" height="15" fill="rgb(246,89,16)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="351.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::into_iter_sorted::_{{closure}} (1 samples, 0.02%)</title><rect x="82.9235%" y="325" width="0.0195%" height="15" fill="rgb(216,158,49)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="335.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="82.9235%" y="309" width="0.0195%" height="15" fill="rgb(236,107,19)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="319.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::Ord for bstr::bstr::BStr&gt;::cmp (1 samples, 0.02%)</title><rect x="82.9235%" y="293" width="0.0195%" height="15" fill="rgb(228,185,30)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="303.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::cmp::PartialOrd for bstr::bstr::BStr&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="82.9235%" y="277" width="0.0195%" height="15" fill="rgb(246,134,8)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="82.9235%" y="261" width="0.0195%" height="15" fill="rgb(214,143,50)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="271.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (1 samples, 0.02%)</title><rect x="82.9235%" y="245" width="0.0195%" height="15" fill="rgb(228,75,8)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="255.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.02%)</title><rect x="82.9235%" y="229" width="0.0195%" height="15" fill="rgb(207,175,4)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="239.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.02%)</title><rect x="82.9235%" y="213" width="0.0195%" height="15" fill="rgb(205,108,24)" fg:x="4249" fg:w="1"/><text x="83.1735%" y="223.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (2 samples, 0.04%)</title><rect x="82.9235%" y="373" width="0.0390%" height="15" fill="rgb(244,120,49)" fg:x="4249" fg:w="2"/><text x="83.1735%" y="383.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (2 samples, 0.04%)</title><rect x="82.9235%" y="357" width="0.0390%" height="15" fill="rgb(223,47,38)" fg:x="4249" fg:w="2"/><text x="83.1735%" y="367.50"></text></g><g><title>core::slice::sort::stable::quicksort::PartitionState&lt;T&gt;::partition_one (1 samples, 0.02%)</title><rect x="82.9430%" y="341" width="0.0195%" height="15" fill="rgb(229,179,11)" fg:x="4250" fg:w="1"/><text x="83.1930%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="82.9430%" y="325" width="0.0195%" height="15" fill="rgb(231,122,1)" fg:x="4250" fg:w="1"/><text x="83.1930%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="82.9625%" y="373" width="0.0195%" height="15" fill="rgb(245,119,9)" fg:x="4251" fg:w="1"/><text x="83.2125%" y="383.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string::_{{closure}} (1 samples, 0.02%)</title><rect x="83.2553%" y="341" width="0.0195%" height="15" fill="rgb(241,163,25)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="351.50"></text></g><g><title>snix_eval::value::Value::coerce_to_string_::_{{closure}} (1 samples, 0.02%)</title><rect x="83.2553%" y="325" width="0.0195%" height="15" fill="rgb(217,214,3)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="335.50"></text></g><g><title>snix_eval::value::string::context::NixContext::extend (1 samples, 0.02%)</title><rect x="83.2553%" y="309" width="0.0195%" height="15" fill="rgb(240,86,28)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="319.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="83.2553%" y="293" width="0.0195%" height="15" fill="rgb(215,47,9)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="303.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="83.2553%" y="277" width="0.0195%" height="15" fill="rgb(252,25,45)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="287.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="83.2553%" y="261" width="0.0195%" height="15" fill="rgb(251,164,9)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="83.2553%" y="245" width="0.0195%" height="15" fill="rgb(233,194,0)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="83.2553%" y="229" width="0.0195%" height="15" fill="rgb(249,111,24)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="83.2553%" y="213" width="0.0195%" height="15" fill="rgb(250,223,3)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="83.2553%" y="197" width="0.0195%" height="15" fill="rgb(236,178,37)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.02%)</title><rect x="83.2553%" y="181" width="0.0195%" height="15" fill="rgb(241,158,50)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.02%)</title><rect x="83.2553%" y="165" width="0.0195%" height="15" fill="rgb(213,121,41)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.02%)</title><rect x="83.2553%" y="149" width="0.0195%" height="15" fill="rgb(240,92,3)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.02%)</title><rect x="83.2553%" y="133" width="0.0195%" height="15" fill="rgb(205,123,3)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="143.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="83.2553%" y="117" width="0.0195%" height="15" fill="rgb(205,97,47)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="83.2553%" y="101" width="0.0195%" height="15" fill="rgb(247,152,14)" fg:x="4266" fg:w="1"/><text x="83.5053%" y="111.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="83.2553%" y="357" width="0.0390%" height="15" fill="rgb(248,195,53)" fg:x="4266" fg:w="2"/><text x="83.5053%" y="367.50"></text></g><g><title>snix_glue::builtins::derivation::derivation_builtins::builtin_derivation_strict::_{{closure}} (1 samples, 0.02%)</title><rect x="83.2748%" y="341" width="0.0195%" height="15" fill="rgb(226,201,16)" fg:x="4267" fg:w="1"/><text x="83.5248%" y="351.50"></text></g><g><title>genawaiter::core::advance (17 samples, 0.33%)</title><rect x="82.9820%" y="373" width="0.3318%" height="15" fill="rgb(205,98,0)" fg:x="4252" fg:w="17"/><text x="83.2320%" y="383.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.02%)</title><rect x="83.2943%" y="357" width="0.0195%" height="15" fill="rgb(214,191,48)" fg:x="4268" fg:w="1"/><text x="83.5443%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="83.2943%" y="341" width="0.0195%" height="15" fill="rgb(237,112,39)" fg:x="4268" fg:w="1"/><text x="83.5443%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="83.2943%" y="325" width="0.0195%" height="15" fill="rgb(247,203,27)" fg:x="4268" fg:w="1"/><text x="83.5443%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="83.2943%" y="309" width="0.0195%" height="15" fill="rgb(235,124,28)" fg:x="4268" fg:w="1"/><text x="83.5443%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.04%)</title><rect x="83.3333%" y="357" width="0.0390%" height="15" fill="rgb(208,207,46)" fg:x="4270" fg:w="2"/><text x="83.5833%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="83.3333%" y="341" width="0.0390%" height="15" fill="rgb(234,176,4)" fg:x="4270" fg:w="2"/><text x="83.5833%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="83.3528%" y="325" width="0.0195%" height="15" fill="rgb(230,133,28)" fg:x="4271" fg:w="1"/><text x="83.6028%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="83.3528%" y="309" width="0.0195%" height="15" fill="rgb(211,137,40)" fg:x="4271" fg:w="1"/><text x="83.6028%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="83.3528%" y="293" width="0.0195%" height="15" fill="rgb(254,35,13)" fg:x="4271" fg:w="1"/><text x="83.6028%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="83.3528%" y="277" width="0.0195%" height="15" fill="rgb(225,49,51)" fg:x="4271" fg:w="1"/><text x="83.6028%" y="287.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="83.3528%" y="261" width="0.0195%" height="15" fill="rgb(251,10,15)" fg:x="4271" fg:w="1"/><text x="83.6028%" y="271.50"></text></g><g><title>snix_eval::vm::generators::_&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator::_{{closure}} (1 samples, 0.02%)</title><rect x="83.3724%" y="341" width="0.0195%" height="15" fill="rgb(228,207,15)" fg:x="4272" fg:w="1"/><text x="83.6224%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5 samples, 0.10%)</title><rect x="83.3919%" y="293" width="0.0976%" height="15" fill="rgb(241,99,19)" fg:x="4273" fg:w="5"/><text x="83.6419%" y="303.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (10 samples, 0.20%)</title><rect x="83.3138%" y="373" width="0.1952%" height="15" fill="rgb(207,104,49)" fg:x="4269" fg:w="10"/><text x="83.5638%" y="383.50"></text></g><g><title>snix_eval::vm::generators::_&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::enqueue_generator::_{{closure}} (7 samples, 0.14%)</title><rect x="83.3724%" y="357" width="0.1366%" height="15" fill="rgb(234,99,18)" fg:x="4272" fg:w="7"/><text x="83.6224%" y="367.50"></text></g><g><title>snix_eval::vm::generators::pin_generator (6 samples, 0.12%)</title><rect x="83.3919%" y="341" width="0.1171%" height="15" fill="rgb(213,191,49)" fg:x="4273" fg:w="6"/><text x="83.6419%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.12%)</title><rect x="83.3919%" y="325" width="0.1171%" height="15" fill="rgb(210,226,19)" fg:x="4273" fg:w="6"/><text x="83.6419%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.12%)</title><rect x="83.3919%" y="309" width="0.1171%" height="15" fill="rgb(229,97,18)" fg:x="4273" fg:w="6"/><text x="83.6419%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="83.4895%" y="293" width="0.0195%" height="15" fill="rgb(211,167,15)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="83.4895%" y="277" width="0.0195%" height="15" fill="rgb(210,169,34)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="83.4895%" y="261" width="0.0195%" height="15" fill="rgb(241,121,31)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="83.4895%" y="245" width="0.0195%" height="15" fill="rgb(232,40,11)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="83.4895%" y="229" width="0.0195%" height="15" fill="rgb(205,86,26)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="239.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="83.4895%" y="213" width="0.0195%" height="15" fill="rgb(231,126,28)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="223.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="83.4895%" y="197" width="0.0195%" height="15" fill="rgb(219,221,18)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="207.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="83.4895%" y="181" width="0.0195%" height="15" fill="rgb(211,40,0)" fg:x="4278" fg:w="1"/><text x="83.7395%" y="191.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="83.5090%" y="357" width="0.0195%" height="15" fill="rgb(239,85,43)" fg:x="4279" fg:w="1"/><text x="83.7590%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="83.5090%" y="341" width="0.0195%" height="15" fill="rgb(231,55,21)" fg:x="4279" fg:w="1"/><text x="83.7590%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="83.5090%" y="325" width="0.0195%" height="15" fill="rgb(225,184,43)" fg:x="4279" fg:w="1"/><text x="83.7590%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="83.5285%" y="325" width="0.0195%" height="15" fill="rgb(251,158,41)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="83.5285%" y="309" width="0.0195%" height="15" fill="rgb(234,159,37)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="83.5285%" y="293" width="0.0195%" height="15" fill="rgb(216,204,22)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.02%)</title><rect x="83.5285%" y="277" width="0.0195%" height="15" fill="rgb(214,17,3)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.02%)</title><rect x="83.5285%" y="261" width="0.0195%" height="15" fill="rgb(212,111,17)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.02%)</title><rect x="83.5285%" y="245" width="0.0195%" height="15" fill="rgb(221,157,24)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.02%)</title><rect x="83.5285%" y="229" width="0.0195%" height="15" fill="rgb(252,16,13)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="239.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="83.5285%" y="213" width="0.0195%" height="15" fill="rgb(221,62,2)" fg:x="4280" fg:w="1"/><text x="83.7785%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2 samples, 0.04%)</title><rect x="83.5285%" y="357" width="0.0390%" height="15" fill="rgb(247,87,22)" fg:x="4280" fg:w="2"/><text x="83.7785%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.04%)</title><rect x="83.5285%" y="341" width="0.0390%" height="15" fill="rgb(215,73,9)" fg:x="4280" fg:w="2"/><text x="83.7785%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.02%)</title><rect x="83.5480%" y="325" width="0.0195%" height="15" fill="rgb(207,175,33)" fg:x="4281" fg:w="1"/><text x="83.7980%" y="335.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1 samples, 0.02%)</title><rect x="83.5480%" y="309" width="0.0195%" height="15" fill="rgb(243,129,54)" fg:x="4281" fg:w="1"/><text x="83.7980%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="83.5480%" y="293" width="0.0195%" height="15" fill="rgb(227,119,45)" fg:x="4281" fg:w="1"/><text x="83.7980%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="83.5675%" y="357" width="0.0390%" height="15" fill="rgb(205,109,36)" fg:x="4282" fg:w="2"/><text x="83.8175%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="83.5675%" y="341" width="0.0390%" height="15" fill="rgb(205,6,39)" fg:x="4282" fg:w="2"/><text x="83.8175%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.04%)</title><rect x="83.5675%" y="325" width="0.0390%" height="15" fill="rgb(221,32,16)" fg:x="4282" fg:w="2"/><text x="83.8175%" y="335.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="83.5870%" y="309" width="0.0195%" height="15" fill="rgb(228,144,50)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="319.50"></text></g><g><title>bstr::impls::bstr::&lt;impl core::hash::Hash for bstr::bstr::BStr&gt;::hash (1 samples, 0.02%)</title><rect x="83.5870%" y="293" width="0.0195%" height="15" fill="rgb(229,201,53)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="83.5870%" y="277" width="0.0195%" height="15" fill="rgb(249,153,27)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.02%)</title><rect x="83.5870%" y="261" width="0.0195%" height="15" fill="rgb(227,106,25)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="271.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="83.5870%" y="245" width="0.0195%" height="15" fill="rgb(230,65,29)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="255.50"></text></g><g><title>rustc_hash::hash_bytes (1 samples, 0.02%)</title><rect x="83.5870%" y="229" width="0.0195%" height="15" fill="rgb(221,57,46)" fg:x="4283" fg:w="1"/><text x="83.8370%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.14%)</title><rect x="83.5090%" y="373" width="0.1366%" height="15" fill="rgb(229,161,17)" fg:x="4279" fg:w="7"/><text x="83.7590%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (2 samples, 0.04%)</title><rect x="83.6066%" y="357" width="0.0390%" height="15" fill="rgb(222,213,11)" fg:x="4284" fg:w="2"/><text x="83.8566%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.04%)</title><rect x="83.6066%" y="341" width="0.0390%" height="15" fill="rgb(235,35,13)" fg:x="4284" fg:w="2"/><text x="83.8566%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.04%)</title><rect x="83.6066%" y="325" width="0.0390%" height="15" fill="rgb(233,158,34)" fg:x="4284" fg:w="2"/><text x="83.8566%" y="335.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="83.6066%" y="309" width="0.0390%" height="15" fill="rgb(215,151,48)" fg:x="4284" fg:w="2"/><text x="83.8566%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="83.6456%" y="373" width="0.0390%" height="15" fill="rgb(229,84,14)" fg:x="4286" fg:w="2"/><text x="83.8956%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="83.6651%" y="357" width="0.0195%" height="15" fill="rgb(229,68,14)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.02%)</title><rect x="83.6651%" y="341" width="0.0195%" height="15" fill="rgb(243,106,26)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.02%)</title><rect x="83.6651%" y="325" width="0.0195%" height="15" fill="rgb(206,45,38)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="335.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S,A&gt;::insert_with_hasher::_{{closure}} (1 samples, 0.02%)</title><rect x="83.6651%" y="309" width="0.0195%" height="15" fill="rgb(226,6,15)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="319.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node::_{{closure}} (1 samples, 0.02%)</title><rect x="83.6651%" y="293" width="0.0195%" height="15" fill="rgb(232,22,54)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="303.50"></text></g><g><title>rowan::green::node_cache::node_hash (1 samples, 0.02%)</title><rect x="83.6651%" y="277" width="0.0195%" height="15" fill="rgb(229,222,32)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="287.50"></text></g><g><title>rowan::green::node_cache::token_hash (1 samples, 0.02%)</title><rect x="83.6651%" y="261" width="0.0195%" height="15" fill="rgb(228,62,29)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="83.6651%" y="245" width="0.0195%" height="15" fill="rgb(251,103,34)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="255.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.02%)</title><rect x="83.6651%" y="229" width="0.0195%" height="15" fill="rgb(233,12,30)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="239.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="83.6651%" y="213" width="0.0195%" height="15" fill="rgb(238,52,0)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="223.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.02%)</title><rect x="83.6651%" y="197" width="0.0195%" height="15" fill="rgb(223,98,5)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.02%)</title><rect x="83.6651%" y="181" width="0.0195%" height="15" fill="rgb(228,75,37)" fg:x="4287" fg:w="1"/><text x="83.9151%" y="191.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.04%)</title><rect x="83.6846%" y="373" width="0.0390%" height="15" fill="rgb(205,115,49)" fg:x="4288" fg:w="2"/><text x="83.9346%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="83.7041%" y="357" width="0.0195%" height="15" fill="rgb(250,154,43)" fg:x="4289" fg:w="1"/><text x="83.9541%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="83.7041%" y="341" width="0.0195%" height="15" fill="rgb(226,43,29)" fg:x="4289" fg:w="1"/><text x="83.9541%" y="351.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="83.7041%" y="325" width="0.0195%" height="15" fill="rgb(249,228,39)" fg:x="4289" fg:w="1"/><text x="83.9541%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.02%)</title><rect x="83.7041%" y="309" width="0.0195%" height="15" fill="rgb(216,79,43)" fg:x="4289" fg:w="1"/><text x="83.9541%" y="319.50"></text></g><g><title>indicatif::draw_target::Drawable::draw (1 samples, 0.02%)</title><rect x="83.7237%" y="373" width="0.0195%" height="15" fill="rgb(228,95,12)" fg:x="4290" fg:w="1"/><text x="83.9737%" y="383.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::drawable (1 samples, 0.02%)</title><rect x="83.7432%" y="373" width="0.0195%" height="15" fill="rgb(249,221,15)" fg:x="4291" fg:w="1"/><text x="83.9932%" y="383.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::width (1 samples, 0.02%)</title><rect x="83.7627%" y="373" width="0.0195%" height="15" fill="rgb(233,34,13)" fg:x="4292" fg:w="1"/><text x="84.0127%" y="383.50"></text></g><g><title>indicatif::multi::MultiState::draw (8 samples, 0.16%)</title><rect x="83.7822%" y="373" width="0.1561%" height="15" fill="rgb(214,103,39)" fg:x="4293" fg:w="8"/><text x="84.0322%" y="383.50"></text></g><g><title>&lt;indicatif::style::PaddedStringDisplay as core::fmt::Display&gt;::fmt (3 samples, 0.06%)</title><rect x="83.8798%" y="357" width="0.0585%" height="15" fill="rgb(251,126,39)" fg:x="4298" fg:w="3"/><text x="84.1298%" y="367.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.02%)</title><rect x="83.9188%" y="341" width="0.0195%" height="15" fill="rgb(214,216,36)" fg:x="4300" fg:w="1"/><text x="84.1688%" y="351.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::is_hidden (4 samples, 0.08%)</title><rect x="83.9383%" y="373" width="0.0781%" height="15" fill="rgb(220,221,8)" fg:x="4301" fg:w="4"/><text x="84.1883%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (4 samples, 0.08%)</title><rect x="83.9383%" y="357" width="0.0781%" height="15" fill="rgb(240,216,3)" fg:x="4301" fg:w="4"/><text x="84.1883%" y="367.50"></text></g><g><title>indicatif::progress_bar::TickerControl::run (17 samples, 0.33%)</title><rect x="84.0164%" y="373" width="0.3318%" height="15" fill="rgb(232,218,17)" fg:x="4305" fg:w="17"/><text x="84.2664%" y="383.50"></text></g><g><title>indicatif::state::BarState::draw (2 samples, 0.04%)</title><rect x="84.3482%" y="373" width="0.0390%" height="15" fill="rgb(229,163,45)" fg:x="4322" fg:w="2"/><text x="84.5982%" y="383.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (5 samples, 0.10%)</title><rect x="84.3872%" y="373" width="0.0976%" height="15" fill="rgb(231,110,42)" fg:x="4324" fg:w="5"/><text x="84.6372%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.5433%" y="357" width="0.0195%" height="15" fill="rgb(208,170,48)" fg:x="4332" fg:w="1"/><text x="84.7933%" y="367.50"></text></g><g><title>__ieee754_pow_fma (4 samples, 0.08%)</title><rect x="84.5824%" y="341" width="0.0781%" height="15" fill="rgb(239,116,25)" fg:x="4334" fg:w="4"/><text x="84.8324%" y="351.50"></text></g><g><title>indicatif::state::ProgressState::per_sec (10 samples, 0.20%)</title><rect x="84.4848%" y="373" width="0.1952%" height="15" fill="rgb(219,200,50)" fg:x="4329" fg:w="10"/><text x="84.7348%" y="383.50"></text></g><g><title>pow@@GLIBC_2.29 (6 samples, 0.12%)</title><rect x="84.5628%" y="357" width="0.1171%" height="15" fill="rgb(245,200,0)" fg:x="4333" fg:w="6"/><text x="84.8128%" y="367.50"></text></g><g><title>__pow_finite@GLIBC_2.15@plt (1 samples, 0.02%)</title><rect x="84.6604%" y="341" width="0.0195%" height="15" fill="rgb(245,119,33)" fg:x="4338" fg:w="1"/><text x="84.9104%" y="351.50"></text></g><g><title>indicatif::style::ProgressStyle::format_bar (1 samples, 0.02%)</title><rect x="84.6799%" y="373" width="0.0195%" height="15" fill="rgb(231,125,12)" fg:x="4339" fg:w="1"/><text x="84.9299%" y="383.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.04%)</title><rect x="84.8556%" y="357" width="0.0390%" height="15" fill="rgb(216,96,41)" fg:x="4348" fg:w="2"/><text x="85.1056%" y="367.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Display for f64&gt;::fmt (2 samples, 0.04%)</title><rect x="84.8946%" y="341" width="0.0390%" height="15" fill="rgb(248,43,45)" fg:x="4350" fg:w="2"/><text x="85.1446%" y="351.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (2 samples, 0.04%)</title><rect x="84.9727%" y="325" width="0.0390%" height="15" fill="rgb(217,222,7)" fg:x="4354" fg:w="2"/><text x="85.2227%" y="335.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (2 samples, 0.04%)</title><rect x="84.9727%" y="309" width="0.0390%" height="15" fill="rgb(233,28,6)" fg:x="4354" fg:w="2"/><text x="85.2227%" y="319.50"></text></g><g><title>&lt;indicatif::format::BinaryBytes as core::fmt::Display&gt;::fmt (7 samples, 0.14%)</title><rect x="84.8946%" y="357" width="0.1366%" height="15" fill="rgb(231,218,15)" fg:x="4350" fg:w="7"/><text x="85.1446%" y="367.50"></text></g><g><title>core::fmt::write (5 samples, 0.10%)</title><rect x="84.9336%" y="341" width="0.0976%" height="15" fill="rgb(226,171,48)" fg:x="4352" fg:w="5"/><text x="85.1836%" y="351.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (1 samples, 0.02%)</title><rect x="85.0117%" y="325" width="0.0195%" height="15" fill="rgb(235,201,9)" fg:x="4356" fg:w="1"/><text x="85.2617%" y="335.50"></text></g><g><title>__memcmp_evex_movbe (2 samples, 0.04%)</title><rect x="85.0312%" y="357" width="0.0390%" height="15" fill="rgb(217,80,15)" fg:x="4357" fg:w="2"/><text x="85.2812%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="85.0703%" y="357" width="0.0195%" height="15" fill="rgb(219,152,8)" fg:x="4359" fg:w="1"/><text x="85.3203%" y="367.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (22 samples, 0.43%)</title><rect x="84.6995%" y="373" width="0.4294%" height="15" fill="rgb(243,107,38)" fg:x="4340" fg:w="22"/><text x="84.9495%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.04%)</title><rect x="85.0898%" y="357" width="0.0390%" height="15" fill="rgb(231,17,5)" fg:x="4360" fg:w="2"/><text x="85.3398%" y="367.50"></text></g><g><title>indicatif::style::ProgressStyle::push_line (3 samples, 0.06%)</title><rect x="85.1288%" y="373" width="0.0585%" height="15" fill="rgb(209,25,54)" fg:x="4362" fg:w="3"/><text x="85.3788%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.06%)</title><rect x="85.1288%" y="357" width="0.0585%" height="15" fill="rgb(219,0,2)" fg:x="4362" fg:w="3"/><text x="85.3788%" y="367.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h24fcdd9ce88e58ffE.llvm.5229664222725191257 (3 samples, 0.06%)</title><rect x="85.1288%" y="341" width="0.0585%" height="15" fill="rgb(246,9,5)" fg:x="4362" fg:w="3"/><text x="85.3788%" y="351.50"></text></g><g><title>mi_arena_try_alloc.isra.0 (1 samples, 0.02%)</title><rect x="85.1874%" y="373" width="0.0195%" height="15" fill="rgb(226,159,4)" fg:x="4365" fg:w="1"/><text x="85.4374%" y="383.50"></text></g><g><title>_mi_arena_id_none (1 samples, 0.02%)</title><rect x="85.1874%" y="357" width="0.0195%" height="15" fill="rgb(219,175,34)" fg:x="4365" fg:w="1"/><text x="85.4374%" y="367.50"></text></g><g><title>mi_free (6 samples, 0.12%)</title><rect x="85.2069%" y="373" width="0.1171%" height="15" fill="rgb(236,10,46)" fg:x="4366" fg:w="6"/><text x="85.4569%" y="383.50"></text></g><g><title>mi_free_block_delayed_mt (10 samples, 0.20%)</title><rect x="85.3240%" y="373" width="0.1952%" height="15" fill="rgb(240,211,16)" fg:x="4372" fg:w="10"/><text x="85.5740%" y="383.50"></text></g><g><title>mi_heap_malloc_aligned_at (17 samples, 0.33%)</title><rect x="85.5191%" y="373" width="0.3318%" height="15" fill="rgb(205,3,43)" fg:x="4382" fg:w="17"/><text x="85.7691%" y="383.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (3 samples, 0.06%)</title><rect x="85.8509%" y="373" width="0.0585%" height="15" fill="rgb(245,7,22)" fg:x="4399" fg:w="3"/><text x="86.1009%" y="383.50"></text></g><g><title>mi_malloc_aligned (7 samples, 0.14%)</title><rect x="85.9094%" y="373" width="0.1366%" height="15" fill="rgb(239,132,32)" fg:x="4402" fg:w="7"/><text x="86.1594%" y="383.50"></text></g><g><title>mi_option_get (8 samples, 0.16%)</title><rect x="86.0461%" y="373" width="0.1561%" height="15" fill="rgb(228,202,34)" fg:x="4409" fg:w="8"/><text x="86.2961%" y="383.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (21 samples, 0.41%)</title><rect x="86.2022%" y="373" width="0.4098%" height="15" fill="rgb(254,200,22)" fg:x="4417" fg:w="21"/><text x="86.4522%" y="383.50"></text></g><g><title>mi_process_done (1 samples, 0.02%)</title><rect x="86.6120%" y="373" width="0.0195%" height="15" fill="rgb(219,10,39)" fg:x="4438" fg:w="1"/><text x="86.8620%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="86.6120%" y="357" width="0.0195%" height="15" fill="rgb(226,210,39)" fg:x="4438" fg:w="1"/><text x="86.8620%" y="367.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.02%)</title><rect x="86.6120%" y="341" width="0.0195%" height="15" fill="rgb(208,219,16)" fg:x="4438" fg:w="1"/><text x="86.8620%" y="351.50"></text></g><g><title>_mi_segment_collect (1 samples, 0.02%)</title><rect x="86.6120%" y="325" width="0.0195%" height="15" fill="rgb(216,158,51)" fg:x="4438" fg:w="1"/><text x="86.8620%" y="335.50"></text></g><g><title>mi_segment_alloc (1 samples, 0.02%)</title><rect x="86.6315%" y="373" width="0.0195%" height="15" fill="rgb(233,14,44)" fg:x="4439" fg:w="1"/><text x="86.8815%" y="383.50"></text></g><g><title>_mi_stat_increase (1 samples, 0.02%)</title><rect x="86.6315%" y="357" width="0.0195%" height="15" fill="rgb(237,97,39)" fg:x="4439" fg:w="1"/><text x="86.8815%" y="367.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.02%)</title><rect x="86.6511%" y="373" width="0.0195%" height="15" fill="rgb(218,198,43)" fg:x="4440" fg:w="1"/><text x="86.9011%" y="383.50"></text></g><g><title>mi_stats_merge_from.part.0 (2 samples, 0.04%)</title><rect x="86.6706%" y="373" width="0.0390%" height="15" fill="rgb(231,104,20)" fg:x="4441" fg:w="2"/><text x="86.9206%" y="383.50"></text></g><g><title>nix_compat::derivation::Derivation::hash_derivation_modulo (1 samples, 0.02%)</title><rect x="86.7096%" y="373" width="0.0195%" height="15" fill="rgb(254,36,13)" fg:x="4443" fg:w="1"/><text x="86.9596%" y="383.50"></text></g><g><title>nix_compat::derivation::write::write_input_sources (1 samples, 0.02%)</title><rect x="86.7096%" y="357" width="0.0195%" height="15" fill="rgb(248,14,50)" fg:x="4443" fg:w="1"/><text x="86.9596%" y="367.50"></text></g><g><title>nix_compat::derivation::write::write_arguments (1 samples, 0.02%)</title><rect x="86.7291%" y="373" width="0.0195%" height="15" fill="rgb(217,107,29)" fg:x="4444" fg:w="1"/><text x="86.9791%" y="383.50"></text></g><g><title>nix_compat::derivation::write::write_array_elements (1 samples, 0.02%)</title><rect x="86.7291%" y="357" width="0.0195%" height="15" fill="rgb(251,169,33)" fg:x="4444" fg:w="1"/><text x="86.9791%" y="367.50"></text></g><g><title>nix_compat::aterm::escape::escape_bytes (1 samples, 0.02%)</title><rect x="86.7291%" y="341" width="0.0195%" height="15" fill="rgb(217,108,32)" fg:x="4444" fg:w="1"/><text x="86.9791%" y="351.50"></text></g><g><title>nix_compat::derivation::write::write_field (1 samples, 0.02%)</title><rect x="86.7486%" y="373" width="0.0195%" height="15" fill="rgb(219,66,42)" fg:x="4445" fg:w="1"/><text x="86.9986%" y="383.50"></text></g><g><title>nix_compat::aterm::escape::escape_bytes (1 samples, 0.02%)</title><rect x="86.7486%" y="357" width="0.0195%" height="15" fill="rgb(206,180,7)" fg:x="4445" fg:w="1"/><text x="86.9986%" y="367.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.02%)</title><rect x="86.7486%" y="341" width="0.0195%" height="15" fill="rgb(208,226,31)" fg:x="4445" fg:w="1"/><text x="86.9986%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="86.7681%" y="277" width="0.0195%" height="15" fill="rgb(218,26,49)" fg:x="4446" fg:w="1"/><text x="87.0181%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="86.7681%" y="261" width="0.0195%" height="15" fill="rgb(233,197,48)" fg:x="4446" fg:w="1"/><text x="87.0181%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.02%)</title><rect x="86.7681%" y="245" width="0.0195%" height="15" fill="rgb(252,181,51)" fg:x="4446" fg:w="1"/><text x="87.0181%" y="255.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="86.7681%" y="229" width="0.0195%" height="15" fill="rgb(253,90,19)" fg:x="4446" fg:w="1"/><text x="87.0181%" y="239.50"></text></g><g><title>nix_compat::store_path::utils::build_store_path_from_fingerprint_parts (2 samples, 0.04%)</title><rect x="86.7681%" y="373" width="0.0390%" height="15" fill="rgb(215,171,30)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="383.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.04%)</title><rect x="86.7681%" y="357" width="0.0390%" height="15" fill="rgb(214,222,9)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.04%)</title><rect x="86.7681%" y="341" width="0.0390%" height="15" fill="rgb(223,3,22)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="351.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2 samples, 0.04%)</title><rect x="86.7681%" y="325" width="0.0390%" height="15" fill="rgb(225,196,46)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.04%)</title><rect x="86.7681%" y="309" width="0.0390%" height="15" fill="rgb(209,110,37)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.04%)</title><rect x="86.7681%" y="293" width="0.0390%" height="15" fill="rgb(249,89,12)" fg:x="4446" fg:w="2"/><text x="87.0181%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="86.7877%" y="277" width="0.0195%" height="15" fill="rgb(226,27,33)" fg:x="4447" fg:w="1"/><text x="87.0377%" y="287.50"></text></g><g><title>path_clean::clean (1 samples, 0.02%)</title><rect x="86.8072%" y="373" width="0.0195%" height="15" fill="rgb(213,82,22)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="86.8072%" y="357" width="0.0195%" height="15" fill="rgb(248,140,0)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="86.8072%" y="341" width="0.0195%" height="15" fill="rgb(228,106,3)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="86.8072%" y="325" width="0.0195%" height="15" fill="rgb(209,23,37)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="86.8072%" y="309" width="0.0195%" height="15" fill="rgb(241,93,50)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.02%)</title><rect x="86.8072%" y="293" width="0.0195%" height="15" fill="rgb(253,46,43)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="303.50"></text></g><g><title>mi_heap_realloc_aligned (1 samples, 0.02%)</title><rect x="86.8072%" y="277" width="0.0195%" height="15" fill="rgb(226,206,43)" fg:x="4448" fg:w="1"/><text x="87.0572%" y="287.50"></text></g><g><title>rnix::ast::str_util::&lt;impl rnix::ast::nodes::Str&gt;::normalized_parts (1 samples, 0.02%)</title><rect x="86.8267%" y="373" width="0.0195%" height="15" fill="rgb(217,54,7)" fg:x="4449" fg:w="1"/><text x="87.0767%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.02%)</title><rect x="86.8267%" y="357" width="0.0195%" height="15" fill="rgb(223,5,52)" fg:x="4449" fg:w="1"/><text x="87.0767%" y="367.50"></text></g><g><title>rnix::ast::support::nth (2 samples, 0.04%)</title><rect x="86.8462%" y="373" width="0.0390%" height="15" fill="rgb(206,52,46)" fg:x="4450" fg:w="2"/><text x="87.0962%" y="383.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children (2 samples, 0.04%)</title><rect x="86.8462%" y="357" width="0.0390%" height="15" fill="rgb(253,136,11)" fg:x="4450" fg:w="2"/><text x="87.0962%" y="367.50"></text></g><g><title>rowan::cursor::SyntaxNode::children (2 samples, 0.04%)</title><rect x="86.8462%" y="341" width="0.0390%" height="15" fill="rgb(208,106,33)" fg:x="4450" fg:w="2"/><text x="87.0962%" y="351.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child (1 samples, 0.02%)</title><rect x="86.8657%" y="325" width="0.0195%" height="15" fill="rgb(206,54,4)" fg:x="4451" fg:w="1"/><text x="87.1157%" y="335.50"></text></g><g><title>rowan::cursor::SyntaxNode::green_ref (1 samples, 0.02%)</title><rect x="86.8657%" y="309" width="0.0195%" height="15" fill="rgb(213,3,15)" fg:x="4451" fg:w="1"/><text x="87.1157%" y="319.50"></text></g><g><title>rowan::cursor::NodeData::green (1 samples, 0.02%)</title><rect x="86.8657%" y="293" width="0.0195%" height="15" fill="rgb(252,211,39)" fg:x="4451" fg:w="1"/><text x="87.1157%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="86.8852%" y="293" width="0.0195%" height="15" fill="rgb(223,6,36)" fg:x="4452" fg:w="1"/><text x="87.1352%" y="303.50"></text></g><g><title>rnix::ast::support::token_u (2 samples, 0.04%)</title><rect x="86.8852%" y="373" width="0.0390%" height="15" fill="rgb(252,169,45)" fg:x="4452" fg:w="2"/><text x="87.1352%" y="383.50"></text></g><g><title>rnix::ast::support::children_tokens_u (2 samples, 0.04%)</title><rect x="86.8852%" y="357" width="0.0390%" height="15" fill="rgb(212,48,26)" fg:x="4452" fg:w="2"/><text x="87.1352%" y="367.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::children_with_tokens (2 samples, 0.04%)</title><rect x="86.8852%" y="341" width="0.0390%" height="15" fill="rgb(251,102,48)" fg:x="4452" fg:w="2"/><text x="87.1352%" y="351.50"></text></g><g><title>rowan::cursor::SyntaxNode::children_with_tokens (2 samples, 0.04%)</title><rect x="86.8852%" y="325" width="0.0390%" height="15" fill="rgb(243,208,16)" fg:x="4452" fg:w="2"/><text x="87.1352%" y="335.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child_or_token (2 samples, 0.04%)</title><rect x="86.8852%" y="309" width="0.0390%" height="15" fill="rgb(219,96,24)" fg:x="4452" fg:w="2"/><text x="87.1352%" y="319.50"></text></g><g><title>rowan::cursor::SyntaxNode::green_ref (1 samples, 0.02%)</title><rect x="86.9048%" y="293" width="0.0195%" height="15" fill="rgb(219,33,29)" fg:x="4453" fg:w="1"/><text x="87.1548%" y="303.50"></text></g><g><title>rowan::cursor::NodeData::green (1 samples, 0.02%)</title><rect x="86.9048%" y="277" width="0.0195%" height="15" fill="rgb(223,176,5)" fg:x="4453" fg:w="1"/><text x="87.1548%" y="287.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::bump (2 samples, 0.04%)</title><rect x="86.9243%" y="373" width="0.0390%" height="15" fill="rgb(228,140,14)" fg:x="4454" fg:w="2"/><text x="87.1743%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::expect_peek_any (1 samples, 0.02%)</title><rect x="86.9633%" y="373" width="0.0195%" height="15" fill="rgb(217,179,31)" fg:x="4456" fg:w="1"/><text x="87.2133%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_expr (1 samples, 0.02%)</title><rect x="86.9828%" y="373" width="0.0195%" height="15" fill="rgb(230,9,30)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_set (1 samples, 0.02%)</title><rect x="86.9828%" y="357" width="0.0195%" height="15" fill="rgb(230,136,20)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_attr (1 samples, 0.02%)</title><rect x="86.9828%" y="341" width="0.0195%" height="15" fill="rgb(215,210,22)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="351.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek (1 samples, 0.02%)</title><rect x="86.9828%" y="325" width="0.0195%" height="15" fill="rgb(218,43,5)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="335.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (1 samples, 0.02%)</title><rect x="86.9828%" y="309" width="0.0195%" height="15" fill="rgb(216,11,5)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="319.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_raw (1 samples, 0.02%)</title><rect x="86.9828%" y="293" width="0.0195%" height="15" fill="rgb(209,82,29)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front (1 samples, 0.02%)</title><rect x="86.9828%" y="277" width="0.0195%" height="15" fill="rgb(244,115,12)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="86.9828%" y="261" width="0.0195%" height="15" fill="rgb(222,82,18)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.02%)</title><rect x="86.9828%" y="245" width="0.0195%" height="15" fill="rgb(249,227,8)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="255.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.02%)</title><rect x="86.9828%" y="229" width="0.0195%" height="15" fill="rgb(253,141,45)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="239.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 0.02%)</title><rect x="86.9828%" y="213" width="0.0195%" height="15" fill="rgb(234,184,4)" fg:x="4457" fg:w="1"/><text x="87.2328%" y="223.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_negate (1 samples, 0.02%)</title><rect x="87.0023%" y="373" width="0.0195%" height="15" fill="rgb(218,194,23)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_fn (1 samples, 0.02%)</title><rect x="87.0023%" y="357" width="0.0195%" height="15" fill="rgb(235,66,41)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek (1 samples, 0.02%)</title><rect x="87.0023%" y="341" width="0.0195%" height="15" fill="rgb(245,217,1)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="351.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_right_assoc (1 samples, 0.02%)</title><rect x="87.0023%" y="325" width="0.0195%" height="15" fill="rgb(229,91,1)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="335.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_simple (1 samples, 0.02%)</title><rect x="87.0023%" y="309" width="0.0195%" height="15" fill="rgb(207,101,30)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1 samples, 0.02%)</title><rect x="87.0023%" y="293" width="0.0195%" height="15" fill="rgb(223,82,49)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1 samples, 0.02%)</title><rect x="87.0023%" y="277" width="0.0195%" height="15" fill="rgb(218,167,17)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="87.0023%" y="261" width="0.0195%" height="15" fill="rgb(208,103,14)" fg:x="4458" fg:w="1"/><text x="87.2523%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="87.0219%" y="357" width="0.0390%" height="15" fill="rgb(238,20,8)" fg:x="4459" fg:w="2"/><text x="87.2719%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data::_{{closure}} (2 samples, 0.04%)</title><rect x="87.0219%" y="341" width="0.0390%" height="15" fill="rgb(218,80,54)" fg:x="4459" fg:w="2"/><text x="87.2719%" y="351.50"></text></g><g><title>rnix::kinds::SyntaxKind::is_trivia (2 samples, 0.04%)</title><rect x="87.0219%" y="325" width="0.0390%" height="15" fill="rgb(240,144,17)" fg:x="4459" fg:w="2"/><text x="87.2719%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="87.0609%" y="325" width="0.0195%" height="15" fill="rgb(245,27,50)" fg:x="4461" fg:w="1"/><text x="87.3109%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="87.0609%" y="309" width="0.0195%" height="15" fill="rgb(251,51,7)" fg:x="4461" fg:w="1"/><text x="87.3109%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h837f9c37ec433746E.llvm.13193952617137412279 (1 samples, 0.02%)</title><rect x="87.0609%" y="293" width="0.0195%" height="15" fill="rgb(245,217,29)" fg:x="4461" fg:w="1"/><text x="87.3109%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0804%" y="309" width="0.0195%" height="15" fill="rgb(221,176,29)" fg:x="4462" fg:w="1"/><text x="87.3304%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0804%" y="293" width="0.0195%" height="15" fill="rgb(212,180,24)" fg:x="4462" fg:w="1"/><text x="87.3304%" y="303.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="87.0804%" y="277" width="0.0195%" height="15" fill="rgb(254,24,2)" fg:x="4462" fg:w="1"/><text x="87.3304%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0804%" y="261" width="0.0195%" height="15" fill="rgb(230,100,2)" fg:x="4462" fg:w="1"/><text x="87.3304%" y="271.50"></text></g><g><title>&lt;rnix::tokenizer::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="87.0609%" y="341" width="0.0781%" height="15" fill="rgb(219,142,25)" fg:x="4461" fg:w="4"/><text x="87.3109%" y="351.50"></text></g><g><title>rnix::tokenizer::Tokenizer::next_inner (3 samples, 0.06%)</title><rect x="87.0804%" y="325" width="0.0585%" height="15" fill="rgb(240,73,43)" fg:x="4462" fg:w="3"/><text x="87.3304%" y="335.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.04%)</title><rect x="87.0999%" y="309" width="0.0390%" height="15" fill="rgb(214,114,15)" fg:x="4463" fg:w="2"/><text x="87.3499%" y="319.50"></text></g><g><title>core::str::count::count_chars (2 samples, 0.04%)</title><rect x="87.0999%" y="293" width="0.0390%" height="15" fill="rgb(207,130,4)" fg:x="4463" fg:w="2"/><text x="87.3499%" y="303.50"></text></g><g><title>core::str::count::char_count_general_case (2 samples, 0.04%)</title><rect x="87.0999%" y="277" width="0.0390%" height="15" fill="rgb(221,25,40)" fg:x="4463" fg:w="2"/><text x="87.3499%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front (1 samples, 0.02%)</title><rect x="87.1390%" y="341" width="0.0195%" height="15" fill="rgb(241,184,7)" fg:x="4465" fg:w="1"/><text x="87.3890%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="87.1390%" y="325" width="0.0195%" height="15" fill="rgb(235,159,4)" fg:x="4465" fg:w="1"/><text x="87.3890%" y="335.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.02%)</title><rect x="87.1390%" y="309" width="0.0195%" height="15" fill="rgb(214,87,48)" fg:x="4465" fg:w="1"/><text x="87.3890%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.02%)</title><rect x="87.1390%" y="293" width="0.0195%" height="15" fill="rgb(246,198,24)" fg:x="4465" fg:w="1"/><text x="87.3890%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 0.02%)</title><rect x="87.1390%" y="277" width="0.0195%" height="15" fill="rgb(209,66,40)" fg:x="4465" fg:w="1"/><text x="87.3890%" y="287.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_data (8 samples, 0.16%)</title><rect x="87.0219%" y="373" width="0.1561%" height="15" fill="rgb(233,147,39)" fg:x="4459" fg:w="8"/><text x="87.2719%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::peek_raw (6 samples, 0.12%)</title><rect x="87.0609%" y="357" width="0.1171%" height="15" fill="rgb(231,145,52)" fg:x="4461" fg:w="6"/><text x="87.3109%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1 samples, 0.02%)</title><rect x="87.1585%" y="341" width="0.0195%" height="15" fill="rgb(206,20,26)" fg:x="4466" fg:w="1"/><text x="87.4085%" y="351.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (3 samples, 0.06%)</title><rect x="87.1780%" y="373" width="0.0585%" height="15" fill="rgb(238,220,4)" fg:x="4467" fg:w="3"/><text x="87.4280%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="87.1780%" y="357" width="0.0585%" height="15" fill="rgb(252,195,42)" fg:x="4467" fg:w="3"/><text x="87.4280%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="87.1780%" y="341" width="0.0585%" height="15" fill="rgb(209,10,6)" fg:x="4467" fg:w="3"/><text x="87.4280%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (3 samples, 0.06%)</title><rect x="87.1780%" y="325" width="0.0585%" height="15" fill="rgb(229,3,52)" fg:x="4467" fg:w="3"/><text x="87.4280%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (3 samples, 0.06%)</title><rect x="87.1780%" y="309" width="0.0585%" height="15" fill="rgb(253,49,37)" fg:x="4467" fg:w="3"/><text x="87.4280%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (1 samples, 0.02%)</title><rect x="87.2170%" y="293" width="0.0195%" height="15" fill="rgb(240,103,49)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.02%)</title><rect x="87.2170%" y="277" width="0.0195%" height="15" fill="rgb(250,182,30)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.02%)</title><rect x="87.2170%" y="261" width="0.0195%" height="15" fill="rgb(248,8,30)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="271.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.2170%" y="245" width="0.0195%" height="15" fill="rgb(237,120,30)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="87.2170%" y="229" width="0.0195%" height="15" fill="rgb(221,146,34)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="239.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.2170%" y="213" width="0.0195%" height="15" fill="rgb(242,55,13)" fg:x="4469" fg:w="1"/><text x="87.4670%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.2365%" y="357" width="0.0195%" height="15" fill="rgb(242,112,31)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="87.2365%" y="341" width="0.0195%" height="15" fill="rgb(249,192,27)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="87.2365%" y="325" width="0.0195%" height="15" fill="rgb(208,204,44)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="335.50"></text></g><g><title>rowan::green::node::GreenNode::new::_{{closure}} (1 samples, 0.02%)</title><rect x="87.2365%" y="309" width="0.0195%" height="15" fill="rgb(208,93,54)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="319.50"></text></g><g><title>rowan::green::element::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::green::node::GreenNode,rowan::green::token::GreenToken&gt;&gt;::text_len (1 samples, 0.02%)</title><rect x="87.2365%" y="293" width="0.0195%" height="15" fill="rgb(242,1,31)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="303.50"></text></g><g><title>rowan::green::element::&lt;impl rowan::utility_types::NodeOrToken&lt;&amp;rowan::green::node::GreenNodeData,&amp;rowan::green::token::GreenTokenData&gt;&gt;::text_len (1 samples, 0.02%)</title><rect x="87.2365%" y="277" width="0.0195%" height="15" fill="rgb(241,83,25)" fg:x="4470" fg:w="1"/><text x="87.4865%" y="287.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::from_header_and_iter (2 samples, 0.04%)</title><rect x="87.2365%" y="373" width="0.0390%" height="15" fill="rgb(205,169,50)" fg:x="4470" fg:w="2"/><text x="87.4865%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="87.2560%" y="357" width="0.0195%" height="15" fill="rgb(239,186,37)" fg:x="4471" fg:w="1"/><text x="87.5060%" y="367.50"></text></g><g><title>rowan::cursor::NodeData::new (8 samples, 0.16%)</title><rect x="87.2756%" y="373" width="0.1561%" height="15" fill="rgb(205,221,10)" fg:x="4472" fg:w="8"/><text x="87.5256%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.16%)</title><rect x="87.2756%" y="357" width="0.1561%" height="15" fill="rgb(218,196,15)" fg:x="4472" fg:w="8"/><text x="87.5256%" y="367.50"></text></g><g><title>rowan::green::node::GreenNode::new (1 samples, 0.02%)</title><rect x="87.4317%" y="373" width="0.0195%" height="15" fill="rgb(218,196,35)" fg:x="4480" fg:w="1"/><text x="87.6817%" y="383.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (2 samples, 0.04%)</title><rect x="87.4512%" y="373" width="0.0390%" height="15" fill="rgb(233,63,24)" fg:x="4481" fg:w="2"/><text x="87.7012%" y="383.50"></text></g><g><title>&lt;rowan::green::node::GreenNode as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.4707%" y="357" width="0.0195%" height="15" fill="rgb(225,8,4)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="367.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.4707%" y="341" width="0.0195%" height="15" fill="rgb(234,105,35)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="351.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::with_arc (1 samples, 0.02%)</title><rect x="87.4707%" y="325" width="0.0195%" height="15" fill="rgb(236,21,32)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="335.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone::_{{closure}} (1 samples, 0.02%)</title><rect x="87.4707%" y="309" width="0.0195%" height="15" fill="rgb(228,109,6)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="319.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.4707%" y="293" width="0.0195%" height="15" fill="rgb(229,215,31)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="87.4707%" y="277" width="0.0195%" height="15" fill="rgb(221,52,54)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="87.4707%" y="261" width="0.0195%" height="15" fill="rgb(252,129,43)" fg:x="4482" fg:w="1"/><text x="87.7207%" y="271.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token (1 samples, 0.02%)</title><rect x="87.4902%" y="373" width="0.0195%" height="15" fill="rgb(248,183,27)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="383.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (1 samples, 0.02%)</title><rect x="87.4902%" y="357" width="0.0195%" height="15" fill="rgb(250,0,22)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="367.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (1 samples, 0.02%)</title><rect x="87.4902%" y="341" width="0.0195%" height="15" fill="rgb(213,166,10)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="87.4902%" y="325" width="0.0195%" height="15" fill="rgb(207,163,36)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="87.4902%" y="309" width="0.0195%" height="15" fill="rgb(208,122,22)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="87.4902%" y="293" width="0.0195%" height="15" fill="rgb(207,104,49)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="303.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::_{{closure}} (1 samples, 0.02%)</title><rect x="87.4902%" y="277" width="0.0195%" height="15" fill="rgb(248,211,50)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="287.50"></text></g><g><title>rowan::green::node_cache::NodeCache::token::_{{closure}} (1 samples, 0.02%)</title><rect x="87.4902%" y="261" width="0.0195%" height="15" fill="rgb(217,13,45)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="87.4902%" y="245" width="0.0195%" height="15" fill="rgb(211,216,49)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="87.4902%" y="229" width="0.0195%" height="15" fill="rgb(221,58,53)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="87.4902%" y="213" width="0.0195%" height="15" fill="rgb(220,112,41)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.02%)</title><rect x="87.4902%" y="197" width="0.0195%" height="15" fill="rgb(236,38,28)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="87.4902%" y="181" width="0.0195%" height="15" fill="rgb(227,195,22)" fg:x="4483" fg:w="1"/><text x="87.7402%" y="191.50"></text></g><g><title>rustls_pki_types::pem::from_buf (1 samples, 0.02%)</title><rect x="87.5098%" y="373" width="0.0195%" height="15" fill="rgb(214,55,33)" fg:x="4484" fg:w="1"/><text x="87.7598%" y="383.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (2 samples, 0.04%)</title><rect x="87.5293%" y="373" width="0.0390%" height="15" fill="rgb(248,80,13)" fg:x="4485" fg:w="2"/><text x="87.7793%" y="383.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (1 samples, 0.02%)</title><rect x="87.5683%" y="373" width="0.0195%" height="15" fill="rgb(238,52,6)" fg:x="4487" fg:w="1"/><text x="87.8183%" y="383.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="87.5683%" y="357" width="0.0195%" height="15" fill="rgb(224,198,47)" fg:x="4487" fg:w="1"/><text x="87.8183%" y="367.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.08%)</title><rect x="87.5878%" y="373" width="0.0781%" height="15" fill="rgb(233,171,20)" fg:x="4488" fg:w="4"/><text x="87.8378%" y="383.50"></text></g><g><title>smol_str::Repr::new_on_stack (1 samples, 0.02%)</title><rect x="87.6659%" y="373" width="0.0195%" height="15" fill="rgb(241,30,25)" fg:x="4492" fg:w="1"/><text x="87.9159%" y="383.50"></text></g><g><title>snix_castore::import::fs::ingest_path::_{{closure}}::__CALLSITE::META (1 samples, 0.02%)</title><rect x="87.6854%" y="373" width="0.0195%" height="15" fill="rgb(207,171,38)" fg:x="4493" fg:w="1"/><text x="87.9354%" y="383.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="87.6854%" y="357" width="0.0195%" height="15" fill="rgb(234,70,1)" fg:x="4493" fg:w="1"/><text x="87.9354%" y="367.50"></text></g><g><title>snix_store::import::import_path_as_nar_ca::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="87.6854%" y="341" width="0.0195%" height="15" fill="rgb(232,178,18)" fg:x="4493" fg:w="1"/><text x="87.9354%" y="351.50"></text></g><g><title>snix_store::import::import_path_as_nar_ca::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="87.6854%" y="325" width="0.0195%" height="15" fill="rgb(241,78,40)" fg:x="4493" fg:w="1"/><text x="87.9354%" y="335.50"></text></g><g><title>snix_castore::import::fs::upload_blob::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7049%" y="373" width="0.0195%" height="15" fill="rgb(222,35,25)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="383.50"></text></g><g><title>snix_castore::import::fs::upload_blob::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7049%" y="357" width="0.0195%" height="15" fill="rgb(207,92,16)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="367.50"></text></g><g><title>tokio::io::util::buf_reader::BufReader&lt;R&gt;::new (1 samples, 0.02%)</title><rect x="87.7049%" y="341" width="0.0195%" height="15" fill="rgb(216,59,51)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="351.50"></text></g><g><title>tokio::io::util::buf_reader::BufReader&lt;R&gt;::with_capacity (1 samples, 0.02%)</title><rect x="87.7049%" y="325" width="0.0195%" height="15" fill="rgb(213,80,28)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="335.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.02%)</title><rect x="87.7049%" y="309" width="0.0195%" height="15" fill="rgb(220,93,7)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="319.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.02%)</title><rect x="87.7049%" y="293" width="0.0195%" height="15" fill="rgb(225,24,44)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.02%)</title><rect x="87.7049%" y="277" width="0.0195%" height="15" fill="rgb(243,74,40)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1 samples, 0.02%)</title><rect x="87.7049%" y="261" width="0.0195%" height="15" fill="rgb(228,39,7)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="87.7049%" y="245" width="0.0195%" height="15" fill="rgb(227,79,8)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.02%)</title><rect x="87.7049%" y="229" width="0.0195%" height="15" fill="rgb(236,58,11)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="87.7049%" y="213" width="0.0195%" height="15" fill="rgb(249,63,35)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="223.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.02%)</title><rect x="87.7049%" y="197" width="0.0195%" height="15" fill="rgb(252,114,16)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="207.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="87.7049%" y="181" width="0.0195%" height="15" fill="rgb(254,151,24)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="191.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="87.7049%" y="165" width="0.0195%" height="15" fill="rgb(253,54,39)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="175.50"></text></g><g><title>__memset_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="87.7049%" y="149" width="0.0195%" height="15" fill="rgb(243,25,45)" fg:x="4494" fg:w="1"/><text x="87.9549%" y="159.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_any::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7244%" y="373" width="0.0195%" height="15" fill="rgb(234,134,9)" fg:x="4495" fg:w="1"/><text x="87.9744%" y="383.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_attr_names::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7440%" y="373" width="0.0195%" height="15" fill="rgb(227,166,31)" fg:x="4496" fg:w="1"/><text x="87.9940%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="87.7440%" y="357" width="0.0195%" height="15" fill="rgb(245,143,41)" fg:x="4496" fg:w="1"/><text x="87.9940%" y="367.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_elem_at::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7635%" y="373" width="0.0195%" height="15" fill="rgb(238,181,32)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="87.7635%" y="357" width="0.0195%" height="15" fill="rgb(224,113,18)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;snix_eval::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="87.7635%" y="341" width="0.0195%" height="15" fill="rgb(240,229,28)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.7635%" y="325" width="0.0195%" height="15" fill="rgb(250,185,3)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.02%)</title><rect x="87.7635%" y="309" width="0.0195%" height="15" fill="rgb(212,59,25)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="87.7635%" y="293" width="0.0195%" height="15" fill="rgb(221,87,20)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="87.7635%" y="277" width="0.0195%" height="15" fill="rgb(213,74,28)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="287.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (1 samples, 0.02%)</title><rect x="87.7635%" y="261" width="0.0195%" height="15" fill="rgb(224,132,34)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="87.7635%" y="245" width="0.0195%" height="15" fill="rgb(222,101,24)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="87.7635%" y="229" width="0.0195%" height="15" fill="rgb(254,142,4)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="87.7635%" y="213" width="0.0195%" height="15" fill="rgb(230,229,49)" fg:x="4497" fg:w="1"/><text x="88.0135%" y="223.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_filter::_{{closure}} (1 samples, 0.02%)</title><rect x="87.7830%" y="373" width="0.0195%" height="15" fill="rgb(238,70,47)" fg:x="4498" fg:w="1"/><text x="88.0330%" y="383.50"></text></g><g><title>snix_eval::vm::generators::request_call_with (1 samples, 0.02%)</title><rect x="87.7830%" y="357" width="0.0195%" height="15" fill="rgb(231,160,17)" fg:x="4498" fg:w="1"/><text x="88.0330%" y="367.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_gen_list::_{{closure}} (1 samples, 0.02%)</title><rect x="87.8025%" y="373" width="0.0195%" height="15" fill="rgb(218,68,53)" fg:x="4499" fg:w="1"/><text x="88.0525%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="87.8025%" y="357" width="0.0195%" height="15" fill="rgb(236,111,10)" fg:x="4499" fg:w="1"/><text x="88.0525%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="87.8025%" y="341" width="0.0195%" height="15" fill="rgb(224,34,41)" fg:x="4499" fg:w="1"/><text x="88.0525%" y="351.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtin_map_attrs::_{{closure}} (1 samples, 0.02%)</title><rect x="87.8220%" y="373" width="0.0195%" height="15" fill="rgb(241,118,19)" fg:x="4500" fg:w="1"/><text x="88.0720%" y="383.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtins::_{{closure}} (1 samples, 0.02%)</title><rect x="87.8415%" y="373" width="0.0195%" height="15" fill="rgb(238,129,25)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="383.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (1 samples, 0.02%)</title><rect x="87.8415%" y="357" width="0.0195%" height="15" fill="rgb(238,22,31)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="367.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.8415%" y="341" width="0.0195%" height="15" fill="rgb(222,174,48)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.8415%" y="325" width="0.0195%" height="15" fill="rgb(206,152,40)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="335.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="87.8415%" y="309" width="0.0195%" height="15" fill="rgb(218,99,54)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="319.50"></text></g><g><title>core::intrinsics::unlikely (1 samples, 0.02%)</title><rect x="87.8415%" y="293" width="0.0195%" height="15" fill="rgb(220,174,26)" fg:x="4501" fg:w="1"/><text x="88.0915%" y="303.50"></text></g><g><title>snix_eval::chunk::Chunk::push_uvarint (1 samples, 0.02%)</title><rect x="87.8610%" y="373" width="0.0195%" height="15" fill="rgb(245,116,9)" fg:x="4502" fg:w="1"/><text x="88.1110%" y="383.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.02%)</title><rect x="87.9391%" y="357" width="0.0195%" height="15" fill="rgb(209,72,35)" fg:x="4506" fg:w="1"/><text x="88.1891%" y="367.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.02%)</title><rect x="87.9391%" y="341" width="0.0195%" height="15" fill="rgb(226,126,21)" fg:x="4506" fg:w="1"/><text x="88.1891%" y="351.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1 samples, 0.02%)</title><rect x="87.9391%" y="325" width="0.0195%" height="15" fill="rgb(227,192,1)" fg:x="4506" fg:w="1"/><text x="88.1891%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="87.9586%" y="357" width="0.0195%" height="15" fill="rgb(237,180,29)" fg:x="4507" fg:w="1"/><text x="88.2086%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="87.9781%" y="325" width="0.0195%" height="15" fill="rgb(230,197,35)" fg:x="4508" fg:w="1"/><text x="88.2281%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.04%)</title><rect x="87.9781%" y="357" width="0.0390%" height="15" fill="rgb(246,193,31)" fg:x="4508" fg:w="2"/><text x="88.2281%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="87.9781%" y="341" width="0.0390%" height="15" fill="rgb(241,36,4)" fg:x="4508" fg:w="2"/><text x="88.2281%" y="351.50"></text></g><g><title>snix_eval::value::Value::to_str (1 samples, 0.02%)</title><rect x="87.9977%" y="325" width="0.0195%" height="15" fill="rgb(241,130,17)" fg:x="4509" fg:w="1"/><text x="88.2477%" y="335.50"></text></g><g><title>snix_eval::chunk::Chunk::read_uvarint (8 samples, 0.16%)</title><rect x="87.8806%" y="373" width="0.1561%" height="15" fill="rgb(206,137,32)" fg:x="4503" fg:w="8"/><text x="88.1306%" y="383.50"></text></g><g><title>vu128::decode_u64 (1 samples, 0.02%)</title><rect x="88.0172%" y="357" width="0.0195%" height="15" fill="rgb(237,228,51)" fg:x="4510" fg:w="1"/><text x="88.2672%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="88.0367%" y="229" width="0.0195%" height="15" fill="rgb(243,6,42)" fg:x="4511" fg:w="1"/><text x="88.2867%" y="239.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="88.0367%" y="213" width="0.0195%" height="15" fill="rgb(251,74,28)" fg:x="4511" fg:w="1"/><text x="88.2867%" y="223.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (2 samples, 0.04%)</title><rect x="88.0367%" y="277" width="0.0390%" height="15" fill="rgb(218,20,49)" fg:x="4511" fg:w="2"/><text x="88.2867%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (2 samples, 0.04%)</title><rect x="88.0367%" y="261" width="0.0390%" height="15" fill="rgb(238,28,14)" fg:x="4511" fg:w="2"/><text x="88.2867%" y="271.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (2 samples, 0.04%)</title><rect x="88.0367%" y="245" width="0.0390%" height="15" fill="rgb(229,40,46)" fg:x="4511" fg:w="2"/><text x="88.2867%" y="255.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (1 samples, 0.02%)</title><rect x="88.0562%" y="229" width="0.0195%" height="15" fill="rgb(244,195,20)" fg:x="4512" fg:w="1"/><text x="88.3062%" y="239.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (1 samples, 0.02%)</title><rect x="88.0562%" y="213" width="0.0195%" height="15" fill="rgb(253,56,35)" fg:x="4512" fg:w="1"/><text x="88.3062%" y="223.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_attr_set (1 samples, 0.02%)</title><rect x="88.0562%" y="197" width="0.0195%" height="15" fill="rgb(210,149,44)" fg:x="4512" fg:w="1"/><text x="88.3062%" y="207.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_bindings (1 samples, 0.02%)</title><rect x="88.0562%" y="181" width="0.0195%" height="15" fill="rgb(240,135,12)" fg:x="4512" fg:w="1"/><text x="88.3062%" y="191.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::declare_bindings (1 samples, 0.02%)</title><rect x="88.0562%" y="165" width="0.0195%" height="15" fill="rgb(251,24,50)" fg:x="4512" fg:w="1"/><text x="88.3062%" y="175.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_apply (3 samples, 0.06%)</title><rect x="88.0367%" y="293" width="0.0585%" height="15" fill="rgb(243,200,47)" fg:x="4511" fg:w="3"/><text x="88.2867%" y="303.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_bindings (1 samples, 0.02%)</title><rect x="88.0757%" y="277" width="0.0195%" height="15" fill="rgb(224,166,26)" fg:x="4513" fg:w="1"/><text x="88.3257%" y="287.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_plain_inherits (1 samples, 0.02%)</title><rect x="88.0757%" y="261" width="0.0195%" height="15" fill="rgb(233,0,47)" fg:x="4513" fg:w="1"/><text x="88.3257%" y="271.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="88.0757%" y="245" width="0.0195%" height="15" fill="rgb(253,80,5)" fg:x="4513" fg:w="1"/><text x="88.3257%" y="255.50"></text></g><g><title>rowan::cursor::free (1 samples, 0.02%)</title><rect x="88.0757%" y="229" width="0.0195%" height="15" fill="rgb(214,133,25)" fg:x="4513" fg:w="1"/><text x="88.3257%" y="239.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (4 samples, 0.08%)</title><rect x="88.0367%" y="373" width="0.0781%" height="15" fill="rgb(209,27,14)" fg:x="4511" fg:w="4"/><text x="88.2867%" y="383.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (4 samples, 0.08%)</title><rect x="88.0367%" y="357" width="0.0781%" height="15" fill="rgb(219,102,51)" fg:x="4511" fg:w="4"/><text x="88.2867%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (4 samples, 0.08%)</title><rect x="88.0367%" y="341" width="0.0781%" height="15" fill="rgb(237,18,16)" fg:x="4511" fg:w="4"/><text x="88.2867%" y="351.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (4 samples, 0.08%)</title><rect x="88.0367%" y="325" width="0.0781%" height="15" fill="rgb(241,85,17)" fg:x="4511" fg:w="4"/><text x="88.2867%" y="335.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (4 samples, 0.08%)</title><rect x="88.0367%" y="309" width="0.0781%" height="15" fill="rgb(236,90,42)" fg:x="4511" fg:w="4"/><text x="88.2867%" y="319.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_binop (1 samples, 0.02%)</title><rect x="88.0952%" y="293" width="0.0195%" height="15" fill="rgb(249,57,21)" fg:x="4514" fg:w="1"/><text x="88.3452%" y="303.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_implication (1 samples, 0.02%)</title><rect x="88.0952%" y="277" width="0.0195%" height="15" fill="rgb(243,12,36)" fg:x="4514" fg:w="1"/><text x="88.3452%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_apply (1 samples, 0.02%)</title><rect x="88.1343%" y="197" width="0.0195%" height="15" fill="rgb(253,128,47)" fg:x="4516" fg:w="1"/><text x="88.3843%" y="207.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="88.1343%" y="181" width="0.0195%" height="15" fill="rgb(207,33,20)" fg:x="4516" fg:w="1"/><text x="88.3843%" y="191.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (1 samples, 0.02%)</title><rect x="88.1343%" y="165" width="0.0195%" height="15" fill="rgb(233,215,35)" fg:x="4516" fg:w="1"/><text x="88.3843%" y="175.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (1 samples, 0.02%)</title><rect x="88.1343%" y="149" width="0.0195%" height="15" fill="rgb(249,188,52)" fg:x="4516" fg:w="1"/><text x="88.3843%" y="159.50"></text></g><g><title>snix_eval::compiler::Compiler::emit_upvalue_data (1 samples, 0.02%)</title><rect x="88.1343%" y="133" width="0.0195%" height="15" fill="rgb(225,12,32)" fg:x="4516" fg:w="1"/><text x="88.3843%" y="143.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (3 samples, 0.06%)</title><rect x="88.1148%" y="373" width="0.0585%" height="15" fill="rgb(247,98,14)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="383.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (3 samples, 0.06%)</title><rect x="88.1148%" y="357" width="0.0585%" height="15" fill="rgb(247,219,48)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (3 samples, 0.06%)</title><rect x="88.1148%" y="341" width="0.0585%" height="15" fill="rgb(253,60,48)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="351.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (3 samples, 0.06%)</title><rect x="88.1148%" y="325" width="0.0585%" height="15" fill="rgb(245,15,52)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="335.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}}::_{{closure}} (3 samples, 0.06%)</title><rect x="88.1148%" y="309" width="0.0585%" height="15" fill="rgb(220,133,28)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="319.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda (3 samples, 0.06%)</title><rect x="88.1148%" y="293" width="0.0585%" height="15" fill="rgb(217,180,4)" fg:x="4515" fg:w="3"/><text x="88.3648%" y="303.50"></text></g><g><title>snix_eval::compiler::Compiler::compile (2 samples, 0.04%)</title><rect x="88.1343%" y="277" width="0.0390%" height="15" fill="rgb(251,24,1)" fg:x="4516" fg:w="2"/><text x="88.3843%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (2 samples, 0.04%)</title><rect x="88.1343%" y="261" width="0.0390%" height="15" fill="rgb(212,185,49)" fg:x="4516" fg:w="2"/><text x="88.3843%" y="271.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (2 samples, 0.04%)</title><rect x="88.1343%" y="245" width="0.0390%" height="15" fill="rgb(215,175,22)" fg:x="4516" fg:w="2"/><text x="88.3843%" y="255.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk::_{{closure}} (2 samples, 0.04%)</title><rect x="88.1343%" y="229" width="0.0390%" height="15" fill="rgb(250,205,14)" fg:x="4516" fg:w="2"/><text x="88.3843%" y="239.50"></text></g><g><title>snix_eval::compiler::Compiler::compile::_{{closure}} (2 samples, 0.04%)</title><rect x="88.1343%" y="213" width="0.0390%" height="15" fill="rgb(225,211,22)" fg:x="4516" fg:w="2"/><text x="88.3843%" y="223.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_attr_set (1 samples, 0.02%)</title><rect x="88.1538%" y="197" width="0.0195%" height="15" fill="rgb(251,179,42)" fg:x="4517" fg:w="1"/><text x="88.4038%" y="207.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_bindings (1 samples, 0.02%)</title><rect x="88.1538%" y="181" width="0.0195%" height="15" fill="rgb(208,216,51)" fg:x="4517" fg:w="1"/><text x="88.4038%" y="191.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::bind_values (1 samples, 0.02%)</title><rect x="88.1538%" y="165" width="0.0195%" height="15" fill="rgb(235,36,11)" fg:x="4517" fg:w="1"/><text x="88.4038%" y="175.50"></text></g><g><title>snix_eval::compiler::Compiler::optimise_select (1 samples, 0.02%)</title><rect x="88.1733%" y="373" width="0.0195%" height="15" fill="rgb(213,189,28)" fg:x="4518" fg:w="1"/><text x="88.4233%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;smol_str::SmolStr&gt; (1 samples, 0.02%)</title><rect x="88.1733%" y="357" width="0.0195%" height="15" fill="rgb(227,203,42)" fg:x="4518" fg:w="1"/><text x="88.4233%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;smol_str::Repr&gt; (1 samples, 0.02%)</title><rect x="88.1733%" y="341" width="0.0195%" height="15" fill="rgb(244,72,36)" fg:x="4518" fg:w="1"/><text x="88.4233%" y="351.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.02%)</title><rect x="88.1928%" y="277" width="0.0195%" height="15" fill="rgb(213,53,17)" fg:x="4519" fg:w="1"/><text x="88.4428%" y="287.50"></text></g><g><title>mi_heap_malloc_aligned_at (2 samples, 0.04%)</title><rect x="88.2123%" y="277" width="0.0390%" height="15" fill="rgb(207,167,3)" fg:x="4520" fg:w="2"/><text x="88.4623%" y="287.50"></text></g><g><title>snix_eval::compiler::Compiler::push_op (4 samples, 0.08%)</title><rect x="88.1928%" y="341" width="0.0781%" height="15" fill="rgb(216,98,30)" fg:x="4519" fg:w="4"/><text x="88.4428%" y="351.50"></text></g><g><title>snix_eval::chunk::Chunk::push_op (4 samples, 0.08%)</title><rect x="88.1928%" y="325" width="0.0781%" height="15" fill="rgb(236,123,15)" fg:x="4519" fg:w="4"/><text x="88.4428%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="88.1928%" y="309" width="0.0781%" height="15" fill="rgb(248,81,50)" fg:x="4519" fg:w="4"/><text x="88.4428%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.08%)</title><rect x="88.1928%" y="293" width="0.0781%" height="15" fill="rgb(214,120,4)" fg:x="4519" fg:w="4"/><text x="88.4428%" y="303.50"></text></g><g><title>mi_malloc_aligned (1 samples, 0.02%)</title><rect x="88.2514%" y="277" width="0.0195%" height="15" fill="rgb(208,179,34)" fg:x="4522" fg:w="1"/><text x="88.5014%" y="287.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="88.2709%" y="309" width="0.0195%" height="15" fill="rgb(227,140,7)" fg:x="4523" fg:w="1"/><text x="88.5209%" y="319.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_ident (7 samples, 0.14%)</title><rect x="88.1928%" y="373" width="0.1366%" height="15" fill="rgb(214,22,6)" fg:x="4519" fg:w="7"/><text x="88.4428%" y="383.50"></text></g><g><title>snix_eval::compiler::bindings::&lt;impl snix_eval::compiler::Compiler&gt;::compile_identifier_access (7 samples, 0.14%)</title><rect x="88.1928%" y="357" width="0.1366%" height="15" fill="rgb(207,137,27)" fg:x="4519" fg:w="7"/><text x="88.4428%" y="367.50"></text></g><g><title>snix_eval::compiler::Compiler::thunk (3 samples, 0.06%)</title><rect x="88.2709%" y="341" width="0.0585%" height="15" fill="rgb(210,8,46)" fg:x="4523" fg:w="3"/><text x="88.5209%" y="351.50"></text></g><g><title>snix_eval::compiler::Compiler::compile_lambda_or_thunk (3 samples, 0.06%)</title><rect x="88.2709%" y="325" width="0.0585%" height="15" fill="rgb(240,16,54)" fg:x="4523" fg:w="3"/><text x="88.5209%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.04%)</title><rect x="88.2904%" y="309" width="0.0390%" height="15" fill="rgb(211,209,29)" fg:x="4524" fg:w="2"/><text x="88.5404%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="88.2904%" y="293" width="0.0390%" height="15" fill="rgb(226,228,24)" fg:x="4524" fg:w="2"/><text x="88.5404%" y="303.50"></text></g><g><title>snix_eval::compiler::scope::Scope::declare_local (1 samples, 0.02%)</title><rect x="88.3294%" y="373" width="0.0195%" height="15" fill="rgb(222,84,9)" fg:x="4526" fg:w="1"/><text x="88.5794%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="88.3294%" y="357" width="0.0195%" height="15" fill="rgb(234,203,30)" fg:x="4526" fg:w="1"/><text x="88.5794%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="88.3294%" y="341" width="0.0195%" height="15" fill="rgb(238,109,14)" fg:x="4526" fg:w="1"/><text x="88.5794%" y="351.50"></text></g><g><title>snix_eval::compiler::scope::Scope::resolve_local (1 samples, 0.02%)</title><rect x="88.3489%" y="373" width="0.0195%" height="15" fill="rgb(233,206,34)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="88.3489%" y="357" width="0.0195%" height="15" fill="rgb(220,167,47)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="88.3489%" y="341" width="0.0195%" height="15" fill="rgb(238,105,10)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="88.3489%" y="325" width="0.0195%" height="15" fill="rgb(213,227,17)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="88.3489%" y="309" width="0.0195%" height="15" fill="rgb(217,132,38)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="88.3489%" y="293" width="0.0195%" height="15" fill="rgb(242,146,4)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="88.3489%" y="277" width="0.0195%" height="15" fill="rgb(212,61,9)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="88.3489%" y="261" width="0.0195%" height="15" fill="rgb(247,126,22)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="271.50"></text></g><g><title>core::hash::Hasher::write_str (1 samples, 0.02%)</title><rect x="88.3489%" y="245" width="0.0195%" height="15" fill="rgb(220,196,2)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="255.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="88.3489%" y="229" width="0.0195%" height="15" fill="rgb(208,46,4)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="239.50"></text></g><g><title>rustc_hash::hash_bytes (1 samples, 0.02%)</title><rect x="88.3489%" y="213" width="0.0195%" height="15" fill="rgb(252,104,46)" fg:x="4527" fg:w="1"/><text x="88.5989%" y="223.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_execute_op (2 samples, 0.04%)</title><rect x="88.3685%" y="373" width="0.0390%" height="15" fill="rgb(237,152,48)" fg:x="4528" fg:w="2"/><text x="88.6185%" y="383.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_exit_call_frame (1 samples, 0.02%)</title><rect x="88.4075%" y="373" width="0.0195%" height="15" fill="rgb(221,59,37)" fg:x="4530" fg:w="1"/><text x="88.6575%" y="383.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_exit_generator (2 samples, 0.04%)</title><rect x="88.4270%" y="373" width="0.0390%" height="15" fill="rgb(209,202,51)" fg:x="4531" fg:w="2"/><text x="88.6770%" y="383.50"></text></g><g><title>snix_eval::observer::RuntimeObserver::observe_generator_request (1 samples, 0.02%)</title><rect x="88.4660%" y="373" width="0.0195%" height="15" fill="rgb(228,81,30)" fg:x="4533" fg:w="1"/><text x="88.7160%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="88.5051%" y="341" width="0.0195%" height="15" fill="rgb(227,42,39)" fg:x="4535" fg:w="1"/><text x="88.7551%" y="351.50"></text></g><g><title>snix_eval::upvalues::Upvalues::push (6 samples, 0.12%)</title><rect x="88.4856%" y="373" width="0.1171%" height="15" fill="rgb(221,26,2)" fg:x="4534" fg:w="6"/><text x="88.7356%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.12%)</title><rect x="88.4856%" y="357" width="0.1171%" height="15" fill="rgb(254,61,31)" fg:x="4534" fg:w="6"/><text x="88.7356%" y="367.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="88.5246%" y="341" width="0.0781%" height="15" fill="rgb(222,173,38)" fg:x="4536" fg:w="4"/><text x="88.7746%" y="351.50"></text></g><g><title>snix_eval::upvalues::Upvalues::with_capacity (1 samples, 0.02%)</title><rect x="88.6027%" y="373" width="0.0195%" height="15" fill="rgb(218,50,12)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="88.6027%" y="357" width="0.0195%" height="15" fill="rgb(223,88,40)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="88.6027%" y="341" width="0.0195%" height="15" fill="rgb(237,54,19)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="88.6027%" y="325" width="0.0195%" height="15" fill="rgb(251,129,25)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="88.6027%" y="309" width="0.0195%" height="15" fill="rgb(238,97,19)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="88.6027%" y="293" width="0.0195%" height="15" fill="rgb(240,169,18)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="88.6027%" y="277" width="0.0195%" height="15" fill="rgb(230,187,49)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="88.6027%" y="261" width="0.0195%" height="15" fill="rgb(209,44,26)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="88.6027%" y="245" width="0.0195%" height="15" fill="rgb(244,0,6)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="255.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="88.6027%" y="229" width="0.0195%" height="15" fill="rgb(248,18,21)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="239.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.02%)</title><rect x="88.6027%" y="213" width="0.0195%" height="15" fill="rgb(245,180,19)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="223.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.02%)</title><rect x="88.6027%" y="197" width="0.0195%" height="15" fill="rgb(252,118,36)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="207.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.02%)</title><rect x="88.6027%" y="181" width="0.0195%" height="15" fill="rgb(210,224,19)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="191.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.02%)</title><rect x="88.6027%" y="165" width="0.0195%" height="15" fill="rgb(218,30,24)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="175.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.02%)</title><rect x="88.6027%" y="149" width="0.0195%" height="15" fill="rgb(219,75,50)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="159.50"></text></g><g><title>mi_segment_span_allocate.isra.0 (1 samples, 0.02%)</title><rect x="88.6027%" y="133" width="0.0195%" height="15" fill="rgb(234,72,50)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="143.50"></text></g><g><title>mi_segment_commit_mask.part.0 (1 samples, 0.02%)</title><rect x="88.6027%" y="117" width="0.0195%" height="15" fill="rgb(219,100,48)" fg:x="4540" fg:w="1"/><text x="88.8527%" y="127.50"></text></g><g><title>snix_eval::value::Value::is_catchable (1 samples, 0.02%)</title><rect x="88.6222%" y="373" width="0.0195%" height="15" fill="rgb(253,5,41)" fg:x="4541" fg:w="1"/><text x="88.8722%" y="383.50"></text></g><g><title>snix_eval::value::Value::nix_eq::_{{closure}} (5 samples, 0.10%)</title><rect x="88.6417%" y="373" width="0.0976%" height="15" fill="rgb(247,181,11)" fg:x="4542" fg:w="5"/><text x="88.8917%" y="383.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::len (1 samples, 0.02%)</title><rect x="88.7198%" y="357" width="0.0195%" height="15" fill="rgb(222,223,25)" fg:x="4546" fg:w="1"/><text x="88.9698%" y="367.50"></text></g><g><title>snix_eval::value::Value::nix_eq_owned_genco::_{{closure}} (1 samples, 0.02%)</title><rect x="88.7393%" y="373" width="0.0195%" height="15" fill="rgb(214,198,28)" fg:x="4547" fg:w="1"/><text x="88.9893%" y="383.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="88.7783%" y="261" width="0.0195%" height="15" fill="rgb(230,46,43)" fg:x="4549" fg:w="1"/><text x="89.0283%" y="271.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="88.7783%" y="245" width="0.0195%" height="15" fill="rgb(233,65,53)" fg:x="4549" fg:w="1"/><text x="89.0283%" y="255.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1 samples, 0.02%)</title><rect x="88.7978%" y="261" width="0.0195%" height="15" fill="rgb(221,121,27)" fg:x="4550" fg:w="1"/><text x="89.0478%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="88.7978%" y="245" width="0.0195%" height="15" fill="rgb(247,70,47)" fg:x="4550" fg:w="1"/><text x="89.0478%" y="255.50"></text></g><g><title>snix_eval::value::attrs::AttrsRep::select (4 samples, 0.08%)</title><rect x="88.7588%" y="373" width="0.0781%" height="15" fill="rgb(228,85,35)" fg:x="4548" fg:w="4"/><text x="89.0088%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.06%)</title><rect x="88.7783%" y="357" width="0.0585%" height="15" fill="rgb(209,50,18)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.06%)</title><rect x="88.7783%" y="341" width="0.0585%" height="15" fill="rgb(250,19,35)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.06%)</title><rect x="88.7783%" y="325" width="0.0585%" height="15" fill="rgb(253,107,29)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.06%)</title><rect x="88.7783%" y="309" width="0.0585%" height="15" fill="rgb(252,179,29)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.06%)</title><rect x="88.7783%" y="293" width="0.0585%" height="15" fill="rgb(238,194,6)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.06%)</title><rect x="88.7783%" y="277" width="0.0585%" height="15" fill="rgb(238,164,29)" fg:x="4549" fg:w="3"/><text x="89.0283%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="88.8173%" y="261" width="0.0195%" height="15" fill="rgb(224,25,9)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="271.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.02%)</title><rect x="88.8173%" y="245" width="0.0195%" height="15" fill="rgb(244,153,23)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="255.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.02%)</title><rect x="88.8173%" y="229" width="0.0195%" height="15" fill="rgb(212,203,14)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="239.50"></text></g><g><title>&lt;snix_eval::value::string::NixString as core::borrow::Borrow&lt;bstr::bstr::BStr&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="88.8173%" y="213" width="0.0195%" height="15" fill="rgb(220,164,20)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="223.50"></text></g><g><title>snix_eval::value::string::NixString::as_bstr (1 samples, 0.02%)</title><rect x="88.8173%" y="197" width="0.0195%" height="15" fill="rgb(222,203,48)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="207.50"></text></g><g><title>snix_eval::value::string::NixString::as_bytes (1 samples, 0.02%)</title><rect x="88.8173%" y="181" width="0.0195%" height="15" fill="rgb(215,159,22)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="191.50"></text></g><g><title>snix_eval::value::string::NixStringInner::data_slice (1 samples, 0.02%)</title><rect x="88.8173%" y="165" width="0.0195%" height="15" fill="rgb(216,183,47)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="175.50"></text></g><g><title>snix_eval::value::string::NixStringInner::len (1 samples, 0.02%)</title><rect x="88.8173%" y="149" width="0.0195%" height="15" fill="rgb(229,195,25)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="159.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout_of (1 samples, 0.02%)</title><rect x="88.8173%" y="133" width="0.0195%" height="15" fill="rgb(224,132,51)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="143.50"></text></g><g><title>snix_eval::value::string::NixStringInner::layout (1 samples, 0.02%)</title><rect x="88.8173%" y="117" width="0.0195%" height="15" fill="rgb(240,63,7)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="88.8173%" y="101" width="0.0195%" height="15" fill="rgb(249,182,41)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="88.8173%" y="85" width="0.0195%" height="15" fill="rgb(243,47,26)" fg:x="4551" fg:w="1"/><text x="89.0673%" y="95.50"></text></g><g><title>snix_eval::value::attrs::NixAttrs::update (2 samples, 0.04%)</title><rect x="88.8368%" y="373" width="0.0390%" height="15" fill="rgb(233,48,2)" fg:x="4552" fg:w="2"/><text x="89.0868%" y="383.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.02%)</title><rect x="88.8564%" y="357" width="0.0195%" height="15" fill="rgb(244,165,34)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="367.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.02%)</title><rect x="88.8564%" y="341" width="0.0195%" height="15" fill="rgb(207,89,7)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="88.8564%" y="325" width="0.0195%" height="15" fill="rgb(244,117,36)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.02%)</title><rect x="88.8564%" y="309" width="0.0195%" height="15" fill="rgb(226,144,34)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.02%)</title><rect x="88.8564%" y="293" width="0.0195%" height="15" fill="rgb(213,23,19)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.02%)</title><rect x="88.8564%" y="277" width="0.0195%" height="15" fill="rgb(217,75,12)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.02%)</title><rect x="88.8564%" y="261" width="0.0195%" height="15" fill="rgb(224,159,17)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.02%)</title><rect x="88.8564%" y="245" width="0.0195%" height="15" fill="rgb(217,118,1)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="255.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (1 samples, 0.02%)</title><rect x="88.8564%" y="229" width="0.0195%" height="15" fill="rgb(232,180,48)" fg:x="4553" fg:w="1"/><text x="89.1064%" y="239.50"></text></g><g><title>snix_eval::value::function::Closure::upvalues (1 samples, 0.02%)</title><rect x="88.8759%" y="373" width="0.0195%" height="15" fill="rgb(230,27,33)" fg:x="4554" fg:w="1"/><text x="89.1259%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="88.8759%" y="357" width="0.0195%" height="15" fill="rgb(205,31,21)" fg:x="4554" fg:w="1"/><text x="89.1259%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="88.8759%" y="341" width="0.0195%" height="15" fill="rgb(253,59,4)" fg:x="4554" fg:w="1"/><text x="89.1259%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="88.8759%" y="325" width="0.0195%" height="15" fill="rgb(224,201,9)" fg:x="4554" fg:w="1"/><text x="89.1259%" y="335.50"></text></g><g><title>snix_eval::value::string::NixString::new (2 samples, 0.04%)</title><rect x="88.8954%" y="373" width="0.0390%" height="15" fill="rgb(229,206,30)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="88.8954%" y="357" width="0.0390%" height="15" fill="rgb(212,67,47)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="88.8954%" y="341" width="0.0390%" height="15" fill="rgb(211,96,50)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="351.50"></text></g><g><title>snix_eval::value::string::NixString::new::_{{closure}} (2 samples, 0.04%)</title><rect x="88.8954%" y="325" width="0.0390%" height="15" fill="rgb(252,114,18)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="335.50"></text></g><g><title>snix_eval::value::string::Interner::intern (2 samples, 0.04%)</title><rect x="88.8954%" y="309" width="0.0390%" height="15" fill="rgb(223,58,37)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="319.50"></text></g><g><title>snix_eval::value::string::InternerInner::intern (2 samples, 0.04%)</title><rect x="88.8954%" y="293" width="0.0390%" height="15" fill="rgb(237,70,4)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="303.50"></text></g><g><title>snix_eval::value::string::hash (2 samples, 0.04%)</title><rect x="88.8954%" y="277" width="0.0390%" height="15" fill="rgb(244,85,46)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.04%)</title><rect x="88.8954%" y="261" width="0.0390%" height="15" fill="rgb(223,39,52)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.04%)</title><rect x="88.8954%" y="245" width="0.0390%" height="15" fill="rgb(218,200,14)" fg:x="4555" fg:w="2"/><text x="89.1454%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.02%)</title><rect x="88.9149%" y="229" width="0.0195%" height="15" fill="rgb(208,171,16)" fg:x="4556" fg:w="1"/><text x="89.1649%" y="239.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="88.9149%" y="213" width="0.0195%" height="15" fill="rgb(234,200,18)" fg:x="4556" fg:w="1"/><text x="89.1649%" y="223.50"></text></g><g><title>rustc_hash::hash_bytes (1 samples, 0.02%)</title><rect x="88.9149%" y="197" width="0.0195%" height="15" fill="rgb(228,45,11)" fg:x="4556" fg:w="1"/><text x="89.1649%" y="207.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force::_{{closure}} (1 samples, 0.02%)</title><rect x="88.9344%" y="373" width="0.0195%" height="15" fill="rgb(237,182,11)" fg:x="4557" fg:w="1"/><text x="89.1844%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="89.2857%" y="357" width="0.0195%" height="15" fill="rgb(241,175,49)" fg:x="4575" fg:w="1"/><text x="89.5357%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="89.2857%" y="341" width="0.0195%" height="15" fill="rgb(247,38,35)" fg:x="4575" fg:w="1"/><text x="89.5357%" y="351.50"></text></g><g><title>&lt;snix_eval::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="89.3052%" y="357" width="0.0195%" height="15" fill="rgb(228,39,49)" fg:x="4576" fg:w="1"/><text x="89.5552%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="89.3247%" y="325" width="0.0195%" height="15" fill="rgb(226,101,26)" fg:x="4577" fg:w="1"/><text x="89.5747%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::replace (10 samples, 0.20%)</title><rect x="89.3247%" y="357" width="0.1952%" height="15" fill="rgb(206,141,19)" fg:x="4577" fg:w="10"/><text x="89.5747%" y="367.50"></text></g><g><title>core::mem::replace (10 samples, 0.20%)</title><rect x="89.3247%" y="341" width="0.1952%" height="15" fill="rgb(211,200,13)" fg:x="4577" fg:w="10"/><text x="89.5747%" y="351.50"></text></g><g><title>core::ptr::write (9 samples, 0.18%)</title><rect x="89.3443%" y="325" width="0.1756%" height="15" fill="rgb(241,121,6)" fg:x="4578" fg:w="9"/><text x="89.5943%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.5004%" y="309" width="0.0195%" height="15" fill="rgb(234,221,29)" fg:x="4586" fg:w="1"/><text x="89.7504%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;snix_eval::value::thunk::ThunkRepr&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="89.5199%" y="357" width="0.0195%" height="15" fill="rgb(229,136,5)" fg:x="4587" fg:w="1"/><text x="89.7699%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.5199%" y="341" width="0.0195%" height="15" fill="rgb(238,36,11)" fg:x="4587" fg:w="1"/><text x="89.7699%" y="351.50"></text></g><g><title>_mi_page_unfull (1 samples, 0.02%)</title><rect x="89.5199%" y="325" width="0.0195%" height="15" fill="rgb(251,55,41)" fg:x="4587" fg:w="1"/><text x="89.7699%" y="335.50"></text></g><g><title>snix_eval::value::thunk::Thunk::unwrap_or_clone (3 samples, 0.06%)</title><rect x="89.5394%" y="357" width="0.0585%" height="15" fill="rgb(242,34,40)" fg:x="4588" fg:w="3"/><text x="89.7894%" y="367.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::peek (3 samples, 0.06%)</title><rect x="89.7931%" y="325" width="0.0585%" height="15" fill="rgb(215,42,17)" fg:x="4601" fg:w="3"/><text x="90.0431%" y="335.50"></text></g><g><title>genawaiter::core::Next&lt;Y,R&gt;::without_values (3 samples, 0.06%)</title><rect x="89.7931%" y="309" width="0.0585%" height="15" fill="rgb(207,44,46)" fg:x="4601" fg:w="3"/><text x="90.0431%" y="319.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (11 samples, 0.21%)</title><rect x="89.7151%" y="341" width="0.2147%" height="15" fill="rgb(211,206,28)" fg:x="4597" fg:w="11"/><text x="89.9651%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (4 samples, 0.08%)</title><rect x="89.8517%" y="325" width="0.0781%" height="15" fill="rgb(237,167,16)" fg:x="4604" fg:w="4"/><text x="90.1017%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="89.8517%" y="309" width="0.0781%" height="15" fill="rgb(233,66,6)" fg:x="4604" fg:w="4"/><text x="90.1017%" y="319.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="89.8517%" y="293" width="0.0781%" height="15" fill="rgb(246,123,29)" fg:x="4604" fg:w="4"/><text x="90.1017%" y="303.50"></text></g><g><title>core::ptr::read (4 samples, 0.08%)</title><rect x="89.8517%" y="277" width="0.0781%" height="15" fill="rgb(209,62,40)" fg:x="4604" fg:w="4"/><text x="90.1017%" y="287.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="89.9297%" y="277" width="0.0390%" height="15" fill="rgb(218,4,25)" fg:x="4608" fg:w="2"/><text x="90.1797%" y="287.50"></text></g><g><title>snix_eval::value::thunk::Thunk::force_::_{{closure}} (54 samples, 1.05%)</title><rect x="88.9539%" y="373" width="1.0539%" height="15" fill="rgb(253,91,49)" fg:x="4558" fg:w="54"/><text x="89.2039%" y="383.50"></text></g><g><title>snix_eval::vm::generators::request_enter_lambda::_{{closure}} (21 samples, 0.41%)</title><rect x="89.5980%" y="357" width="0.4098%" height="15" fill="rgb(228,155,29)" fg:x="4591" fg:w="21"/><text x="89.8480%" y="367.50"></text></g><g><title>genawaiter::core::Co&lt;A&gt;::yield_ (4 samples, 0.08%)</title><rect x="89.9297%" y="341" width="0.0781%" height="15" fill="rgb(243,57,37)" fg:x="4608" fg:w="4"/><text x="90.1797%" y="351.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (4 samples, 0.08%)</title><rect x="89.9297%" y="325" width="0.0781%" height="15" fill="rgb(244,167,17)" fg:x="4608" fg:w="4"/><text x="90.1797%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="89.9297%" y="309" width="0.0781%" height="15" fill="rgb(207,181,38)" fg:x="4608" fg:w="4"/><text x="90.1797%" y="319.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="89.9297%" y="293" width="0.0781%" height="15" fill="rgb(211,8,23)" fg:x="4608" fg:w="4"/><text x="90.1797%" y="303.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="89.9688%" y="277" width="0.0390%" height="15" fill="rgb(235,11,44)" fg:x="4610" fg:w="2"/><text x="90.2188%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (14 samples, 0.27%)</title><rect x="90.0273%" y="357" width="0.2732%" height="15" fill="rgb(248,18,52)" fg:x="4613" fg:w="14"/><text x="90.2773%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.27%)</title><rect x="90.0273%" y="341" width="0.2732%" height="15" fill="rgb(208,4,7)" fg:x="4613" fg:w="14"/><text x="90.2773%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="90.2810%" y="325" width="0.0195%" height="15" fill="rgb(240,17,39)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="90.2810%" y="309" width="0.0195%" height="15" fill="rgb(207,170,3)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="90.2810%" y="293" width="0.0195%" height="15" fill="rgb(236,100,52)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="90.2810%" y="277" width="0.0195%" height="15" fill="rgb(246,78,51)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="287.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.02%)</title><rect x="90.2810%" y="261" width="0.0195%" height="15" fill="rgb(211,17,15)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="271.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.02%)</title><rect x="90.2810%" y="245" width="0.0195%" height="15" fill="rgb(209,59,46)" fg:x="4626" fg:w="1"/><text x="90.5310%" y="255.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended (16 samples, 0.31%)</title><rect x="90.0078%" y="373" width="0.3123%" height="15" fill="rgb(210,92,25)" fg:x="4612" fg:w="16"/><text x="90.2578%" y="383.50"></text></g><g><title>snix_eval::upvalues::Upvalues::with_capacity (1 samples, 0.02%)</title><rect x="90.3005%" y="357" width="0.0195%" height="15" fill="rgb(238,174,52)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="90.3005%" y="341" width="0.0195%" height="15" fill="rgb(230,73,7)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="90.3005%" y="325" width="0.0195%" height="15" fill="rgb(243,124,40)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="90.3005%" y="309" width="0.0195%" height="15" fill="rgb(244,170,11)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="90.3005%" y="293" width="0.0195%" height="15" fill="rgb(207,114,54)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="90.3005%" y="277" width="0.0195%" height="15" fill="rgb(205,42,20)" fg:x="4627" fg:w="1"/><text x="90.5505%" y="287.50"></text></g><g><title>__memmove_avx512_unaligned_erms (11 samples, 0.21%)</title><rect x="90.3201%" y="325" width="0.2147%" height="15" fill="rgb(230,30,28)" fg:x="4628" fg:w="11"/><text x="90.5701%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="90.5152%" y="309" width="0.0195%" height="15" fill="rgb(205,73,54)" fg:x="4638" fg:w="1"/><text x="90.7652%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="90.5347%" y="261" width="0.0195%" height="15" fill="rgb(254,227,23)" fg:x="4639" fg:w="1"/><text x="90.7847%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="90.5347%" y="245" width="0.0195%" height="15" fill="rgb(228,202,34)" fg:x="4639" fg:w="1"/><text x="90.7847%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="90.5543%" y="261" width="0.0195%" height="15" fill="rgb(222,225,37)" fg:x="4640" fg:w="1"/><text x="90.8043%" y="271.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (15 samples, 0.29%)</title><rect x="90.3201%" y="357" width="0.2927%" height="15" fill="rgb(221,14,54)" fg:x="4628" fg:w="15"/><text x="90.5701%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.29%)</title><rect x="90.3201%" y="341" width="0.2927%" height="15" fill="rgb(254,102,2)" fg:x="4628" fg:w="15"/><text x="90.5701%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.08%)</title><rect x="90.5347%" y="325" width="0.0781%" height="15" fill="rgb(232,104,17)" fg:x="4639" fg:w="4"/><text x="90.7847%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="90.5347%" y="309" width="0.0781%" height="15" fill="rgb(250,220,14)" fg:x="4639" fg:w="4"/><text x="90.7847%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="90.5347%" y="293" width="0.0781%" height="15" fill="rgb(241,158,9)" fg:x="4639" fg:w="4"/><text x="90.7847%" y="303.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="90.5347%" y="277" width="0.0781%" height="15" fill="rgb(246,9,43)" fg:x="4639" fg:w="4"/><text x="90.7847%" y="287.50"></text></g><g><title>mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.04%)</title><rect x="90.5738%" y="261" width="0.0390%" height="15" fill="rgb(206,73,33)" fg:x="4641" fg:w="2"/><text x="90.8238%" y="271.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.04%)</title><rect x="90.5738%" y="245" width="0.0390%" height="15" fill="rgb(222,79,8)" fg:x="4641" fg:w="2"/><text x="90.8238%" y="255.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.04%)</title><rect x="90.5738%" y="229" width="0.0390%" height="15" fill="rgb(234,8,54)" fg:x="4641" fg:w="2"/><text x="90.8238%" y="239.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.04%)</title><rect x="90.5738%" y="213" width="0.0390%" height="15" fill="rgb(209,134,38)" fg:x="4641" fg:w="2"/><text x="90.8238%" y="223.50"></text></g><g><title>mi_segments_page_alloc.isra.0 (1 samples, 0.02%)</title><rect x="90.5933%" y="197" width="0.0195%" height="15" fill="rgb(230,127,29)" fg:x="4642" fg:w="1"/><text x="90.8433%" y="207.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.02%)</title><rect x="90.5933%" y="181" width="0.0195%" height="15" fill="rgb(242,44,41)" fg:x="4642" fg:w="1"/><text x="90.8433%" y="191.50"></text></g><g><title>snix_eval::value::thunk::Thunk::new_suspended_call (16 samples, 0.31%)</title><rect x="90.3201%" y="373" width="0.3123%" height="15" fill="rgb(222,56,43)" fg:x="4628" fg:w="16"/><text x="90.5701%" y="383.50"></text></g><g><title>snix_eval::chunk::Chunk::push_op (1 samples, 0.02%)</title><rect x="90.6128%" y="357" width="0.0195%" height="15" fill="rgb(238,39,47)" fg:x="4643" fg:w="1"/><text x="90.8628%" y="367.50"></text></g><g><title>snix_eval::chunk::Chunk::push_span (1 samples, 0.02%)</title><rect x="90.6128%" y="341" width="0.0195%" height="15" fill="rgb(226,79,43)" fg:x="4643" fg:w="1"/><text x="90.8628%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="90.6128%" y="325" width="0.0195%" height="15" fill="rgb(242,105,53)" fg:x="4643" fg:w="1"/><text x="90.8628%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.02%)</title><rect x="90.6128%" y="309" width="0.0195%" height="15" fill="rgb(251,132,46)" fg:x="4643" fg:w="1"/><text x="90.8628%" y="319.50"></text></g><g><title>snix_eval::value::thunk::Thunk::prepare_blackhole (2 samples, 0.04%)</title><rect x="90.6323%" y="373" width="0.0390%" height="15" fill="rgb(231,77,14)" fg:x="4644" fg:w="2"/><text x="90.8823%" y="383.50"></text></g><g><title>snix_eval::chunk::Chunk::first_span (1 samples, 0.02%)</title><rect x="90.6518%" y="357" width="0.0195%" height="15" fill="rgb(240,135,9)" fg:x="4645" fg:w="1"/><text x="90.9018%" y="367.50"></text></g><g><title>snix_eval::value::thunk::Thunk::upvalues_mut (1 samples, 0.02%)</title><rect x="90.6714%" y="373" width="0.0195%" height="15" fill="rgb(248,109,14)" fg:x="4646" fg:w="1"/><text x="90.9214%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="90.6714%" y="357" width="0.0195%" height="15" fill="rgb(227,146,52)" fg:x="4646" fg:w="1"/><text x="90.9214%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="90.6714%" y="341" width="0.0195%" height="15" fill="rgb(232,54,3)" fg:x="4646" fg:w="1"/><text x="90.9214%" y="351.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="90.6714%" y="325" width="0.0195%" height="15" fill="rgb(229,201,43)" fg:x="4646" fg:w="1"/><text x="90.9214%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="90.7494%" y="341" width="0.0195%" height="15" fill="rgb(252,161,33)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="90.7494%" y="325" width="0.0195%" height="15" fill="rgb(226,146,40)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="90.7494%" y="309" width="0.0195%" height="15" fill="rgb(219,47,25)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="90.7494%" y="293" width="0.0195%" height="15" fill="rgb(250,135,13)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1 samples, 0.02%)</title><rect x="90.7494%" y="277" width="0.0195%" height="15" fill="rgb(219,229,18)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1 samples, 0.02%)</title><rect x="90.7494%" y="261" width="0.0195%" height="15" fill="rgb(217,152,27)" fg:x="4650" fg:w="1"/><text x="90.9994%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="90.7689%" y="341" width="0.0195%" height="15" fill="rgb(225,71,47)" fg:x="4651" fg:w="1"/><text x="91.0189%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="90.7689%" y="325" width="0.0195%" height="15" fill="rgb(220,139,14)" fg:x="4651" fg:w="1"/><text x="91.0189%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="90.7689%" y="309" width="0.0195%" height="15" fill="rgb(247,54,32)" fg:x="4651" fg:w="1"/><text x="91.0189%" y="319.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="90.8860%" y="325" width="0.0195%" height="15" fill="rgb(252,131,39)" fg:x="4657" fg:w="1"/><text x="91.1360%" y="335.50"></text></g><g><title>snix_eval::vm::CallFrame::current_span (22 samples, 0.43%)</title><rect x="90.6909%" y="373" width="0.4294%" height="15" fill="rgb(210,108,39)" fg:x="4647" fg:w="22"/><text x="90.9409%" y="383.50"></text></g><g><title>snix_eval::chunk::Chunk::get_span (21 samples, 0.41%)</title><rect x="90.7104%" y="357" width="0.4098%" height="15" fill="rgb(205,23,29)" fg:x="4648" fg:w="21"/><text x="90.9604%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (17 samples, 0.33%)</title><rect x="90.7884%" y="341" width="0.3318%" height="15" fill="rgb(246,139,46)" fg:x="4652" fg:w="17"/><text x="91.0384%" y="351.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (11 samples, 0.21%)</title><rect x="90.9055%" y="325" width="0.2147%" height="15" fill="rgb(250,81,26)" fg:x="4658" fg:w="11"/><text x="91.1555%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="91.1397%" y="357" width="0.0195%" height="15" fill="rgb(214,104,7)" fg:x="4670" fg:w="1"/><text x="91.3897%" y="367.50"></text></g><g><title>&lt;snix_eval::opcode::Op as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.02%)</title><rect x="91.1397%" y="341" width="0.0195%" height="15" fill="rgb(233,189,8)" fg:x="4670" fg:w="1"/><text x="91.3897%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="91.1593%" y="357" width="0.0195%" height="15" fill="rgb(228,141,17)" fg:x="4671" fg:w="1"/><text x="91.4093%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="91.1593%" y="341" width="0.0195%" height="15" fill="rgb(247,157,1)" fg:x="4671" fg:w="1"/><text x="91.4093%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="91.1593%" y="325" width="0.0195%" height="15" fill="rgb(249,225,5)" fg:x="4671" fg:w="1"/><text x="91.4093%" y="335.50"></text></g><g><title>&lt;snix_eval::opcode::CodeIdx as core::ops::arith::AddAssign&lt;usize&gt;&gt;::add_assign (3 samples, 0.06%)</title><rect x="91.1788%" y="357" width="0.0585%" height="15" fill="rgb(242,55,13)" fg:x="4672" fg:w="3"/><text x="91.4288%" y="367.50"></text></g><g><title>snix_eval::vm::CallFrame::inc_ip (7 samples, 0.14%)</title><rect x="91.1202%" y="373" width="0.1366%" height="15" fill="rgb(230,49,50)" fg:x="4669" fg:w="7"/><text x="91.3702%" y="383.50"></text></g><g><title>snix_eval::vm::CallFrame::chunk (1 samples, 0.02%)</title><rect x="91.2373%" y="357" width="0.0195%" height="15" fill="rgb(241,111,38)" fg:x="4675" fg:w="1"/><text x="91.4873%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="91.2373%" y="341" width="0.0195%" height="15" fill="rgb(252,155,4)" fg:x="4675" fg:w="1"/><text x="91.4873%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="91.2373%" y="325" width="0.0195%" height="15" fill="rgb(212,69,32)" fg:x="4675" fg:w="1"/><text x="91.4873%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="91.2373%" y="309" width="0.0195%" height="15" fill="rgb(243,107,47)" fg:x="4675" fg:w="1"/><text x="91.4873%" y="319.50"></text></g><g><title>snix_eval::vm::CallFrame::read_u16 (1 samples, 0.02%)</title><rect x="91.2568%" y="373" width="0.0195%" height="15" fill="rgb(247,130,12)" fg:x="4676" fg:w="1"/><text x="91.5068%" y="383.50"></text></g><g><title>&lt;snix_eval::opcode::CodeIdx as core::ops::arith::AddAssign&lt;usize&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="91.2568%" y="357" width="0.0195%" height="15" fill="rgb(233,74,16)" fg:x="4676" fg:w="1"/><text x="91.5068%" y="367.50"></text></g><g><title>snix_eval::vm::CallFrame::read_uvarint (6 samples, 0.12%)</title><rect x="91.2763%" y="373" width="0.1171%" height="15" fill="rgb(208,58,18)" fg:x="4677" fg:w="6"/><text x="91.5263%" y="383.50"></text></g><g><title>snix_eval::vm::ImportCache::get (1 samples, 0.02%)</title><rect x="91.3934%" y="373" width="0.0195%" height="15" fill="rgb(242,225,1)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="383.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.02%)</title><rect x="91.3934%" y="357" width="0.0195%" height="15" fill="rgb(249,39,40)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::canonicalize (1 samples, 0.02%)</title><rect x="91.3934%" y="341" width="0.0195%" height="15" fill="rgb(207,72,44)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="351.50"></text></g><g><title>realpath@@GLIBC_2.3 (1 samples, 0.02%)</title><rect x="91.3934%" y="325" width="0.0195%" height="15" fill="rgb(215,193,12)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="335.50"></text></g><g><title>__readlink (1 samples, 0.02%)</title><rect x="91.3934%" y="309" width="0.0195%" height="15" fill="rgb(248,41,39)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="91.3934%" y="293" width="0.0195%" height="15" fill="rgb(253,85,4)" fg:x="4683" fg:w="1"/><text x="91.6434%" y="303.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::call_builtin (1 samples, 0.02%)</title><rect x="91.4520%" y="357" width="0.0195%" height="15" fill="rgb(243,70,31)" fg:x="4686" fg:w="1"/><text x="91.7020%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="91.4520%" y="341" width="0.0195%" height="15" fill="rgb(253,195,26)" fg:x="4686" fg:w="1"/><text x="91.7020%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="91.4520%" y="325" width="0.0195%" height="15" fill="rgb(243,42,11)" fg:x="4686" fg:w="1"/><text x="91.7020%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::call_value (8 samples, 0.16%)</title><rect x="91.4130%" y="373" width="0.1561%" height="15" fill="rgb(239,66,17)" fg:x="4684" fg:w="8"/><text x="91.6630%" y="383.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::push_call_frame (5 samples, 0.10%)</title><rect x="91.4715%" y="357" width="0.0976%" height="15" fill="rgb(217,132,21)" fg:x="4687" fg:w="5"/><text x="91.7215%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="91.4910%" y="341" width="0.0781%" height="15" fill="rgb(252,202,21)" fg:x="4688" fg:w="4"/><text x="91.7410%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="91.5496%" y="325" width="0.0195%" height="15" fill="rgb(233,98,36)" fg:x="4691" fg:w="1"/><text x="91.7996%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute_bytecode (7 samples, 0.14%)</title><rect x="91.5691%" y="373" width="0.1366%" height="15" fill="rgb(216,153,54)" fg:x="4692" fg:w="7"/><text x="91.8191%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="91.6667%" y="357" width="0.0390%" height="15" fill="rgb(250,99,7)" fg:x="4697" fg:w="2"/><text x="91.9167%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2 samples, 0.04%)</title><rect x="91.6667%" y="341" width="0.0390%" height="15" fill="rgb(207,56,50)" fg:x="4697" fg:w="2"/><text x="91.9167%" y="351.50"></text></g><g><title>snix_eval::vm::generators::request_call::_{{closure}} (1 samples, 0.02%)</title><rect x="91.7057%" y="373" width="0.0195%" height="15" fill="rgb(244,61,34)" fg:x="4699" fg:w="1"/><text x="91.9557%" y="383.50"></text></g><g><title>snix_eval::vm::generators::request_force::_{{closure}} (4 samples, 0.08%)</title><rect x="91.7252%" y="373" width="0.0781%" height="15" fill="rgb(241,50,38)" fg:x="4700" fg:w="4"/><text x="91.9752%" y="383.50"></text></g><g><title>&lt;genawaiter::core::Barrier&lt;A&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="91.7642%" y="357" width="0.0390%" height="15" fill="rgb(212,166,30)" fg:x="4702" fg:w="2"/><text x="92.0142%" y="367.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (1 samples, 0.02%)</title><rect x="91.7838%" y="341" width="0.0195%" height="15" fill="rgb(249,127,32)" fg:x="4703" fg:w="1"/><text x="92.0338%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="91.7838%" y="325" width="0.0195%" height="15" fill="rgb(209,103,0)" fg:x="4703" fg:w="1"/><text x="92.0338%" y="335.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="91.7838%" y="309" width="0.0195%" height="15" fill="rgb(238,209,51)" fg:x="4703" fg:w="1"/><text x="92.0338%" y="319.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="91.7838%" y="293" width="0.0195%" height="15" fill="rgb(237,56,23)" fg:x="4703" fg:w="1"/><text x="92.0338%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="91.8813%" y="341" width="0.0195%" height="15" fill="rgb(215,153,46)" fg:x="4708" fg:w="1"/><text x="92.1313%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="91.8813%" y="325" width="0.0195%" height="15" fill="rgb(224,49,31)" fg:x="4708" fg:w="1"/><text x="92.1313%" y="335.50"></text></g><g><title>core::ptr::read (4 samples, 0.08%)</title><rect x="91.9399%" y="261" width="0.0781%" height="15" fill="rgb(250,18,42)" fg:x="4711" fg:w="4"/><text x="92.1899%" y="271.50"></text></g><g><title>snix_eval::vm::run_lambda (12 samples, 0.23%)</title><rect x="91.8033%" y="373" width="0.2342%" height="15" fill="rgb(215,176,39)" fg:x="4704" fg:w="12"/><text x="92.0533%" y="383.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (12 samples, 0.23%)</title><rect x="91.8033%" y="357" width="0.2342%" height="15" fill="rgb(223,77,29)" fg:x="4704" fg:w="12"/><text x="92.0533%" y="367.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (7 samples, 0.14%)</title><rect x="91.9009%" y="341" width="0.1366%" height="15" fill="rgb(234,94,52)" fg:x="4709" fg:w="7"/><text x="92.1509%" y="351.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::resume_with (6 samples, 0.12%)</title><rect x="91.9204%" y="325" width="0.1171%" height="15" fill="rgb(220,154,50)" fg:x="4710" fg:w="6"/><text x="92.1704%" y="335.50"></text></g><g><title>&lt;genawaiter::rc::engine::Airlock&lt;Y,R&gt; as genawaiter::core::Airlock&gt;::replace (5 samples, 0.10%)</title><rect x="91.9399%" y="309" width="0.0976%" height="15" fill="rgb(212,11,10)" fg:x="4711" fg:w="5"/><text x="92.1899%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.10%)</title><rect x="91.9399%" y="293" width="0.0976%" height="15" fill="rgb(205,166,19)" fg:x="4711" fg:w="5"/><text x="92.1899%" y="303.50"></text></g><g><title>core::mem::replace (5 samples, 0.10%)</title><rect x="91.9399%" y="277" width="0.0976%" height="15" fill="rgb(244,198,16)" fg:x="4711" fg:w="5"/><text x="92.1899%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="92.0180%" y="261" width="0.0195%" height="15" fill="rgb(219,69,12)" fg:x="4715" fg:w="1"/><text x="92.2680%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.12%)</title><rect x="94.3794%" y="341" width="0.1171%" height="15" fill="rgb(245,30,7)" fg:x="4836" fg:w="6"/><text x="94.6294%" y="351.50"></text></g><g><title>__errno_location (1 samples, 0.02%)</title><rect x="94.4965%" y="341" width="0.0195%" height="15" fill="rgb(218,221,48)" fg:x="4842" fg:w="1"/><text x="94.7465%" y="351.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait_timeout_while (143 samples, 2.79%)</title><rect x="92.0375%" y="373" width="2.7908%" height="15" fill="rgb(216,66,15)" fg:x="4716" fg:w="143"/><text x="92.2875%" y="383.50">st..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (120 samples, 2.34%)</title><rect x="92.4863%" y="357" width="2.3419%" height="15" fill="rgb(226,122,50)" fg:x="4739" fg:w="120"/><text x="92.7363%" y="367.50">s..</text></g><g><title>syscall (16 samples, 0.31%)</title><rect x="94.5160%" y="341" width="0.3123%" height="15" fill="rgb(239,156,16)" fg:x="4843" fg:w="16"/><text x="94.7660%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="94.7892%" y="325" width="0.0390%" height="15" fill="rgb(224,27,38)" fg:x="4857" fg:w="2"/><text x="95.0392%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="94.8087%" y="309" width="0.0195%" height="15" fill="rgb(224,39,27)" fg:x="4858" fg:w="1"/><text x="95.0587%" y="319.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.02%)</title><rect x="94.8283%" y="373" width="0.0195%" height="15" fill="rgb(215,92,29)" fg:x="4859" fg:w="1"/><text x="95.0783%" y="383.50"></text></g><g><title>__mmap (1 samples, 0.02%)</title><rect x="94.8283%" y="357" width="0.0195%" height="15" fill="rgb(207,159,16)" fg:x="4859" fg:w="1"/><text x="95.0783%" y="367.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.02%)</title><rect x="94.8478%" y="373" width="0.0195%" height="15" fill="rgb(238,163,47)" fg:x="4860" fg:w="1"/><text x="95.0978%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (1 samples, 0.02%)</title><rect x="94.8673%" y="373" width="0.0195%" height="15" fill="rgb(219,91,49)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.02%)</title><rect x="94.8673%" y="357" width="0.0195%" height="15" fill="rgb(227,167,31)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.02%)</title><rect x="94.8673%" y="341" width="0.0195%" height="15" fill="rgb(234,80,54)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="351.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="94.8673%" y="325" width="0.0195%" height="15" fill="rgb(212,114,2)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="94.8673%" y="309" width="0.0195%" height="15" fill="rgb(234,50,24)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="94.8673%" y="293" width="0.0195%" height="15" fill="rgb(221,68,8)" fg:x="4861" fg:w="1"/><text x="95.1173%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.02%)</title><rect x="94.8868%" y="373" width="0.0195%" height="15" fill="rgb(254,180,31)" fg:x="4862" fg:w="1"/><text x="95.1368%" y="383.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.02%)</title><rect x="94.9063%" y="373" width="0.0195%" height="15" fill="rgb(247,130,50)" fg:x="4863" fg:w="1"/><text x="95.1563%" y="383.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (1 samples, 0.02%)</title><rect x="94.9258%" y="373" width="0.0195%" height="15" fill="rgb(211,109,4)" fg:x="4864" fg:w="1"/><text x="95.1758%" y="383.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="94.9454%" y="373" width="0.0195%" height="15" fill="rgb(238,50,21)" fg:x="4865" fg:w="1"/><text x="95.1954%" y="383.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="94.9649%" y="373" width="0.0195%" height="15" fill="rgb(225,57,45)" fg:x="4866" fg:w="1"/><text x="95.2149%" y="383.50"></text></g><g><title>genawaiter::rc::generator::Gen&lt;Y,R,F&gt;::new (1 samples, 0.02%)</title><rect x="94.9844%" y="357" width="0.0195%" height="15" fill="rgb(209,196,50)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="367.50"></text></g><g><title>snix_eval::builtins::pure_builtins::builtins::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="94.9844%" y="341" width="0.0195%" height="15" fill="rgb(242,140,13)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="351.50"></text></g><g><title>snix_eval::vm::generators::pin_generator (1 samples, 0.02%)</title><rect x="94.9844%" y="325" width="0.0195%" height="15" fill="rgb(217,111,7)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="94.9844%" y="309" width="0.0195%" height="15" fill="rgb(253,193,51)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="94.9844%" y="293" width="0.0195%" height="15" fill="rgb(252,70,29)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="94.9844%" y="277" width="0.0195%" height="15" fill="rgb(232,127,12)" fg:x="4867" fg:w="1"/><text x="95.2344%" y="287.50"></text></g><g><title>thread_count (2 samples, 0.04%)</title><rect x="94.9844%" y="373" width="0.0390%" height="15" fill="rgb(211,180,21)" fg:x="4867" fg:w="2"/><text x="95.2344%" y="383.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_right_assoc (1 samples, 0.02%)</title><rect x="95.0039%" y="357" width="0.0195%" height="15" fill="rgb(229,72,13)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="367.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_simple (1 samples, 0.02%)</title><rect x="95.0039%" y="341" width="0.0195%" height="15" fill="rgb(240,211,49)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="351.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::parse_pattern (1 samples, 0.02%)</title><rect x="95.0039%" y="325" width="0.0195%" height="15" fill="rgb(219,149,40)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="335.50"></text></g><g><title>rnix::parser::Parser&lt;I&gt;::start_node (1 samples, 0.02%)</title><rect x="95.0039%" y="309" width="0.0195%" height="15" fill="rgb(210,127,46)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="319.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::start_node (1 samples, 0.02%)</title><rect x="95.0039%" y="293" width="0.0195%" height="15" fill="rgb(220,106,7)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.0039%" y="277" width="0.0195%" height="15" fill="rgb(249,31,22)" fg:x="4868" fg:w="1"/><text x="95.2539%" y="287.50"></text></g><g><title>tokio::fs::file::File::metadata::_{{closure}} (1 samples, 0.02%)</title><rect x="95.0234%" y="373" width="0.0195%" height="15" fill="rgb(253,1,49)" fg:x="4869" fg:w="1"/><text x="95.2734%" y="383.50"></text></g><g><title>tokio::io::util::copy::CopyBuffer::new (1 samples, 0.02%)</title><rect x="95.0429%" y="373" width="0.0195%" height="15" fill="rgb(227,144,33)" fg:x="4870" fg:w="1"/><text x="95.2929%" y="383.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.02%)</title><rect x="95.0625%" y="373" width="0.0195%" height="15" fill="rgb(249,163,44)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="383.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.02%)</title><rect x="95.0625%" y="357" width="0.0195%" height="15" fill="rgb(234,15,39)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="367.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.02%)</title><rect x="95.0625%" y="341" width="0.0195%" height="15" fill="rgb(207,66,16)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="351.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.02%)</title><rect x="95.0625%" y="325" width="0.0195%" height="15" fill="rgb(233,112,24)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="95.0625%" y="309" width="0.0195%" height="15" fill="rgb(230,90,22)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="95.0625%" y="293" width="0.0195%" height="15" fill="rgb(229,61,13)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="303.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.02%)</title><rect x="95.0625%" y="277" width="0.0195%" height="15" fill="rgb(225,57,24)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="287.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="95.0625%" y="261" width="0.0195%" height="15" fill="rgb(208,169,48)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="95.0625%" y="245" width="0.0195%" height="15" fill="rgb(244,218,51)" fg:x="4871" fg:w="1"/><text x="95.3125%" y="255.50"></text></g><g><title>tracing::instrument::_::&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop (2 samples, 0.04%)</title><rect x="95.0820%" y="373" width="0.0390%" height="15" fill="rgb(214,148,10)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="383.50"></text></g><g><title>tracing::instrument::_::&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop::__drop_inner (2 samples, 0.04%)</title><rect x="95.0820%" y="357" width="0.0390%" height="15" fill="rgb(225,174,27)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.04%)</title><rect x="95.0820%" y="341" width="0.0390%" height="15" fill="rgb(230,96,26)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="351.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="95.0820%" y="325" width="0.0390%" height="15" fill="rgb(232,10,30)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="335.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.04%)</title><rect x="95.0820%" y="309" width="0.0390%" height="15" fill="rgb(222,8,50)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="319.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17h0bd66cd2865749cbE.llvm.12783554947409113215 (2 samples, 0.04%)</title><rect x="95.0820%" y="293" width="0.0390%" height="15" fill="rgb(213,81,27)" fg:x="4872" fg:w="2"/><text x="95.3320%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,snix_eval::errors::ErrorKind&gt; as snix_eval::vm::WithSpan&lt;T,S,IO&gt;&gt;::with_span (5 samples, 0.10%)</title><rect x="95.2381%" y="277" width="0.0976%" height="15" fill="rgb(245,50,10)" fg:x="4880" fg:w="5"/><text x="95.4881%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="95.3357%" y="277" width="0.0585%" height="15" fill="rgb(216,100,18)" fg:x="4885" fg:w="3"/><text x="95.5857%" y="287.50"></text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="95.3357%" y="261" width="0.0585%" height="15" fill="rgb(236,147,54)" fg:x="4885" fg:w="3"/><text x="95.5857%" y="271.50"></text></g><g><title>tracing::span::Span::in_scope (21 samples, 0.41%)</title><rect x="95.1210%" y="373" width="0.4098%" height="15" fill="rgb(205,143,26)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="383.50"></text></g><g><title>snix_cli::evaluate::_{{closure}} (21 samples, 0.41%)</title><rect x="95.1210%" y="357" width="0.4098%" height="15" fill="rgb(236,26,9)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="367.50"></text></g><g><title>snix_eval::Evaluation&lt;IO&gt;::evaluate (21 samples, 0.41%)</title><rect x="95.1210%" y="341" width="0.4098%" height="15" fill="rgb(221,165,53)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="351.50"></text></g><g><title>snix_eval::vm::run_lambda (21 samples, 0.41%)</title><rect x="95.1210%" y="325" width="0.4098%" height="15" fill="rgb(214,110,17)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="335.50"></text></g><g><title>snix_eval::vm::VM&lt;IO&gt;::execute (21 samples, 0.41%)</title><rect x="95.1210%" y="309" width="0.4098%" height="15" fill="rgb(237,197,12)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="319.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::run_generator (21 samples, 0.41%)</title><rect x="95.1210%" y="293" width="0.4098%" height="15" fill="rgb(205,84,17)" fg:x="4874" fg:w="21"/><text x="95.3710%" y="303.50"></text></g><g><title>snix_eval::vm::generators::&lt;impl snix_eval::vm::VM&lt;IO&gt;&gt;::reenqueue_generator (7 samples, 0.14%)</title><rect x="95.3942%" y="277" width="0.1366%" height="15" fill="rgb(237,18,45)" fg:x="4888" fg:w="7"/><text x="95.6442%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.14%)</title><rect x="95.3942%" y="261" width="0.1366%" height="15" fill="rgb(221,87,14)" fg:x="4888" fg:w="7"/><text x="95.6442%" y="271.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="95.4528%" y="245" width="0.0781%" height="15" fill="rgb(238,186,15)" fg:x="4891" fg:w="4"/><text x="95.7028%" y="255.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (2 samples, 0.04%)</title><rect x="95.5308%" y="373" width="0.0390%" height="15" fill="rgb(208,115,11)" fg:x="4895" fg:w="2"/><text x="95.7808%" y="383.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.04%)</title><rect x="95.5699%" y="373" width="0.0390%" height="15" fill="rgb(254,175,0)" fg:x="4897" fg:w="2"/><text x="95.8199%" y="383.50"></text></g><g><title>tracing_indicatif::IndicatifSpanContext::add_keys_to_style (1 samples, 0.02%)</title><rect x="95.6089%" y="373" width="0.0195%" height="15" fill="rgb(227,24,42)" fg:x="4899" fg:w="1"/><text x="95.8589%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="95.6089%" y="357" width="0.0195%" height="15" fill="rgb(223,211,37)" fg:x="4899" fg:w="1"/><text x="95.8589%" y="367.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (2 samples, 0.04%)</title><rect x="95.6284%" y="373" width="0.0390%" height="15" fill="rgb(235,49,27)" fg:x="4900" fg:w="2"/><text x="95.8784%" y="383.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (2 samples, 0.04%)</title><rect x="95.6284%" y="357" width="0.0390%" height="15" fill="rgb(254,97,51)" fg:x="4900" fg:w="2"/><text x="95.8784%" y="367.50"></text></g><g><title>snix (4,903 samples, 95.69%)</title><rect x="0.0000%" y="389" width="95.6870%" height="15" fill="rgb(249,51,40)" fg:x="0" fg:w="4903"/><text x="0.2500%" y="399.50">snix</text></g><g><title>tracing_subscriber::filter::layer_filters::is_plf_downcast_marker (1 samples, 0.02%)</title><rect x="95.6674%" y="373" width="0.0195%" height="15" fill="rgb(210,128,45)" fg:x="4902" fg:w="1"/><text x="95.9174%" y="383.50"></text></g><g><title>_ZN5tokio7runtime4park4wake17hc93e09df79cc0dc9E.llvm.12783554947409113215 (1 samples, 0.02%)</title><rect x="95.6870%" y="357" width="0.0195%" height="15" fill="rgb(224,137,50)" fg:x="4903" fg:w="1"/><text x="95.9370%" y="367.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.04%)</title><rect x="95.6870%" y="373" width="0.0390%" height="15" fill="rgb(242,15,9)" fg:x="4903" fg:w="2"/><text x="95.9370%" y="383.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::upgrade (1 samples, 0.02%)</title><rect x="95.7065%" y="357" width="0.0195%" height="15" fill="rgb(233,187,41)" fg:x="4904" fg:w="1"/><text x="95.9565%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (1 samples, 0.02%)</title><rect x="95.7065%" y="341" width="0.0195%" height="15" fill="rgb(227,2,29)" fg:x="4904" fg:w="1"/><text x="95.9565%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="95.7650%" y="357" width="0.0195%" height="15" fill="rgb(222,70,3)" fg:x="4907" fg:w="1"/><text x="96.0150%" y="367.50"></text></g><g><title>tokio::fs::file::File::metadata::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="95.7845%" y="357" width="0.0195%" height="15" fill="rgb(213,11,42)" fg:x="4908" fg:w="1"/><text x="96.0345%" y="367.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.02%)</title><rect x="95.7845%" y="341" width="0.0195%" height="15" fill="rgb(225,150,9)" fg:x="4908" fg:w="1"/><text x="96.0345%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="95.7845%" y="325" width="0.0195%" height="15" fill="rgb(230,162,45)" fg:x="4908" fg:w="1"/><text x="96.0345%" y="335.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="95.8041%" y="293" width="0.0390%" height="15" fill="rgb(222,14,52)" fg:x="4909" fg:w="2"/><text x="96.0541%" y="303.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.16%)</title><rect x="95.7260%" y="373" width="0.1561%" height="15" fill="rgb(254,198,14)" fg:x="4905" fg:w="8"/><text x="95.9760%" y="383.50"></text></g><g><title>tokio::fs::file::File::open::_{{closure}}::_{{closure}} (4 samples, 0.08%)</title><rect x="95.8041%" y="357" width="0.0781%" height="15" fill="rgb(220,217,30)" fg:x="4909" fg:w="4"/><text x="96.0541%" y="367.50"></text></g><g><title>std::fs::File::open (4 samples, 0.08%)</title><rect x="95.8041%" y="341" width="0.0781%" height="15" fill="rgb(215,146,41)" fg:x="4909" fg:w="4"/><text x="96.0541%" y="351.50"></text></g><g><title>std::fs::OpenOptions::open (4 samples, 0.08%)</title><rect x="95.8041%" y="325" width="0.0781%" height="15" fill="rgb(217,27,36)" fg:x="4909" fg:w="4"/><text x="96.0541%" y="335.50"></text></g><g><title>std::fs::OpenOptions::_open (4 samples, 0.08%)</title><rect x="95.8041%" y="309" width="0.0781%" height="15" fill="rgb(219,218,39)" fg:x="4909" fg:w="4"/><text x="96.0541%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (2 samples, 0.04%)</title><rect x="95.8431%" y="293" width="0.0390%" height="15" fill="rgb(219,4,42)" fg:x="4911" fg:w="2"/><text x="96.0931%" y="303.50"></text></g><g><title>__GI___libc_open (1 samples, 0.02%)</title><rect x="95.8626%" y="277" width="0.0195%" height="15" fill="rgb(249,119,36)" fg:x="4912" fg:w="1"/><text x="96.1126%" y="287.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="95.8821%" y="357" width="0.0195%" height="15" fill="rgb(209,23,33)" fg:x="4913" fg:w="1"/><text x="96.1321%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="95.8821%" y="341" width="0.0195%" height="15" fill="rgb(211,10,0)" fg:x="4913" fg:w="1"/><text x="96.1321%" y="351.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="95.8821%" y="325" width="0.0195%" height="15" fill="rgb(208,99,37)" fg:x="4913" fg:w="1"/><text x="96.1321%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="95.8821%" y="309" width="0.0195%" height="15" fill="rgb(213,132,31)" fg:x="4913" fg:w="1"/><text x="96.1321%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="95.8821%" y="373" width="0.0390%" height="15" fill="rgb(243,129,40)" fg:x="4913" fg:w="2"/><text x="96.1321%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (1 samples, 0.02%)</title><rect x="95.9016%" y="357" width="0.0195%" height="15" fill="rgb(210,66,33)" fg:x="4914" fg:w="1"/><text x="96.1516%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4park4wake17hc93e09df79cc0dc9E.llvm.12783554947409113215 (1 samples, 0.02%)</title><rect x="95.9212%" y="341" width="0.0195%" height="15" fill="rgb(209,189,4)" fg:x="4915" fg:w="1"/><text x="96.1712%" y="351.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="95.9212%" y="325" width="0.0195%" height="15" fill="rgb(214,107,37)" fg:x="4915" fg:w="1"/><text x="96.1712%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.9212%" y="309" width="0.0195%" height="15" fill="rgb(245,88,54)" fg:x="4915" fg:w="1"/><text x="96.1712%" y="319.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (3 samples, 0.06%)</title><rect x="95.9212%" y="357" width="0.0585%" height="15" fill="rgb(205,146,20)" fg:x="4915" fg:w="3"/><text x="96.1712%" y="367.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::upgrade (2 samples, 0.04%)</title><rect x="95.9407%" y="341" width="0.0390%" height="15" fill="rgb(220,161,25)" fg:x="4916" fg:w="2"/><text x="96.1907%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (2 samples, 0.04%)</title><rect x="95.9407%" y="325" width="0.0390%" height="15" fill="rgb(215,152,15)" fg:x="4916" fg:w="2"/><text x="96.1907%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.04%)</title><rect x="95.9407%" y="309" width="0.0390%" height="15" fill="rgb(233,192,44)" fg:x="4916" fg:w="2"/><text x="96.1907%" y="319.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::upgrade::checked_increment (2 samples, 0.04%)</title><rect x="95.9407%" y="293" width="0.0390%" height="15" fill="rgb(240,170,46)" fg:x="4916" fg:w="2"/><text x="96.1907%" y="303.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.08%)</title><rect x="95.9797%" y="357" width="0.0781%" height="15" fill="rgb(207,104,33)" fg:x="4918" fg:w="4"/><text x="96.2297%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="96.0383%" y="341" width="0.0195%" height="15" fill="rgb(219,21,39)" fg:x="4921" fg:w="1"/><text x="96.2883%" y="351.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner6unpark17ha2552ce2e6e2653aE.llvm.12783554947409113215 (2 samples, 0.04%)</title><rect x="96.0578%" y="357" width="0.0390%" height="15" fill="rgb(214,133,29)" fg:x="4922" fg:w="2"/><text x="96.3078%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hfc2e3cc1020d0995E.llvm.2901099113519762900 (1 samples, 0.02%)</title><rect x="96.0968%" y="357" width="0.0195%" height="15" fill="rgb(226,93,6)" fg:x="4924" fg:w="1"/><text x="96.3468%" y="367.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (3 samples, 0.06%)</title><rect x="96.1163%" y="357" width="0.0585%" height="15" fill="rgb(252,222,34)" fg:x="4925" fg:w="3"/><text x="96.3663%" y="367.50"></text></g><g><title>mi_free (1 samples, 0.02%)</title><rect x="96.1749%" y="357" width="0.0195%" height="15" fill="rgb(252,92,48)" fg:x="4928" fg:w="1"/><text x="96.4249%" y="367.50"></text></g><g><title>__libc_calloc (2 samples, 0.04%)</title><rect x="96.2139%" y="309" width="0.0390%" height="15" fill="rgb(245,223,24)" fg:x="4930" fg:w="2"/><text x="96.4639%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="96.2334%" y="293" width="0.0195%" height="15" fill="rgb(205,176,3)" fg:x="4931" fg:w="1"/><text x="96.4834%" y="303.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (4 samples, 0.08%)</title><rect x="96.1944%" y="357" width="0.0781%" height="15" fill="rgb(235,151,15)" fg:x="4929" fg:w="4"/><text x="96.4444%" y="367.50"></text></g><g><title>std::thread::spawnhook::ChildSpawnHooks::run (3 samples, 0.06%)</title><rect x="96.2139%" y="341" width="0.0585%" height="15" fill="rgb(237,209,11)" fg:x="4930" fg:w="3"/><text x="96.4639%" y="351.50"></text></g><g><title>__cxa_thread_atexit_impl (3 samples, 0.06%)</title><rect x="96.2139%" y="325" width="0.0585%" height="15" fill="rgb(243,227,24)" fg:x="4930" fg:w="3"/><text x="96.4639%" y="335.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="96.2529%" y="309" width="0.0195%" height="15" fill="rgb(239,193,16)" fg:x="4932" fg:w="1"/><text x="96.5029%" y="319.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (5 samples, 0.10%)</title><rect x="96.2724%" y="357" width="0.0976%" height="15" fill="rgb(231,27,9)" fg:x="4933" fg:w="5"/><text x="96.5224%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="96.3505%" y="341" width="0.0195%" height="15" fill="rgb(219,169,10)" fg:x="4937" fg:w="1"/><text x="96.6005%" y="351.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.04%)</title><rect x="96.3700%" y="341" width="0.0390%" height="15" fill="rgb(244,229,43)" fg:x="4938" fg:w="2"/><text x="96.6200%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="96.3700%" y="325" width="0.0390%" height="15" fill="rgb(254,38,20)" fg:x="4938" fg:w="2"/><text x="96.6200%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="96.3700%" y="309" width="0.0390%" height="15" fill="rgb(250,47,30)" fg:x="4938" fg:w="2"/><text x="96.6200%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="96.3700%" y="293" width="0.0390%" height="15" fill="rgb(224,124,36)" fg:x="4938" fg:w="2"/><text x="96.6200%" y="303.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (3 samples, 0.06%)</title><rect x="96.3700%" y="357" width="0.0585%" height="15" fill="rgb(246,68,51)" fg:x="4938" fg:w="3"/><text x="96.6200%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.02%)</title><rect x="96.4091%" y="341" width="0.0195%" height="15" fill="rgb(253,43,49)" fg:x="4940" fg:w="1"/><text x="96.6591%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.02%)</title><rect x="96.4091%" y="325" width="0.0195%" height="15" fill="rgb(219,54,36)" fg:x="4940" fg:w="1"/><text x="96.6591%" y="335.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="96.4091%" y="309" width="0.0195%" height="15" fill="rgb(227,133,34)" fg:x="4940" fg:w="1"/><text x="96.6591%" y="319.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3 samples, 0.06%)</title><rect x="96.4286%" y="357" width="0.0585%" height="15" fill="rgb(247,227,15)" fg:x="4941" fg:w="3"/><text x="96.6786%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.02%)</title><rect x="96.5066%" y="309" width="0.0195%" height="15" fill="rgb(229,96,14)" fg:x="4945" fg:w="1"/><text x="96.7566%" y="319.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.5066%" y="293" width="0.0195%" height="15" fill="rgb(220,79,17)" fg:x="4945" fg:w="1"/><text x="96.7566%" y="303.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.06%)</title><rect x="96.4871%" y="357" width="0.0585%" height="15" fill="rgb(205,131,53)" fg:x="4944" fg:w="3"/><text x="96.7371%" y="367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.04%)</title><rect x="96.5066%" y="341" width="0.0390%" height="15" fill="rgb(209,50,29)" fg:x="4945" fg:w="2"/><text x="96.7566%" y="351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2 samples, 0.04%)</title><rect x="96.5066%" y="325" width="0.0390%" height="15" fill="rgb(245,86,46)" fg:x="4945" fg:w="2"/><text x="96.7566%" y="335.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.02%)</title><rect x="96.5262%" y="309" width="0.0195%" height="15" fill="rgb(235,66,46)" fg:x="4946" fg:w="1"/><text x="96.7762%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.02%)</title><rect x="96.5457%" y="357" width="0.0195%" height="15" fill="rgb(232,148,31)" fg:x="4947" fg:w="1"/><text x="96.7957%" y="367.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.02%)</title><rect x="96.5652%" y="357" width="0.0195%" height="15" fill="rgb(217,149,8)" fg:x="4948" fg:w="1"/><text x="96.8152%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.68%)</title><rect x="95.9212%" y="373" width="0.6831%" height="15" fill="rgb(209,183,11)" fg:x="4915" fg:w="35"/><text x="96.1712%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.02%)</title><rect x="96.5847%" y="357" width="0.0195%" height="15" fill="rgb(208,55,20)" fg:x="4949" fg:w="1"/><text x="96.8347%" y="367.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h43610216b40dd4c3E.llvm.14938166929453290955 (4 samples, 0.08%)</title><rect x="96.6042%" y="373" width="0.0781%" height="15" fill="rgb(218,39,14)" fg:x="4950" fg:w="4"/><text x="96.8542%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="96.6628%" y="357" width="0.0195%" height="15" fill="rgb(216,169,33)" fg:x="4953" fg:w="1"/><text x="96.9128%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="96.6628%" y="341" width="0.0195%" height="15" fill="rgb(233,80,24)" fg:x="4953" fg:w="1"/><text x="96.9128%" y="351.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner6unpark17ha2552ce2e6e2653aE.llvm.12783554947409113215 (1 samples, 0.02%)</title><rect x="96.6823%" y="373" width="0.0195%" height="15" fill="rgb(213,179,31)" fg:x="4954" fg:w="1"/><text x="96.9323%" y="383.50"></text></g><g><title>_mi_thread_done (1 samples, 0.02%)</title><rect x="96.7799%" y="325" width="0.0195%" height="15" fill="rgb(209,19,5)" fg:x="4959" fg:w="1"/><text x="97.0299%" y="335.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.02%)</title><rect x="96.7799%" y="309" width="0.0195%" height="15" fill="rgb(219,18,35)" fg:x="4959" fg:w="1"/><text x="97.0299%" y="319.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.02%)</title><rect x="96.7799%" y="293" width="0.0195%" height="15" fill="rgb(209,169,16)" fg:x="4959" fg:w="1"/><text x="97.0299%" y="303.50"></text></g><g><title>__GI___nptl_deallocate_tsd (4 samples, 0.08%)</title><rect x="96.7408%" y="341" width="0.0781%" height="15" fill="rgb(245,90,51)" fg:x="4957" fg:w="4"/><text x="96.9908%" y="351.50"></text></g><g><title>std::sys::thread_local::guard::key::enable::run (1 samples, 0.02%)</title><rect x="96.7994%" y="325" width="0.0195%" height="15" fill="rgb(220,99,45)" fg:x="4960" fg:w="1"/><text x="97.0494%" y="335.50"></text></g><g><title>_ZN3std3sys12thread_local6native5eager7destroy17ha19326204e81e571E.llvm.16310062602859225713 (1 samples, 0.02%)</title><rect x="96.8774%" y="325" width="0.0195%" height="15" fill="rgb(249,89,25)" fg:x="4964" fg:w="1"/><text x="97.1274%" y="335.50"></text></g><g><title>__call_tls_dtors (6 samples, 0.12%)</title><rect x="96.8189%" y="341" width="0.1171%" height="15" fill="rgb(239,193,0)" fg:x="4961" fg:w="6"/><text x="97.0689%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="96.8970%" y="325" width="0.0390%" height="15" fill="rgb(231,126,1)" fg:x="4965" fg:w="2"/><text x="97.1470%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="96.9165%" y="309" width="0.0195%" height="15" fill="rgb(243,166,3)" fg:x="4966" fg:w="1"/><text x="97.1665%" y="319.50"></text></g><g><title>__malloc_arena_thread_freeres (2 samples, 0.04%)</title><rect x="96.9360%" y="341" width="0.0390%" height="15" fill="rgb(223,22,34)" fg:x="4967" fg:w="2"/><text x="97.1860%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="96.9555%" y="325" width="0.0195%" height="15" fill="rgb(251,52,51)" fg:x="4968" fg:w="1"/><text x="97.2055%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="96.9555%" y="309" width="0.0195%" height="15" fill="rgb(221,165,28)" fg:x="4968" fg:w="1"/><text x="97.2055%" y="319.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.02%)</title><rect x="96.9555%" y="293" width="0.0195%" height="15" fill="rgb(218,121,47)" fg:x="4968" fg:w="1"/><text x="97.2055%" y="303.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.02%)</title><rect x="96.9555%" y="277" width="0.0195%" height="15" fill="rgb(209,120,9)" fg:x="4968" fg:w="1"/><text x="97.2055%" y="287.50"></text></g><g><title>__GI___clone3 (16 samples, 0.31%)</title><rect x="96.7018%" y="373" width="0.3123%" height="15" fill="rgb(236,68,12)" fg:x="4955" fg:w="16"/><text x="96.9518%" y="383.50"></text></g><g><title>start_thread (16 samples, 0.31%)</title><rect x="96.7018%" y="357" width="0.3123%" height="15" fill="rgb(225,194,26)" fg:x="4955" fg:w="16"/><text x="96.9518%" y="367.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (2 samples, 0.04%)</title><rect x="96.9750%" y="341" width="0.0390%" height="15" fill="rgb(231,84,39)" fg:x="4969" fg:w="2"/><text x="97.2250%" y="351.50"></text></g><g><title>__libc_calloc (2 samples, 0.04%)</title><rect x="97.0141%" y="373" width="0.0390%" height="15" fill="rgb(210,11,45)" fg:x="4971" fg:w="2"/><text x="97.2641%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2 samples, 0.04%)</title><rect x="97.0141%" y="357" width="0.0390%" height="15" fill="rgb(224,54,52)" fg:x="4971" fg:w="2"/><text x="97.2641%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::runtime::EnterRuntimeGuard&gt; (1 samples, 0.02%)</title><rect x="97.0531%" y="373" width="0.0195%" height="15" fill="rgb(238,102,14)" fg:x="4973" fg:w="1"/><text x="97.3031%" y="383.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2 samples, 0.04%)</title><rect x="97.0726%" y="373" width="0.0390%" height="15" fill="rgb(243,160,52)" fg:x="4974" fg:w="2"/><text x="97.3226%" y="383.50"></text></g><g><title>mi_free_block_delayed_mt (3 samples, 0.06%)</title><rect x="97.1116%" y="373" width="0.0585%" height="15" fill="rgb(216,114,19)" fg:x="4976" fg:w="3"/><text x="97.3616%" y="383.50"></text></g><g><title>mi_thread_init (1 samples, 0.02%)</title><rect x="97.1702%" y="373" width="0.0195%" height="15" fill="rgb(244,166,37)" fg:x="4979" fg:w="1"/><text x="97.4202%" y="383.50"></text></g><g><title>_mi_heap_init (1 samples, 0.02%)</title><rect x="97.1702%" y="357" width="0.0195%" height="15" fill="rgb(246,29,44)" fg:x="4979" fg:w="1"/><text x="97.4202%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (1 samples, 0.02%)</title><rect x="97.1897%" y="373" width="0.0195%" height="15" fill="rgb(215,56,53)" fg:x="4980" fg:w="1"/><text x="97.4397%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (4 samples, 0.08%)</title><rect x="97.2092%" y="373" width="0.0781%" height="15" fill="rgb(217,60,2)" fg:x="4981" fg:w="4"/><text x="97.4592%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.08%)</title><rect x="97.2092%" y="357" width="0.0781%" height="15" fill="rgb(207,26,24)" fg:x="4981" fg:w="4"/><text x="97.4592%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3 samples, 0.06%)</title><rect x="97.2287%" y="341" width="0.0585%" height="15" fill="rgb(252,210,15)" fg:x="4982" fg:w="3"/><text x="97.4787%" y="351.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="97.2482%" y="325" width="0.0390%" height="15" fill="rgb(253,209,26)" fg:x="4983" fg:w="2"/><text x="97.4982%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.2678%" y="309" width="0.0195%" height="15" fill="rgb(238,170,14)" fg:x="4984" fg:w="1"/><text x="97.5178%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.2678%" y="293" width="0.0195%" height="15" fill="rgb(216,178,15)" fg:x="4984" fg:w="1"/><text x="97.5178%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (2 samples, 0.04%)</title><rect x="97.2873%" y="373" width="0.0390%" height="15" fill="rgb(250,197,2)" fg:x="4985" fg:w="2"/><text x="97.5373%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="97.3263%" y="373" width="0.0195%" height="15" fill="rgb(212,70,42)" fg:x="4987" fg:w="1"/><text x="97.5763%" y="383.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="97.3458%" y="373" width="0.0195%" height="15" fill="rgb(227,213,9)" fg:x="4988" fg:w="1"/><text x="97.5958%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect x="98.4778%" y="341" width="0.0585%" height="15" fill="rgb(245,99,25)" fg:x="5046" fg:w="3"/><text x="98.7278%" y="351.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="98.5363%" y="309" width="0.0390%" height="15" fill="rgb(250,82,29)" fg:x="5049" fg:w="2"/><text x="98.7863%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="98.5363%" y="293" width="0.0390%" height="15" fill="rgb(241,226,54)" fg:x="5049" fg:w="2"/><text x="98.7863%" y="303.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.12%)</title><rect x="98.5363%" y="341" width="0.1171%" height="15" fill="rgb(221,99,41)" fg:x="5049" fg:w="6"/><text x="98.7863%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (6 samples, 0.12%)</title><rect x="98.5363%" y="325" width="0.1171%" height="15" fill="rgb(213,90,21)" fg:x="5049" fg:w="6"/><text x="98.7863%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.08%)</title><rect x="98.5753%" y="309" width="0.0781%" height="15" fill="rgb(205,208,24)" fg:x="5051" fg:w="4"/><text x="98.8253%" y="319.50"></text></g><g><title>syscall (3 samples, 0.06%)</title><rect x="98.6534%" y="341" width="0.0585%" height="15" fill="rgb(246,31,12)" fg:x="5055" fg:w="3"/><text x="98.9034%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="98.6729%" y="325" width="0.0390%" height="15" fill="rgb(213,154,6)" fg:x="5056" fg:w="2"/><text x="98.9229%" y="335.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (54 samples, 1.05%)</title><rect x="97.7947%" y="357" width="1.0539%" height="15" fill="rgb(222,163,29)" fg:x="5011" fg:w="54"/><text x="98.0447%" y="367.50"></text></g><g><title>tokio::io::blocking::Buf::read_from (7 samples, 0.14%)</title><rect x="98.7119%" y="341" width="0.1366%" height="15" fill="rgb(227,201,8)" fg:x="5058" fg:w="7"/><text x="98.9619%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (4 samples, 0.08%)</title><rect x="98.7705%" y="325" width="0.0781%" height="15" fill="rgb(233,9,32)" fg:x="5061" fg:w="4"/><text x="99.0205%" y="335.50"></text></g><g><title>read (3 samples, 0.06%)</title><rect x="98.7900%" y="309" width="0.0585%" height="15" fill="rgb(217,54,24)" fg:x="5062" fg:w="3"/><text x="99.0400%" y="319.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="98.8290%" y="293" width="0.0195%" height="15" fill="rgb(235,192,0)" fg:x="5064" fg:w="1"/><text x="99.0790%" y="303.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (84 samples, 1.64%)</title><rect x="97.3653%" y="373" width="1.6393%" height="15" fill="rgb(235,45,9)" fg:x="4989" fg:w="84"/><text x="97.6153%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (8 samples, 0.16%)</title><rect x="98.8486%" y="357" width="0.1561%" height="15" fill="rgb(246,42,40)" fg:x="5065" fg:w="8"/><text x="99.0986%" y="367.50"></text></g><g><title>syscall (2 samples, 0.04%)</title><rect x="98.9657%" y="341" width="0.0390%" height="15" fill="rgb(248,111,24)" fg:x="5071" fg:w="2"/><text x="99.2157%" y="351.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (6 samples, 0.12%)</title><rect x="99.0047%" y="373" width="0.1171%" height="15" fill="rgb(249,65,22)" fg:x="5073" fg:w="6"/><text x="99.2547%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (6 samples, 0.12%)</title><rect x="99.0047%" y="357" width="0.1171%" height="15" fill="rgb(238,111,51)" fg:x="5073" fg:w="6"/><text x="99.2547%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (6 samples, 0.12%)</title><rect x="99.0047%" y="341" width="0.1171%" height="15" fill="rgb(250,118,22)" fg:x="5073" fg:w="6"/><text x="99.2547%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2194%" y="341" width="0.0195%" height="15" fill="rgb(234,84,26)" fg:x="5084" fg:w="1"/><text x="99.4694%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.16%)</title><rect x="99.2194%" y="357" width="0.1561%" height="15" fill="rgb(243,172,12)" fg:x="5084" fg:w="8"/><text x="99.4694%" y="367.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (7 samples, 0.14%)</title><rect x="99.2389%" y="341" width="0.1366%" height="15" fill="rgb(236,150,49)" fg:x="5085" fg:w="7"/><text x="99.4889%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3560%" y="325" width="0.0195%" height="15" fill="rgb(225,197,26)" fg:x="5091" fg:w="1"/><text x="99.6060%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (22 samples, 0.43%)</title><rect x="99.1218%" y="373" width="0.4294%" height="15" fill="rgb(214,17,42)" fg:x="5079" fg:w="22"/><text x="99.3718%" y="383.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (9 samples, 0.18%)</title><rect x="99.3755%" y="357" width="0.1756%" height="15" fill="rgb(224,165,40)" fg:x="5092" fg:w="9"/><text x="99.6255%" y="367.50"></text></g><g><title>syscall (2 samples, 0.04%)</title><rect x="99.5121%" y="341" width="0.0390%" height="15" fill="rgb(246,100,4)" fg:x="5099" fg:w="2"/><text x="99.7621%" y="351.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2 samples, 0.04%)</title><rect x="99.5511%" y="373" width="0.0390%" height="15" fill="rgb(222,103,0)" fg:x="5101" fg:w="2"/><text x="99.8011%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.04%)</title><rect x="99.5902%" y="373" width="0.0390%" height="15" fill="rgb(227,189,26)" fg:x="5103" fg:w="2"/><text x="99.8402%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.02%)</title><rect x="99.6097%" y="357" width="0.0195%" height="15" fill="rgb(214,202,17)" fg:x="5104" fg:w="1"/><text x="99.8597%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.02%)</title><rect x="99.6097%" y="341" width="0.0195%" height="15" fill="rgb(229,111,3)" fg:x="5104" fg:w="1"/><text x="99.8597%" y="351.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="99.6097%" y="325" width="0.0195%" height="15" fill="rgb(229,172,15)" fg:x="5104" fg:w="1"/><text x="99.8597%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.02%)</title><rect x="99.6292%" y="373" width="0.0195%" height="15" fill="rgb(230,224,35)" fg:x="5105" fg:w="1"/><text x="99.8792%" y="383.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.04%)</title><rect x="99.6487%" y="373" width="0.0390%" height="15" fill="rgb(251,141,6)" fg:x="5106" fg:w="2"/><text x="99.8987%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.02%)</title><rect x="99.8244%" y="341" width="0.0195%" height="15" fill="rgb(225,208,6)" fg:x="5115" fg:w="1"/><text x="100.0744%" y="351.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="99.8244%" y="325" width="0.0195%" height="15" fill="rgb(246,181,16)" fg:x="5115" fg:w="1"/><text x="100.0744%" y="335.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="99.8244%" y="309" width="0.0195%" height="15" fill="rgb(227,129,36)" fg:x="5115" fg:w="1"/><text x="100.0744%" y="319.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="99.8244%" y="293" width="0.0195%" height="15" fill="rgb(248,117,24)" fg:x="5115" fg:w="1"/><text x="100.0744%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.8244%" y="277" width="0.0195%" height="15" fill="rgb(214,185,35)" fg:x="5115" fg:w="1"/><text x="100.0744%" y="287.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9 samples, 0.18%)</title><rect x="99.6877%" y="373" width="0.1756%" height="15" fill="rgb(236,150,34)" fg:x="5108" fg:w="9"/><text x="99.9377%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.10%)</title><rect x="99.7658%" y="357" width="0.0976%" height="15" fill="rgb(243,228,27)" fg:x="5112" fg:w="5"/><text x="100.0158%" y="367.50"></text></g><g><title>tokio::runtime::task::waker::waker_ref (1 samples, 0.02%)</title><rect x="99.8439%" y="341" width="0.0195%" height="15" fill="rgb(245,77,44)" fg:x="5116" fg:w="1"/><text x="100.0939%" y="351.50"></text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.08%)</title><rect x="99.8634%" y="373" width="0.0781%" height="15" fill="rgb(235,214,42)" fg:x="5117" fg:w="4"/><text x="100.1134%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.02%)</title><rect x="99.9415%" y="373" width="0.0195%" height="15" fill="rgb(221,74,3)" fg:x="5121" fg:w="1"/><text x="100.1915%" y="383.50"></text></g><g><title>all (5,124 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(206,121,29)" fg:x="0" fg:w="5124"/><text x="0.2500%" y="415.50"></text></g><g><title>tokio-runtime-w (221 samples, 4.31%)</title><rect x="95.6870%" y="389" width="4.3130%" height="15" fill="rgb(249,131,53)" fg:x="4903" fg:w="221"/><text x="95.9370%" y="399.50">tokio..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (2 samples, 0.04%)</title><rect x="99.9610%" y="373" width="0.0390%" height="15" fill="rgb(236,170,29)" fg:x="5122" fg:w="2"/><text x="100.2110%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.02%)</title><rect x="99.9805%" y="357" width="0.0195%" height="15" fill="rgb(247,96,15)" fg:x="5123" fg:w="1"/><text x="100.2305%" y="367.50"></text></g></svg></svg>